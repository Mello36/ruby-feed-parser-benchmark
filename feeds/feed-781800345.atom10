<?xml version='1.0' encoding='UTF-8'?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-7067202814937947569</id><updated>2008-12-11T04:13:01.723-08:00</updated><title type='text'>Liminal Existence</title><subtitle type='html'></subtitle><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/'/><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://romeda.org/blog/atom.xml'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>23</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-2025046817298270591</id><published>2008-05-12T08:53:00.000-07:00</published><updated>2008-05-12T09:04:49.886-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='performance'/><category scheme='http://www.blogger.com/atom/ns#' term='reliability'/><category scheme='http://www.blogger.com/atom/ns#' term='velocity'/><category scheme='http://www.blogger.com/atom/ns#' term='scalability'/><category scheme='http://www.blogger.com/atom/ns#' term='jesse robbins'/><title type='text'>Velocity</title><content type='html'>&lt;p&gt;If you're interested in scalability and performance as it pertains to internet applications, or if you're involved in or looking to build a reliable internet-based system, go to &lt;a href="http://en.oreilly.com/velocity2008/public/content/home"&gt;Velocity&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was fortunate enough to attend the O'Reilly &lt;a href="http://lethargy.org/~jesus/archives/106-A-job,-a-mission,-a-career-all-without-a-path-or-a-name..html"&gt;Velocity Summit&lt;/a&gt; back in January, which was a Foo-Style event designed to provide some context leading into the actual conference in June. If the conference is one tenth as good as the summit, it will be amazing. &lt;a href="http://radar.oreilly.com/jesse/"&gt;Jesse&lt;/a&gt; is an amazing organizer and a man with a vision.&lt;/p&gt;

&lt;p&gt;Anyhow, instead of reading my &lt;a href="http://romeda.org/blog/2008/05/scalability.html"&gt;off-the-cuff posts&lt;/a&gt; about obvious things that are much more fun to talk about while &lt;a href="http://www.futureofwebapps.com/2008/miami/"&gt;drinking in Miami&lt;/a&gt;, go to Velocity and learn this stuff for real.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/2025046817298270591/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=2025046817298270591&amp;isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2025046817298270591'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2025046817298270591'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2008/05/velocity.html' title='Velocity'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-1187948019010202083</id><published>2008-05-11T18:57:00.000-07:00</published><updated>2008-05-12T12:27:43.374-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ruby'/><category scheme='http://www.blogger.com/atom/ns#' term='java'/><category scheme='http://www.blogger.com/atom/ns#' term='rails'/><category scheme='http://www.blogger.com/atom/ns#' term='scalability'/><category scheme='http://www.blogger.com/atom/ns#' term='perl'/><category scheme='http://www.blogger.com/atom/ns#' term='tcsh'/><category scheme='http://www.blogger.com/atom/ns#' term='scala'/><title type='text'>Scalability</title><content type='html'>&lt;p&gt;&lt;b&gt;Updated:&lt;/b&gt; Go read Steve's &lt;a href="http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html"&gt;Dynamic Languages Strike Back&lt;/a&gt;. It's a longer read, but it's much more interesting, and he's much smarter than I am.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://ola-bini.blogspot.com/2008/05/just-add-scaling.html"&gt;LOL.&lt;/a&gt; &amp;lt;-- this is a link. Read Ola's post, first.&lt;/p&gt;

&lt;p&gt;For all those who don't get it, &lt;i&gt;languages don't scale, architectures do.&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;Now, some languages are &lt;i&gt;faster&lt;/i&gt; than others. That means that to complete a given operation, it &lt;i&gt;costs less&lt;/i&gt;, everything else being equal. Costing less is a good thing. But developers also cost money, so if you have to spend money on developers' time porting from one language to another then you might not be saving any money at all, and really you're just treading water.&lt;/p&gt;

&lt;p&gt;Once upon a time, &lt;i&gt;Shell Scripts&lt;/i&gt; were used to &lt;a href="http://docs.rinet.ru/UNIXi/ch18.htm"&gt;write CGI applications&lt;/a&gt;. With the correct architecture, and enough money, you could build &lt;a href="http://google.com"&gt;Google&lt;/a&gt; with &lt;a href="http://www.tcsh.org/Welcome"&gt;tcsh&lt;/a&gt;. No, really. It wouldn't be fun, and you'd be dumb, because there are &lt;b&gt;much&lt;/b&gt; &lt;i&gt;cheaper&lt;/i&gt; ways to do it. But then again, if you stuck with it, perhaps you'd optimize tcsh to be really fast at spawning and serving up web requests. Faster than Java, faster than &amp;lt;insert your favourite language here&amp;gt;. Faster means &lt;i&gt;cheaper&lt;/i&gt;, it doesn't mean more &lt;i&gt;scalable&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;I point to &lt;a href="http://www.tbray.org/ongoing/When/200x/2007/10/30/WF-Results"&gt;exhibit A&lt;/a&gt;. Perl used to be &lt;a href="http://furryland.org/~mikec/bench/"&gt;slow&lt;/a&gt;. Now it beats JoCaml with the bestest concurrency (re: &amp;ldquo;Scalability&amp;rdquo;) around. What was Perl built for? Parsing text. Lots of it. All the time. It's fast. Does it mean that you can't build Wide Finder with another language? Absolutely not. Does it mean that you couldn't build Wide Finder to scale out to a trillion documents with gawk? If you answered &amp;ldquo;yes&amp;rdquo;, go back to the start of this post and read again! :-) If you're still answering &amp;ldquo;yes,&amp;rdquo; try reading some more. &lt;a href="http://randomfoo.net/blog/id/4171"&gt;Leonard&lt;/a&gt;, &lt;a href="http://teddziuba.com/2008/04/im-going-to-scale-my-foot-up-y.html"&gt;Ted&lt;/a&gt;, &lt;a href="http://www.joestump.net/2008/04/its-not-the-language-stupid.html"&gt;Joe&lt;/a&gt;, &lt;a href="http://www.amazon.com/Building-Scalable-Web-Sites-applications/dp/0596102356/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1210561240&amp;sr=8-1"&gt;Cal&lt;/a&gt;, and &lt;a href="http://www.amazon.com/Scalable-Internet-Architectures-Developers-Library/dp/067232699X/ref=pd_sim_b_img_1"&gt;Theo&lt;/a&gt; are good places to start.

&lt;p&gt;If you answered &amp;ldquo;no,&amp;rdquo; congratulations! Pat yourself on the back for knowing what &lt;a href="http://en.wikipedia.org/wiki/Scalability"&gt;scalability&lt;/a&gt; means. &lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/1187948019010202083/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=1187948019010202083&amp;isPopup=true' title='15 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/1187948019010202083'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/1187948019010202083'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2008/05/scalability.html' title='Scalability'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>15</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-6940345678945766594</id><published>2008-03-08T06:59:00.000-08:00</published><updated>2008-03-09T08:25:28.581-07:00</updated><title type='text'>FoWA Miami Rocked.</title><content type='html'>&lt;p&gt;I've been busy getting [Twitter] ready for SXSW, and have completely failed at email and, well, everything except work, since then. Before I &lt;span style="text-decoration: line-through"&gt;actually land&lt;/span&gt; get drunk in Austin, I wanted to make a quick post about how great &lt;a href="http://www.futureofwebapps.com/2008/miami/"&gt;FoWA Miami&lt;/a&gt; was.&lt;/p&gt;

&lt;p&gt;After giving my workshop, I attended &lt;a href="http://www.joestump.net/"&gt;Joe's&lt;/a&gt; workshop on scalability, which was an amazingly thorough discussion, and I highly recommend attending anything that Joe does in the future (including the panel that he, Cal, and others are on at SxSW. I didn't catch many of the session talks on Friday, as I spent much of my time talking to attendees, but  the "Building a Web App in 45 minutes" panel was a fun experiment, and both &lt;a href="http://iamcal.com/"&gt;Cal&lt;/a&gt; and &lt;a href="http://tv.winelibrary.com/"&gt;Gary&lt;/a&gt; were energetic, brilliant, amazing, all that good stuff. If you get a chance to see either of them speak, don't pass it up. Especially Gary, as you're likely to get free wine, even if he makes you eat dirt beforehand.&lt;/p&gt;

&lt;p&gt;I had some hiccups during the demo / discussion portion of my workshop, but the first part went well, I think, and I'm looking forward to some great applications that incorporate Jabber soon. My talk, "Bringing your web app to the masses" went well, except for the part where Twitter went down in the middle of it, and I got a call from work (which I waited until after the talk to answer).&lt;/p&gt;

&lt;p&gt;Some heckling ensued, but I was happy to be able to address the audience's questions about Twitter in an open and honest way. The atmosphere that Carsonified has managed to foster at FoWA helped a ton.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://randommel.com/"&gt;Mel&lt;/a&gt;, &lt;a href="http://ryancarson.com/"&gt;Ryan&lt;/a&gt;, &lt;a href="http://www.carsonified.com/about-us"&gt;Lisa&lt;/a&gt;, &lt;a href="http://www.fiveandlime.com/"&gt;Keir&lt;/a&gt;, and &lt;a href="http://elliotjaystocks.com/blog"&gt;Elliot&lt;/a&gt; did a fantastic job organizing everything, and &lt;a href="http://tantek.com/"&gt;Tantek&lt;/a&gt; and &lt;a href="http://brianoberkirch.com/"&gt;Brian&lt;/a&gt; put together an amazing lineup of speakers and workshops. Seriously inspiring stuff.&lt;/p&gt;

&lt;p&gt;If they'll have me, I'll definitely be going to any conferences they hold in the future. They've come a long way since the FoWA San Francisco in Fall 2006, and it looks like they'll just keep getting better.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/6940345678945766594/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=6940345678945766594&amp;isPopup=true' title='4 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6940345678945766594'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6940345678945766594'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2008/03/ive-been-busy-getting-twitter-ready-for.html' title='FoWA Miami Rocked.'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-8254929934401606469</id><published>2008-02-21T10:51:00.000-08:00</published><updated>2008-02-21T11:43:53.337-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jabber'/><category scheme='http://www.blogger.com/atom/ns#' term='email'/><category scheme='http://www.blogger.com/atom/ns#' term='health'/><category scheme='http://www.blogger.com/atom/ns#' term='security'/><category scheme='http://www.blogger.com/atom/ns#' term='google'/><category scheme='http://www.blogger.com/atom/ns#' term='privacy'/><title type='text'>Google Entaglement</title><content type='html'>&lt;p&gt;I've done a &lt;a href="http://resist.ca/"&gt;fair&lt;/a&gt; bit of &lt;a href="http://oauth.net/"&gt;security&lt;/a&gt; work, and generally try to care about the &lt;a href="http://citp.princeton.edu/memory/"&gt;finer details&lt;/a&gt; of privacy and security. However, one of the things that I've learned is that more often than not, no amount of digital security past a certain point is going to help, since usually the &lt;a href="http://en.wikipedia.org/wiki/Green_Scare"&gt;threat model&lt;/a&gt; isn't an advanced technological attack, it's a social one.&lt;/p&gt;

&lt;p&gt;Thus far, Google has done a pretty good job of keeping private things private and public things public. I've spoken to people on the Google Reader team, and the main reason they haven't added support for private feeds is their acute concern for privacy.&lt;/p&gt;

&lt;p&gt;Today Google announced a &lt;a href="http://bits.blogs.nytimes.com/2008/02/21/google-health-begins-its-preseason-at-cleveland-clinic/?ref=technology"&gt;limited trial of storing health records&lt;/a&gt; online. This seems reasonable and doable in a secure way, but I'm sure they'll get lots of unwarranted flak for the long-awaited project.&lt;/p&gt;

&lt;p&gt;However, there will and should be some warranted flak. It turns out that they're using your regular Google account to store this information, and will provide access to it using your regular password, no doubt through yet another Google login page. I've heard concerns that &lt;a href="http://oauth.net/"&gt;OAuth&lt;/a&gt; supports phishing (from Google people), but project infighting and power struggles at Google that result in &lt;a href="http://gmail.com/"&gt;tens&lt;/a&gt; of &lt;a href="http://blogger.com/"&gt;login&lt;/a&gt; &lt;a href="https://www.google.com/accounts/ServiceLogin?service=dodgeball&amp;amp;ltmpl=duallogin"&gt;pages&lt;/a&gt;, all slightly (or dramatically) different, all using the same credentials supports phishing much moreso.&lt;/p&gt;

&lt;p&gt;I strongly support patients' rights to access their medical information, and Google is probably one of just a handful of organizations that can do the necessary coordination work and stand up to invasive organizations at scale. However, they need to stop thinking of this data as &lt;span style="font-weight: bold;"&gt;theirs&lt;/span&gt;, because it's not — it's &lt;span style="font-weight: bold;"&gt;your&lt;/span&gt; data. Using the same password as your &lt;span style="font-style: italic;"&gt;email&lt;/span&gt; to access your &lt;span style="font-style: italic;"&gt;health records&lt;/span&gt; is something that should be actively discouraged. If Google wants to present a unified interface, they should expose an API and use OAuth or AuthSub, just like any other third party that would consume the data.&lt;/p&gt;

&lt;p&gt;Now, I may be over-reacting, but I had an interaction yesterday that suggests to me that I'm not. Someone using GTalk sent a chat request to blaine@twitter.com; this email address has an MX record that resolves to mail.twitter.com, and the corresponding JID resolves to jabber01.twitter.com. However, I have claimed my blaine@twitter.com address on GMail, and associated it with my primary GTalk ID (romeda@gmail.com). When I accepted the chat request, the response came from my GTalk account, romeda@gmail.com.&lt;/p&gt;

&lt;p&gt;In effect, Google had done something clever, and in so doing broke the Jabber spec, ignored my own self-hosted Jabber server, and&lt;span style="font-style: italic;"&gt; exposed my personal email address&lt;/span&gt; without asking my permission.&lt;/p&gt;

&lt;p&gt;In this case, it wasn't a big deal, I don't care, etc. Others might, though, and I only knew that it was happening because the person on the other end of the chat was tech-savvy enough to realize what had happened. Also, email addresses and connections between them are hardly closely-guarded secrets. The thing I take away from this is that Google is being sloppy. There's a lot going on, and it's hard to keep track of it all. That your health records are being tied to your Google account just reeks of some power struggle where the Google account people want to bolster their product's internal importance (or have managed to do so that they get veto power where they shouldn't have it), and it's simply not a pragmatic choice. There's a reason your health records aren't stored at the DMV, and it's not out of convenience. Just sayin'.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/8254929934401606469/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=8254929934401606469&amp;isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/8254929934401606469'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/8254929934401606469'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2008/02/google-entaglement.html' title='Google Entaglement'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-632258650818085448</id><published>2008-01-20T23:19:00.000-08:00</published><updated>2008-01-20T23:51:45.705-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fowa miami'/><category scheme='http://www.blogger.com/atom/ns#' term='xmpp'/><category scheme='http://www.blogger.com/atom/ns#' term='fowa'/><category scheme='http://www.blogger.com/atom/ns#' term='february'/><category scheme='http://www.blogger.com/atom/ns#' term='talk'/><title type='text'>FoWA Miami</title><content type='html'>&lt;p&gt;Just a quick note that I'll be giving a &lt;a href="http://futureofwebapps.com/2008/miami/workshops.php"&gt;workshop&lt;/a&gt; on building real-time web applications using Jabber at the &lt;a href="http://futureofwebapps.com/2008/miami/"&gt;Future of Web Apps&lt;/a&gt; in Miami, on February 28th. The conference runs from the 28th to the 1st of March, and should be a lot of fun.
&lt;/p&gt;&lt;p&gt;We've been gradually improving the Jabber stack on Twitter, and we're now sending millions of messages every day, doing things that just don't fit into the polling-based world of Atom feeds. There are a ton of extremely awesome things that can be built, and so far we've just scratched the surface.&lt;/p&gt;More to come; if I don't start blogging these things in small pieces, they'll never come.</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/632258650818085448/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=632258650818085448&amp;isPopup=true' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/632258650818085448'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/632258650818085448'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2008/01/fowa-miami.html' title='FoWA Miami'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-4992983206982500025</id><published>2007-09-01T18:39:00.000-07:00</published><updated>2007-09-01T18:51:06.580-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='twitter scaling rails ruby'/><title type='text'>Stability</title><content type='html'>&lt;p&gt;Most of the Twitter team's work in the weeks  leading up to launching &lt;a href="http://explore.twitter.com/blocks/"&gt;Blocks&lt;/a&gt; was to ensure that it wouldn't fall over as soon as we released it. It's an extremely punishing application, loading 10 timelines on every occasion that someone looks at it. So far, the servers haven't even noticed.&lt;/p&gt;

&lt;p&gt;There have been a number of Twitter hiccups in the past few weeks, but they've all been weird, random bugs. Which is not to make excuses, but rather to say that in spite of (very time-consuming) challenges along the way, we've been myopically focused on making the site faster and more reliable. As evidence, here's a graph of page load times, as seen from an external observer:&lt;/p&gt;

&lt;img src="http://romeda.org/blog/uploaded_images/twitter.com-.rrd-Load-times-for-one-month-780093.png" alt="Twitter Load Times, as monitored by an external observer, over the past month."&gt;

&lt;p&gt;We're going to keep building a faster and more reliable Twitter. We're also going to add some awesome new features, and soon. Possibly better than contact search and GMail, even! Finally, we'll have more visualizations from the Stamen folks. &lt;a href="http://lukewarmtapioca.com/"&gt;Britt&lt;/a&gt; is off to Berlin for &lt;a href="http://www.railsconfeurope.com/"&gt;RailsConf&lt;/a&gt; mid-September. We'll then have more details about what we're doing to push Rails and Twitter.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/4992983206982500025/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=4992983206982500025&amp;isPopup=true' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/4992983206982500025'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/4992983206982500025'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/09/stability.html' title='Stability'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-6359957087413047189</id><published>2007-09-01T15:58:00.000-07:00</published><updated>2007-09-01T18:28:57.929-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='folly blocks twitter stamen schulze webb jane mcgonigal design fun architecture'/><title type='text'>These are the people ...</title><content type='html'>&lt;a href="http://en.wikipedia.org/wiki/Folly"&gt;Folly&lt;/a&gt;: "In architecture, a folly is an extravagant, frivolous or fanciful building, designed more for artistic expression than for practicality." &amp;#8211; via &lt;a href="http://del.icio.us/url/844681fe17e3f7db16043e6028f714e1"&gt;Tom Coates&lt;/a&gt;, by way of &lt;a href="http://tom-carden.co.uk/"&gt;Tom Carden&lt;/a&gt;.

&lt;p&gt;We just released &lt;a href="http://explore.twitter.com/blocks/"&gt;Twitter Blocks&lt;/a&gt;, a nice little visualisation done by the good folks at &lt;a href="http://stamen.com/"&gt;Stamen Design&lt;/a&gt;. It's fun! Go play!&lt;/p&gt;

&lt;p&gt;Stamen's recent work highlights the playfulness inherent to Twitter. I can't wait to release more of these interfaces, and hope that it inspires similar work. Sam Ruby, Tim Bray and others have recently weighed in with their long bets. I'm willing to put down that playfulness &amp;#8212; of the sort that Stamen, &lt;a href="http://schulzeandwebb.com/"&gt;Schulze &amp;amp; Webb&lt;/a&gt; and &lt;a href="http://avantgame.com/"&gt;Jane McGonigal&lt;/a&gt; explore and invent daily &amp;#8212; is so important to who we are as people that the tech world won't be able to ignore it for much longer.&lt;/p&gt;

&lt;p&gt;Not exactly a risky bet, but too often the tech industry just ignores these things, so there it is, just for kicks.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/6359957087413047189/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=6359957087413047189&amp;isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6359957087413047189'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6359957087413047189'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/09/these-are-people.html' title='These are the people ...'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-5304701516772212913</id><published>2007-06-21T12:44:00.000-07:00</published><updated>2007-06-21T14:48:28.363-07:00</updated><title type='text'>SELECT * FROM everything, or why databases are awesome.</title><content type='html'>&lt;p&gt;I've just committed a &lt;a href="http://dev.rubyonrails.org/ticket/8713"&gt;patch&lt;/a&gt; to ActiveRecord that prevents a large number of very, very bad queries from hitting your database. Go update your code, ASAP.&lt;/p&gt;

&lt;p&gt;We've made some pretty significant progress towards scaling Twitter, and we're now at the point where the majority of requests that hit our site complete in less than 70 ms (mostly API requests), and the really complicated front-end pages that we display complete in less than 160 ms. There are still a lot of hiccups, so the average is higher than that, but we're constantly working on getting it down.&lt;/p&gt;

&lt;p&gt;One of the consistent problems we've been facing is errant queries. We've been seeing (off and on) queries like:&lt;br/&gt;&lt;br/&gt;
&lt;tt&gt;SELECT * FROM statuses WHERE user_id = 234223 ORDER BY created_at&lt;/tt&gt;
&lt;br/&gt;&lt;br/&gt;
If you know anything about relational databases, this is a &lt;b&gt;very bad thing&lt;/b&gt;, especially when you have users that have more than 20,000 statuses.&lt;/p&gt;

&lt;p&gt;One major downside of having an object-relational mapper is that you don't always control what goes on behind the scenes. In tracking down this problem, first we investigated all our code, and weren't able to find the source of these problems. Switching tactics, we isolated some test cases that replicated the problem and brought out the big guns: &lt;a href="http://www.tbray.org/ongoing/When/200x/2004/06/17/DeDebPrint"&gt;print&lt;/a&gt;. This pretty quickly brought us to an obscure corner of the ActiveRecord source (three cheers for source code!), where it became apparent that Rails was doing these gigantic loads from the database every time we saved even a single field in a related object. There are a bunch of mitigating circumstances that mean that this bug doesn't get triggered all the time, but it's still really really bad.&lt;/p&gt;

&lt;p&gt;Thankfully, the patch &lt;strike&gt;will be committed soon&lt;/strike&gt; has been committed (32 minutes patch-to-commit!), and no-one will have to deal with, as &lt;a href="http://blog.codahale.com/"&gt;Coda&lt;/a&gt; put it: "Arg stabby stab stab stabbity fuck stab" anymore. The fact that no-one noticed really speaks to how freaking awesome relational databases (in our case, MySQL) are these days.&lt;/p&gt;

&lt;p&gt;Perhaps underlying all of this is the simple fact that most of the time, ActiveRecord and Rails in general is pretty solid, and Ruby underneath is a fully sound language with which to build high-volume services. &lt;a href="http://glu.ttono.us/articles/2007/06/21/powerset-to-launch-front-end-on-ruby"&gt;Kevin&lt;/a&gt; over at PowerSet has more on the topic - they've recently announced that they'll be doing their front-end development in Ruby (up until now, it's just been a glue language internally).&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/5304701516772212913/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=5304701516772212913&amp;isPopup=true' title='9 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/5304701516772212913'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/5304701516772212913'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/06/select-from-everything-or-why-databases.html' title='SELECT * FROM everything, or why databases are awesome.'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>9</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-5563285600741733265</id><published>2007-05-18T03:30:00.000-07:00</published><updated>2007-05-18T03:36:24.867-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='twitter railsconf ruby al3x britt pdx'/><title type='text'>Twitter at RailsConf</title><content type='html'>&lt;p&gt;Sadly, I won't be attending RailsConf in Portland this weekend. I'll be finishing up at XTech, followed by a (well-deserved) week relaxing / adventuring in Morocco. Photos will follow.&lt;/p&gt;

&lt;p&gt;In the meantime, if you're one of the lucky &lt;strike&gt;few&lt;/strike&gt; many attending RailsConf, &lt;a href="http://al3x.net/"&gt;Alex&lt;/a&gt; and &lt;a href="http://lukewarmtapioca.com/"&gt;Britt&lt;/a&gt; will be speaking 10:45 AM on Sunday. They may or may not being doing a reprise of my &lt;a href="http://www.slideshare.net/Blaine/scaling-twitter/"&gt;Scaling Twitter&lt;/a&gt; talk, but I'm sure it will be fantastic in any event.&lt;/p&gt;

&lt;/p&gt;Wish I were there, have fun all!&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/5563285600741733265/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=5563285600741733265&amp;isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/5563285600741733265'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/5563285600741733265'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/05/twitter-at-railsconf.html' title='Twitter at RailsConf'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-4991931993759430822</id><published>2007-05-17T01:58:00.000-07:00</published><updated>2007-05-17T04:09:04.305-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='xtech2007 xtech kellan jabber paris'/><title type='text'>Social Software for Robots Slides Up</title><content type='html'>&lt;p&gt;I've uploaded the &lt;a href="http://www.slideshare.net/Blaine/social-software-for-robots/"&gt;Social Software for Robots&lt;/a&gt; slides for the messaging/jabber talk that &lt;a href="http://laughingmeme.org/"&gt;Kellan&lt;/a&gt; and I gave yesterday at &lt;a href="http://2007.xtech.org"&gt;XTech 2007&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I think the talk went well, aside from a hiccup getting all the stars aligned to show the visualization that &lt;a href="http://www.tom-carden.co.uk/"&gt;Tom&lt;/a&gt; helped us put together. For those who missed it, I'm hoping that Kellan or I or both will give reprises at other upcoming conferences. There's a lot of potential here, and things are finally reaching the point where real-time APIs are not only becoming a reality, but a necessity.&lt;/p&gt;

&lt;p&gt;XTech has been great fun so far, and there are a number of talks that I'm looking forward to today and tomorrow. Huge thanks to Edd and everyone else who's helped put it together.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/4991931993759430822/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=4991931993759430822&amp;isPopup=true' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/4991931993759430822'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/4991931993759430822'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/05/social-software-for-robots-slides-up.html' title='Social Software for Robots Slides Up'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-3499843118609470360</id><published>2007-04-22T12:49:00.000-07:00</published><updated>2007-04-22T13:13:46.088-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='twitter scaling presentation sdforum rails ruby xtech jabber xmpp kellan'/><title type='text'>Slides for Scaling Twitter talk, XTech next up.</title><content type='html'>&lt;p&gt;The slides from the talk are &lt;a href="http://www.slideshare.net/Blaine/scaling-twitter/"&gt;available on SlideShare&lt;/a&gt;. They don't spell out the talk, so if you have questions, please do ask.&lt;/p&gt;

&lt;p&gt;I'm really excited about &lt;a href="http://2007.xtech.org/"&gt;XTech&lt;/a&gt;, coming up in a few weeks (May 15th-18th) in Paris. I'll be speaking with &lt;a href="http://laughingmeme.org/"&gt;Kellan&lt;/a&gt; about using &lt;a href="http://2007.xtech.org/public/schedule/detail/197"&gt;Jabber to build Social Software for Robots&lt;/a&gt;. Lots of awesome people and talks there, should be a lot of fun.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/3499843118609470360/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=3499843118609470360&amp;isPopup=true' title='6 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/3499843118609470360'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/3499843118609470360'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/04/slides-for-scaling-twitter-talk-xtech.html' title='Slides for Scaling Twitter talk, XTech next up.'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>6</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-7863582060092630231</id><published>2007-04-13T12:51:00.000-07:00</published><updated>2007-04-13T12:54:14.092-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='twitter scaling presentation sdforum rails ruby'/><title type='text'>Scaling Twitter, The Talk.</title><content type='html'>&lt;p&gt;Simon Willison &lt;a href="http://simonwillison.net/2007/Apr/12/question/"&gt;linked&lt;/a&gt; to &lt;a href="http://www.radicalbehavior.com/5-question-interview-with-twitter-developer-alex-payne/"&gt;an interview with Alex Payne&lt;/a&gt;, one of my co-workers on Twitter. This &lt;a href="http://www.loudthinking.com/arc/000608.html"&gt;caused&lt;/a&gt; &lt;a href="http://lucasjosh.com/blog/2007/04/13/twitter-rails-and-scaling/"&gt;a&lt;/a&gt; &lt;a href="http://discuss.joelonsoftware.com/default.asp?joel.3.479387"&gt;bit&lt;/a&gt; &lt;a href="http://www.alexrudloff.com/2007/04/12/twitter-developer-calls-out-ruby-on-rails/
"&gt;of&lt;/a&gt; &lt;a href="http://rc3.org/2007/04/twitter_develop.php"&gt;a&lt;/a&gt; &lt;a href="http://tomayko.com/weblog/2007/04/13/rails-multiple-connections"&gt;stir&lt;/a&gt;, so &lt;a href="http://www.agenturblog.de/2007-04/ruby-is-slow/"&gt;apparently&lt;/a&gt; there's some &lt;a href="http://laughingmeme.org/2007/04/12/twitter-ruby-and-scaling/"&gt;interest&lt;/a&gt; in our experience scaling Twitter, and Rails.&lt;/p&gt;

&lt;p&gt;We've been extremely happy with Rails, and make use of the multitude of helpers that it offers us - like any application on any stack, though, providing fast response times to a (rapidly) growing number of users is a challenge. The solutions are often tightly coupled to the application and its characteristics, and while scaling the most trafficked Rails site in the world, we've run into situations where existing solutions weren't enough.&lt;/p&gt;

&lt;p&gt;This process has led us to build a number of tools that help us deal with our load, and just as soon as we find some spare time, we'll be releasing many of them. In the meantime, you can find out first what sorts of challenges we've encountered and solutions we've come up with at my talk at the SDForum &lt;a href="http://www.sdforum.org/SDForum/Templates/CalendarEvent.aspx?CID=2135&amp;mo=4&amp;yr=2007"&gt;Silicon Valley Ruby Conference&lt;/a&gt; next weekend (April 21-22nd).&lt;/p&gt;

&lt;p&gt;I'll be focusing on ActiveRecord and database optimization, caching, and of course, Messaging. I'll also touch on some areas where we haven't had great successes (yet), and hopefully someone from the audience will shout out that there's some totally obvious and awesome thing that we haven't thought of, and it'll save us weeks of work (no, I'm serious. Does someone want to take bets?).&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/7863582060092630231/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=7863582060092630231&amp;isPopup=true' title='4 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/7863582060092630231'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/7863582060092630231'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/04/scaling-twitter-talk.html' title='Scaling Twitter, The Talk.'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-7550755293606991790</id><published>2007-04-01T11:48:00.000-07:00</published><updated>2007-04-01T18:39:18.618-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mapreduce ruby code'/><title type='text'>MapReduce in 36 lines of Ruby</title><content type='html'>This has been burning a hole in my head since August, after &lt;a href="http://www.joelonsoftware.com/items/2006/08/01.html"&gt;Joel's post&lt;/a&gt; made it blindingly obvious that Ruby is the perfect language for distributed programming. I have some code that properly implements partitioning, etc, but never got around to finishing it sufficiently for a proper release. Here's the core idea; if anyone wants the partitioning code, ping me at romeda@gmail.com.

mapreduce_enumerable.rb:

&lt;pre&gt;&lt;code&gt;
require 'rubygems'
require 'ringy_dingy'
require 'ruby2ruby'

module Enumerable
  def dmap(&amp;block)
    self.each_with_index do |element,idx|
      ring_server.write([:dmap, Process.pid, block.to_ruby, element, idx])
    end

    results = []
    while results.size &lt; self.size
      result, idx = ring_server.take([:dmap, Process.pid, nil, nil]).last(2)
      results[idx] = result
    end

    results
  end

  def ring_server
    return @ring_server if @ring_server

    ringy_dingy = RingyDingy.new nil
    @ring_server = ringy_dingy.ring_server
  end
end
&lt;/code&gt;&lt;/pre&gt;

mapreduce_runner.rb:

&lt;pre&gt;&lt;code&gt;
require 'rubygems'
require 'ruby2ruby'
require 'ringy_dingy'

ringy_dingy = RingyDingy.new nil
ring_server = ringy_dingy.ring_server

loop do
  pid, block, element, idx = ring_server.take([:dmap, nil, nil, nil, nil]).last(4)
  begin
    result = eval(block).call(element)
  rescue Object =&gt; err
    result = err
  end
  puts "Got #{result} from #{element} for #{pid}."
  ring_server.write([:dmap, pid, result, idx])
end
&lt;/code&gt;&lt;/pre&gt;

From the shell:

&lt;pre&gt;
$ sudo gem install RingyDingy
$ sudo gem install ruby2ruby
$ ring_server &amp;
$ ruby mapreduce_runner &amp;
$ ruby mapreduce_runner &amp;
&lt;/pre&gt;

From irb:

&lt;pre&gt;&lt;code&gt;
&gt; require 'mapreduce_enumerable'
&gt; (1..100).to_a.dmap { |v| v * 2 }
&lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/7550755293606991790/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=7550755293606991790&amp;isPopup=true' title='6 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/7550755293606991790'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/7550755293606991790'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2007/04/mapreduce-in-36-lines-of-ruby.html' title='MapReduce in 36 lines of Ruby'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>6</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-3443846622792335540</id><published>2006-12-22T13:32:00.001-08:00</published><updated>2006-12-22T13:32:00.210-08:00</updated><title type='text'>Google Code Love</title><content type='html'>&lt;div style="float: right; margin-left: 10px; margin-bottom: 10px;"&gt; &lt;a href="http://www.flickr.com/photos/lattice/330350557/" title="photo sharing"&gt;&lt;img src="http://farm1.static.flickr.com/129/330350557_1eac167eaa_m.jpg" alt="" style="border: solid 2px #000000;" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;span style="font-size: 0.9em; margin-top: 0px;"&gt;  &lt;a href="http://www.flickr.com/photos/lattice/330350557/"&gt;Google Code Love&lt;/a&gt;  &lt;br /&gt;  Originally uploaded by &lt;a href="http://www.flickr.com/people/lattice/"&gt;liminalists&lt;/a&gt;. &lt;/span&gt;&lt;/div&gt;&lt;p&gt;My &lt;a href="http://code.google.com/p/xmpp4r-simple/"&gt;Jabber::Simple&lt;/a&gt; project, extracted from &lt;a href="http://twitter.com/"&gt;Twitter&lt;/a&gt;'s Jabber/IM support, got some love today from Google Code (thanks, &lt;a href="http://vedana.net/"&gt;eric&lt;/a&gt;!)&lt;/p&gt;&lt;br clear="all" /&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/3443846622792335540/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=3443846622792335540&amp;isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/3443846622792335540'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/3443846622792335540'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/12/google-code-love.html' title='Google Code Love'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-4568669228261390045</id><published>2006-12-21T16:06:00.000-08:00</published><updated>2006-12-21T17:02:28.968-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='travel cities meme 2006'/><title type='text'>The Year in Cities, 2006.</title><content type='html'>&lt;p&gt;Here's the list of cities I stayed in during the course of 2006. Memes away. I've only included cities in which I spent at least one day and one night. I've preemptively added a few spots I'll be visiting over Christmas, too.&lt;/p&gt;

&lt;p&gt;
San Francisco, CA&lt;br/&gt;
Fresno (FresYES!), CA&lt;br/&gt;
Tahoe, CA/NV&lt;br/&gt;
Seattle, WA&lt;br/&gt;
Vancouver, BC&lt;br/&gt;
White Rock, BC&lt;br/&gt;
Victoria, BC&lt;br/&gt;
Whistler, BC&lt;br/&gt;
Reykjavik, Iceland&lt;br/&gt;
Ólafsvík, Iceland&lt;br/&gt;
Belfast, Northern Ireland&lt;br/&gt;
Aberystwyth, Wales&lt;br/&gt;
Norwich, East Anglia&lt;br/&gt;
London, England&lt;br/&gt;
Lewes (Brighton &amp; Hove), East Sussex&lt;br/&gt;
Barcelona, Spain&lt;br/&gt;
Portland, OR&lt;br/&gt;
Grande Prairie, AB&lt;br/&gt;
Santa Cruz, CA&lt;br/&gt;
Mojave Desert &amp; Las Vegas, CA &amp; NV&lt;br/&gt;
Zion National Monument, UT&lt;br/&gt;
Tucson, AZ&lt;br/&gt;
[Near] Calistoga, CA&lt;br/&gt;
Chilliwack, BC
&lt;/p&gt;

&lt;p&gt;All in all, pretty good, though I'm hoping for maybe somewhere more less-European for 2007. We'll see.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/4568669228261390045/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=4568669228261390045&amp;isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/4568669228261390045'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/4568669228261390045'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/12/year-in-cities-2006.html' title='The Year in Cities, 2006.'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-1369790222674825121</id><published>2006-12-20T13:12:00.000-08:00</published><updated>2006-12-20T13:34:39.362-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='twitter weather presence jabber source attention'/><title type='text'>The Weather, by Twitter.</title><content type='html'>&lt;p&gt;A few weeks ago, &lt;a href="http://laughingmeme.org/"&gt;Kellan&lt;/a&gt; and I whipped up what is tentatively known as "WeatherBot". It's a simple tool to provide weather updates to &lt;a href="http://twitter.com/"&gt;Twitter&lt;/a&gt; users. Every morning at 7:00 AM and 3:45 PM (local time, that's 07h00 and 15h45 for those of you across the pond), our fleet of WeatherBots will send a weather update to Twitter.&lt;/p&gt;

&lt;p&gt;If you follow these bots, you'll receive those updates wherever you normally get your Twitters; IM, Phone, RSS, or just on the web. So far, we have bots for the following cities (links are to the bots' twitter profiles, for easy friending action): &lt;a href="http://twitter.com/wxboston"&gt;Boston&lt;/a&gt;, &lt;a href="http://twitter.com/wxbrighton"&gt;Brighton&lt;/a&gt;, &lt;a href="http://twitter.com/wxchicago"&gt;Chicago&lt;/a&gt;, &lt;a href="http://twitter.com/wxhelsinki"&gt;Helsinki&lt;/a&gt;, &lt;a href="http://twitter.com/wxlondon"&gt;London&lt;/a&gt;, &lt;a href="http://twitter.com/wxla"&gt;Los Angeles&lt;/a&gt;, &lt;a href="http://twitter.com/wxnyc"&gt;New York&lt;/a&gt;, &lt;a href="http://twitter.com/wxparis"&gt;Paris&lt;/a&gt;, &lt;a href="http://twitter.com/wxpdx"&gt;Portland&lt;/a&gt;, &lt;a href="http://twitter.com/wxsf"&gt;San Francisco&lt;/a&gt;, &lt;a href="http://twitter.com/wxseattle"&gt;Seattle&lt;/a&gt;, &lt;a href="http://twitter.com/wxsingapore"&gt;Singapore&lt;/a&gt;, and &lt;a href="http://twitter.com/wxyvr"&gt;Vancouver&lt;/a&gt;. If you'd like to see another city, just ask and we'll provide.&lt;/p&gt;

&lt;p&gt;The source code is available over on Google Code as &lt;a href="http://code.google.com/p/twitter-weather/"&gt;Twitter Weather&lt;/a&gt;. Kellan and I will be providing follow-up posts (and hopefully talks!) about how we built this, and updates on future improvements, so watch this space, and if you're not already on Twitter, sign up already! We're building an awesome space, and want you to have as much fun as we are.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/1369790222674825121/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=1369790222674825121&amp;isPopup=true' title='48 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/1369790222674825121'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/1369790222674825121'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/12/weather-by-twitter.html' title='The Weather, by Twitter.'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>48</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-2448859883994036211</id><published>2006-12-08T11:55:00.000-08:00</published><updated>2006-12-08T15:45:38.134-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='twitter identity happiness productivity kathysierra continuous attention singularity'/><title type='text'>On Twitter</title><content type='html'>&lt;p&gt;Kathy Sierra has a great post, talking about &lt;a href="http://headrush.typepad.com/creating_passionate_users/2006/12/httpwww37signal.html"&gt;Continuous Partial Attention and Twitter&lt;/a&gt;. Before you read my response, go read Kellan's excellent &lt;a href="http://laughingmeme.org/articles/2006/12/08/twitter-curve"&gt;post&lt;/a&gt; on the matter.&lt;/p&gt;

&lt;p&gt;Twitter is really nothing new, it's just new to the web (and IM/SMS). IRC has been around for ages, and functions in much the same way. Campfire, 37signals' group chat application is a similar application, but more task-focused. So to say that 2006 is the year of the singularity is probably too much of an exaggeration.&lt;/p&gt;

&lt;p&gt;I held off on using Twitter for a long time, even though I work at Obvious, because it was too much of an attention drain for me. I have a 5 year old &lt;a href="http://www.nokiausa.com/phones/8390"&gt;Nokia cell phone&lt;/a&gt;, and the SMS experience is one of mind-numbing pain when you receive 15 or 20 SMSes per day (not to mention expensive!). IM, on the other hand, is seamless. Like Kellan, I have verging-on-sub-conscious Growl notifications for IM, and as such I spend less than a second processing each incoming Twitter message.&lt;/p&gt;

&lt;p&gt;A phone call, on the other hand, can easily eat half an hour for me, because I don't "do" the phone very often. I find it intimidating, because most of the time the interactions involve long hold times, anti-human menus, horrible bureaucracy, etc. Email is more distracting than IM or Twitter, and so on. Calling friends and family is also a major time commitment, especially if we haven't talked in a while.&lt;/p&gt;

&lt;p&gt;I'm more than willing to put up with certain levels of interruption in order to have that sense that I "know" what's going on around me. I have friends who live far away, and whom I don't speak to on the phone, email, or see regularly. Twitter perfectly fills the gap, and allows us to keep each-other "in the loop", bringing us closer overall.&lt;/p&gt;

&lt;p&gt;Sure, I could close myself off, and just work all day - but I feel like all these emerging (emergent?) "ambient" communication technologies actually help to make me happier, and feel less alone in our highly abstract and disconnected world. Having "community" is extremely important; far more so than our productivity. Maybe it's just sad that we allow ourselves to live in this paradoxically disconnected online world, "cyberspace" as it were. I like to think of it as just another progression of human adaptation. To say that people are lonelier or happier, more or less fulfilled, busier, or more productive than they were 10, 50, 100, or 500 years ago is a falsehood. We're different, and we're all just trying to &lt;a href="http://www.danah.org/papers/AAAS2006.html"&gt;make the best of where we find ourselves&lt;/a&gt;.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/2448859883994036211/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=2448859883994036211&amp;isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2448859883994036211'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2448859883994036211'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/12/on-twitter.html' title='On Twitter'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-8547267024392133330</id><published>2006-11-09T12:14:00.000-08:00</published><updated>2006-11-12T11:27:15.721-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ruby'/><category scheme='http://www.blogger.com/atom/ns#' term='jabber'/><category scheme='http://www.blogger.com/atom/ns#' term='xmpp'/><category scheme='http://www.blogger.com/atom/ns#' term='code'/><title type='text'>Announcing Jabber::Simple</title><content type='html'>Jabber::Simple [&lt;a href="http://code.google.com/p/xmpp4r-simple/"&gt;src&lt;/a&gt;, &lt;a href="http://xmpp4r-simple.rubyforge.org/"&gt;doc&lt;/a&gt;] is a simple (duh!) Ruby library that aims to make the implementation of basic Jabber functionality trivial. It is an extraction of the Jabber support that was added to &lt;a href="http://twitter.com/"&gt;Twitter&lt;/a&gt;, and is released under the GPL by &lt;a href="http://obvious.com/"&gt;Obvious&lt;/a&gt;. A line of code is worth a thousand words, so here is the complete code for sending a simple message to a Jabber user:

&lt;pre&gt;&lt;code&gt;
jabber = Jabber::Simple.new('rex@friendosaurus.com', 'password')
jabber.deliver("bront@friendosaurus.com", "Hey! I'm thinking of going Vegetarian - Any suggestions?")
&lt;/code&gt;&lt;/pre&gt;

Getting incoming messages is just as easy:

&lt;pre&gt;&lt;code&gt;
jabber.received_messages do |msg|
  puts "#{msg.body}" if msg.type == :chat
end
&lt;/code&gt;&lt;/pre&gt;

You can also set your status, and get information about your friends' statuses:

&lt;pre&gt;&lt;code&gt;
jabber.status(:away, "Eating at the Tree Cafe. I need a ladder.")

jabber.presence_updates do |update|
  friend = update[0]
  presence = update[2]
  puts "#{friend.jid} is #{presence.status}"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Installation&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;
sudo gem install xmpp4r-simple
&lt;/pre&gt;&lt;/code&gt;

or download the package from &lt;a href="http://rubyforge.org/projects/xmpp4r-simple/"&gt;RubyForge&lt;/a&gt;. Source code is also &lt;a href="http://code.google.com/p/xmpp4r-simple/"&gt;available&lt;/a&gt;, licensed under the GPLv2.

&lt;h3&gt;Yet Another Jabber Library?&lt;/h3&gt;

There are a number of existing Jabber libraries for Ruby (&lt;a href="http://jabber4r.rubyforge.org/"&gt;jabber4r&lt;/a&gt;, &lt;a href="http://home.gna.org/xmpp4r/"&gt;xmpp4r&lt;/a&gt;, and &lt;a href="http://netxmpp-ruby.jabberstudio.org/"&gt;Net::XMPP&lt;/a&gt;), so why Jabber::Simple?

First off, Jabber::Simple does not aim to replicate any core XMPP protocol functionality present in these libraries &amp;#8212; in fact, Jabber::Simple depends on &lt;a href="http://home.gna.org/xmpp4r/"&gt;xmpp4r&lt;/a&gt; and the &lt;code&gt;Jabber::Simple#client&lt;/code&gt; and &lt;code&gt;Jabber::Simple#roster&lt;/code&gt; methods expose all of xmpp4r's awesome functionality.

When I started building in Jabber support for &lt;a href="http://twitter.com/"&gt;Twitter&lt;/a&gt; I'd used &lt;a href="http://adiumx.com/"&gt;various&lt;/a&gt; &lt;a href="http://apple.com/ichat/"&gt;Jabber&lt;/a&gt; &lt;a href="http://google.com/talk/"&gt;clients&lt;/a&gt;, and even set up a simple Jabber server. Writing my own client, however, was a bit more complex. It turns out that the seamless experience of "adding a friend" and chatting with them is (unsurprisingly) comprised of a series of disjoint steps, and fraught with the peril of threads, XML streams, and arcane magic. The available libraries handle these tasks and many more admirably, but lack in elegance. My hope is that Jabber::Simple provides a sufficiently &lt;a href="http://obvious.com/"&gt;obvious&lt;/a&gt; interface with which to develop tools that use the Jabber protocol.


&lt;h3&gt;But Wait! There's More!&lt;/h3&gt;

Now, you might shy away from writing that really cool chat-bot you've been meaning to write, saying "Wow, this is great, but setting up a Jabber server is a pain." --- but fear not! Go over to &lt;a href="http://google.com/talk/"&gt;Google Talk&lt;/a&gt; and sign up for an account. Once you're done, use your Google Talk username and password, and start Jabbering. No really, it's that simple.

&lt;pre&gt;&lt;code&gt;
jabber = Jabber::Simple.new("you@gmail.com", "password")
&lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/8547267024392133330/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7067202814937947569&amp;postID=8547267024392133330&amp;isPopup=true' title='12 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/8547267024392133330'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/8547267024392133330'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/11/announcing-jabbersimple.html' title='Announcing Jabber::Simple'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>12</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-6422698683983376757</id><published>2006-11-06T23:21:00.000-08:00</published><updated>2006-11-06T23:36:03.760-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ruby testing'/><title type='text'>assert_before</title><content type='html'>I'm working on a Ruby Jabber client library to hide the numerous machinations and relatively steep learning curve that xmpp4r requires.  It's nearly done, and I'm writing tests (it's an extraction from &lt;a href="http://twitter.com/"&gt;Twitter&lt;/a&gt;'s Jabber support).

A problem I was running into was the latency involved with Jabber requests; sending a message is almost instantaneous, but always requires at least a one second sleep before the assertion, sometimes much more (roster updates can be time consuming). I started sprinkling five to ten second sleeps throughout my code, but all of a sudden my tests were taking upwards of a minute to run, and there are only five tests!

Here's a snippet that should help with all your variable-latency tests:

&lt;pre&gt;&lt;code&gt;
def assert_before(seconds, &amp;block)
  error = nil
  begin
    Timeout::timeout(seconds) {
      begin
        yield
      rescue =&gt; e
        error = e
        sleep 0.5
        retry
      end
    }
  rescue Timeout::Error
    raise error
  end
end
&lt;/code&gt;&lt;/pre&gt;

use it in your tests like so:

&lt;pre&gt;&lt;code&gt;
def test_something_time_consuming_should_succeed_in_at_least_10_seconds
  assert_before 10.seconds do
    assert true, time_consuming_task()
  end
end
&lt;/code&gt;&lt;/pre&gt;

and as soon as your tests pass, the block will exit and continue on, completing your tests as quickly as possible.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6422698683983376757'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6422698683983376757'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/11/assertbefore.html' title='assert_before'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-3783749825819958433</id><published>2006-11-06T20:26:00.000-08:00</published><updated>2006-11-06T20:32:18.448-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='borat humour media movies'/><title type='text'>Borat, We Like.</title><content type='html'>I still haven't seen it, but here's what the Guardian &lt;a href="http://film.guardian.co.uk/News_Story/Guardian/0,,1941196,00.html?gusrc=rss&amp;feed=12"&gt;has to say&lt;/a&gt;:

&lt;blockquote&gt;While there had been much early enthusiasm for the film following festival screenings, there were fears that the appetite for a bumbling anti-Semitic, pro-incest fake Kazakh who engages in an extended bout of vigorous nude wrestling with his producer might not be mainstream enough to translate to the box office.&lt;/blockquote&gt;

Huh? How could there &lt;em&gt;not&lt;/em&gt; be enough of an appetite for that?!</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/3783749825819958433'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/3783749825819958433'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/11/borat-we-like.html' title='Borat, We Like.'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-2788360862232822394</id><published>2006-11-03T22:45:00.000-08:00</published><updated>2006-11-03T22:49:18.825-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='video'/><category scheme='http://www.blogger.com/atom/ns#' term='the knife'/><category scheme='http://www.blogger.com/atom/ns#' term='music'/><title type='text'>The Knife</title><content type='html'>After seeing this video, I'm totally bummed about missing The Knife. Ray's been talking about it for weeks, but unfortunately they don't do many shows and tickets were selling for (at least) $200. Anyhow, for your viewing enjoyment:

&lt;object width="425" height="350"&gt;&lt;param name="movie" value="http://www.youtube.com/v/617ANIA5Rqs"&gt;&lt;/param&gt;&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/617ANIA5Rqs" type="application/x-shockwave-flash" wmode="transparent" width="425" height="350"&gt;&lt;/embed&gt;&lt;/object&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2788360862232822394'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2788360862232822394'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/11/knife.html' title='The Knife'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-2959475058356078699</id><published>2006-11-03T21:40:00.000-08:00</published><updated>2006-11-03T22:50:30.017-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ruby'/><category scheme='http://www.blogger.com/atom/ns#' term='code'/><category scheme='http://www.blogger.com/atom/ns#' term='irb'/><title type='text'>.irbrc</title><content type='html'>&lt;code&gt;irb&lt;/code&gt; is a wonderful tool; with a few tweaks and additions, though, it becomes essential. I spent too long getting by with just readline support, but today, &lt;em&gt;finally&lt;/em&gt;, I added a few of the extensions that I've seen floating around on various ruby blogs. Now my tab completion and history run in overdrive, and the number of extra terminal windows I keep open has been reduced greatly.

A quick summary of the features present:

&lt;ul&gt;
 &lt;li&gt;Full &lt;a href="http://tiswww.case.edu/%7Echet/readline/rluserman.html#SEC4"&gt;readline&lt;/a&gt; support and tab completion&lt;/li&gt;
 &lt;li&gt;Copy-friendly prompt&lt;/li&gt;
 &lt;li&gt;Auto-indentation&lt;/li&gt;
 &lt;li&gt;Persistent history&lt;/li&gt;
 &lt;li&gt;&lt;code&gt;Object#local_methods&lt;/code&gt;, to view methods unique to an object&lt;/li&gt;
 &lt;li&gt;Colourized output (via wirble)&lt;/li&gt;
 &lt;li&gt;Method finder. e.g., &lt;code&gt;"hello".what?(5) #=&gt; [:length, :size]&lt;/code&gt;
&lt;/li&gt;
 &lt;li&gt;Colourized inline ri support (either &lt;code&gt;Object#ri(*methods)&lt;/code&gt; or &lt;code&gt;ri Object&lt;/code&gt;, works best with Ruby 1.8.5's much improved &lt;code&gt;ri&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;Output spooling, via &lt;code&gt;more&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt; or &lt;code&gt;most&lt;/code&gt;. e.g., &lt;code&gt;less { puts really_long_string }&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;Simple regular expression helper (&lt;code&gt;/an/.show_match("banana")&lt;/code&gt;)&lt;/li&gt;
 &lt;li&gt;Textmate and Vi launching&lt;/li&gt;
&lt;/ul&gt;

You can get my .irbrc here: &lt;a href="http://dotfiles.org/%7Elattice/.irbrc"&gt;~lattice/.irbc&lt;/a&gt;.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2959475058356078699'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/2959475058356078699'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/11/irbrc.html' title='.irbrc'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-7067202814937947569.post-6427871484813949915</id><published>2006-11-03T12:58:00.000-08:00</published><updated>2006-11-03T14:36:36.344-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='macports osx sysadmin'/><title type='text'>MacPorts, a PSA</title><content type='html'>When upgrading your ports on OS X, do not use the following command:

&lt;pre&gt;&lt;code&gt;
port upgrade all
&lt;/pre&gt;&lt;/code&gt;

It doesn't do what you expect. Unless, of course, you want &lt;code&gt;TeXmacs&lt;/code&gt; and &lt;code&gt;SimGear&lt;/code&gt;. And five hundred of their closest friends.

Do this, instead:

&lt;pre&gt;&lt;code&gt;
port upgrade outdated
&lt;/pre&gt;&lt;/code&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6427871484813949915'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7067202814937947569/posts/default/6427871484813949915'/><link rel='alternate' type='text/html' href='http://romeda.org/blog/2006/11/macports-psa.html' title='MacPorts, a PSA'/><author><name>Blaine</name><uri>http://www.blogger.com/profile/12260514541117400711</uri><email>noreply@blogger.com</email></author></entry></feed>
