<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	>

<channel>
	<title>David's WordPress Test Root Blog</title>
	<atom:link href="http://wordpress.dpotter.net/index.php/feed/" rel="self" type="application/rss+xml" />
	<link>http://wordpress.dpotter.net</link>
	<description>Just another WordPress weblog</description>
	<pubDate>Tue, 16 Sep 2008 16:06:46 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.6.3</generator>
	<language>en</language>
			<item>
		<title>MultiBlogging</title>
		<link>http://wordpress.dpotter.net/index.php/2008/07/multiblogging/</link>
		<comments>http://wordpress.dpotter.net/index.php/2008/07/multiblogging/#comments</comments>
		<pubDate>Sat, 26 Jul 2008 02:43:56 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Plugins]]></category>

		<category><![CDATA[Test]]></category>

		<category><![CDATA[downloads]]></category>

		<category><![CDATA[Multiblogging]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/?p=44</guid>
		<description><![CDATA[I&#8217;m using a variation of Stephen Rider&#8217;s Virtual Multi-blog functionality for hosting multiple sites from the same set of WordPress files.  The solution works pretty well, although maintaining plugins is a real hassle.  Because of that I&#8217;m considering looking in to WordPress-MU to see if it simplifies plugin management.  We&#8217;ll see.
In any [...]]]></description>
			<content:encoded><![CDATA[<p>I&#8217;m using a variation of Stephen Rider&#8217;s Virtual Multi-blog functionality for hosting multiple sites from the same set of WordPress files.  The solution works pretty well, although maintaining plugins is a real hassle.  Because of that I&#8217;m considering looking in to WordPress-MU to see if it simplifies plugin management.  We&#8217;ll see.</p>
<p>In any case, here&#8217;s the download for my version of MultiBlog:</p>
<ul>
<li>[download id=1]</li>
</ul>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2008/07/multiblogging/feed/</wfw:commentRss>
		</item>
		<item>
		<title>WP-Email Test</title>
		<link>http://wordpress.dpotter.net/index.php/2008/06/wp-email-test/</link>
		<comments>http://wordpress.dpotter.net/index.php/2008/06/wp-email-test/#comments</comments>
		<pubDate>Wed, 11 Jun 2008 09:05:05 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/?p=42</guid>
		<description><![CDATA[Test of the WP-Email plugin by Lester &#8216;GaMerZ&#8217; Chan.
[email_link]
]]></description>
			<content:encoded><![CDATA[<p>Test of the WP-Email plugin by Lester &#8216;GaMerZ&#8217; Chan.<br />
[email_link]</p>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2008/06/wp-email-test/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Formatting Articles</title>
		<link>http://wordpress.dpotter.net/index.php/2008/06/formatting-articles/</link>
		<comments>http://wordpress.dpotter.net/index.php/2008/06/formatting-articles/#comments</comments>
		<pubDate>Tue, 03 Jun 2008 09:49:02 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/?p=39</guid>
		<description><![CDATA[Testing the Customizable Post Listings plugin.
Displaying recent posts in the Formatting category:
]]></description>
			<content:encoded><![CDATA[<p>Testing the Customizable Post Listings plugin.</p>
<p>Displaying recent posts in the Formatting category:</p>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2008/06/formatting-articles/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Second Event</title>
		<link>http://wordpress.dpotter.net/index.php/2008/03/second-event/</link>
		<comments>http://wordpress.dpotter.net/index.php/2008/03/second-event/#comments</comments>
		<pubDate>Mon, 31 Mar 2008 09:07:54 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Events]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/index.php/2008/03/second-event/</guid>
		<description><![CDATA[This is a second event on the same day.
]]></description>
			<content:encoded><![CDATA[<p>This is a second event on the same day.</p>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2008/03/second-event/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Heroes Happen Here Launch Event</title>
		<link>http://wordpress.dpotter.net/index.php/2008/03/heroes-happen-here-launch-event/</link>
		<comments>http://wordpress.dpotter.net/index.php/2008/03/heroes-happen-here-launch-event/#comments</comments>
		<pubDate>Mon, 31 Mar 2008 08:45:40 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Events]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/index.php/2008/03/heroes-happen-here-launch-event/</guid>
		<description><![CDATA[ Event Details &#8595; 




City: Seattle
Date: April 1, 2008
Venue: Washington State Convention &#038; Trade Center
Address: 800 Convention Place, Seattle, WA 98101
Your registered track: Infrastructure IT Pro



Please note that all registered seating not occupied 10 minutes prior to the start of the event will be released to walk in audiences.  Seating availability for onsite walk [...]]]></description>
			<content:encoded><![CDATA[<p><a href="#" onclick="xcollapse('X8382');return false;"> Event Details &darr; </a><br />
</p>
<table id="X8382" style="display: none; border: 1px solid #c8c098; padding: 10px; background-color: #fffff0;">
<tr>
<td>
City: Seattle<br />
Date: April 1, 2008<br />
Venue: Washington State Convention &#038; Trade Center<br />
Address: 800 Convention Place, Seattle, WA 98101<br />
Your registered track: Infrastructure IT Pro
</td>
</tr>
</table>
<p>Please note that all registered seating not occupied 10 minutes prior to the start of the event will be released to walk in audiences.  Seating availability for onsite walk in/track changes will be managed on a first come/first serve basis and is solely dependent on space availability once all preregistered attendees have been seated.</p>
<p><b>CONFERENCE AGENDA AND TIMES</b><br />
Please note that track schedules vary and may not go the full length of the day.  For a detailed overview, your track-specific agenda, start and end times for your city and driving directions, please go to <a href="http://www.microsoft.com/heroeshappenhere/register/default.mspx">http://www.microsoft.com/heroeshappenhere/register/default.mspx</a> and click on the name of your confirmed city.</p>
<p><b>PARKING</b><br />
You will be responsible for all transportation costs incurred while traveling to and from the event.   The event will not cover the costs associated with parking and/or transportation.</p>
<p><b>PRODUCT GIVEAWAYS</b><br />
By attending the Microsoft Heroes Happen Here: 2008 Launch Events, you will take home a promotional kit including Windows Server® 2008 operating system, Microsoft® SQL Server® 2008, and Microsoft Visual Studio® 2008.  Please note that all kits must be claimed at the event, no exceptions.</p>
<p><b>SWEEPSTAKES</b><br />
If you entered the 2008 Joint Launch Sweepstakes for a chance to win an Xbox®360, the winner of the Xbox®360 will be posted on a sign in the registration area of the event. The winner will complete a form at the sweepstakes table by registration. The Xbox® will be sent to the winner. The grand prize winner of the Ford Fusion will be announced to the winner in July 2008.</p>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2008/03/heroes-happen-here-launch-event/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Calendar</title>
		<link>http://wordpress.dpotter.net/index.php/2008/03/calendar/</link>
		<comments>http://wordpress.dpotter.net/index.php/2008/03/calendar/#comments</comments>
		<pubDate>Mon, 31 Mar 2008 07:42:04 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Plugins]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/index.php/2008/03/calendar/</guid>
		<description><![CDATA[]]></description>
			<content:encoded><![CDATA[<br />
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2008/03/calendar/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Vacation</title>
		<link>http://wordpress.dpotter.net/index.php/2008/03/vacation/</link>
		<comments>http://wordpress.dpotter.net/index.php/2008/03/vacation/#comments</comments>
		<pubDate>Tue, 04 Mar 2008 08:03:08 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Vacation]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/index.php/2008/03/vacation/</guid>
		<description><![CDATA[The family went to Orlando, Florida last summer to visit Disney World.  We had a great time!
]]></description>
			<content:encoded><![CDATA[<p>The family went to Orlando, Florida last summer to visit Disney World.  We had a great time!</p>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2008/03/vacation/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Commonly Used Cmdlets</title>
		<link>http://wordpress.dpotter.net/index.php/2007/11/commonly-used-cmdlets/</link>
		<comments>http://wordpress.dpotter.net/index.php/2007/11/commonly-used-cmdlets/#comments</comments>
		<pubDate>Thu, 22 Nov 2007 00:41:57 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Test]]></category>

		<category><![CDATA[Features]]></category>

		<category><![CDATA[PowerShell]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/index.php/2007/11/commonly-used-cmdlets/</guid>
		<description><![CDATA[The following cmdlets provide functionality that you may find yourself using on a regular basis.  It&#8217;s also likely that you&#8217;ll use some of them without knowing it as you use DOS-based or UNIX-based aliases instead.


CmdLet
Alias/Alternate
Description


Get-Help
helpman
Gets help for a cmdlet or concept.  Some useful parameters include -Detailed, -Examples, -Full, -Parameter, and -Verbose.  When you request a [...]]]></description>
			<content:encoded><![CDATA[<p>The following cmdlets provide functionality that you may find yourself using on a regular basis.  It&#8217;s also likely that you&#8217;ll use some of them without knowing it as you use DOS-based or UNIX-based aliases instead.</p>
<table class="MsoTableMediumShading2Accent1">
<tr class="MsoTableMediumShading2Accent1FirstRow">
<td>CmdLet</td>
<td>Alias/Alternate</td>
<td>Description</td>
</tr>
<tr>
<td><code>Get-Help</code></td>
<td><code>help</code><br/><code>man</code></td>
<td>Gets help for a cmdlet or concept.  Some useful parameters include <code>-Detailed</code>, <code>-Examples</code>, <code>-Full</code>, <code>-Parameter</code>, and <code>-Verbose</code>.  When you request a particular help topic, the content of the topic is displayed.  When you use wildcard characters, the topics are displayed as a list.  Help about conecepts in Windows PowerShell begins with &#8220;about_&#8221;.Also check out the <code>help</code> and <code>man</code> functions.</td>
</tr>
<tr class="MsoTableMediumShading2Accent1OddRow">
<td><code>Get-Member</code></td>
<td><code> </code></td>
<td>Displays information about the .NET object that a command returns, including the type, properties, and methods of the object.  Use a pipeline operator (|) to send the results of a command to <code>Get-Member</code>.</td>
</tr>
<tr>
<td><code>Set-Alias</code></td>
<td><code> </code></td>
<td>Creates an alias for a cmdlet name, function name, or the name of an executable file.</td>
</tr>
<tr class="MsoTableMediumShading2Accent1OddRow">
<td><code>Get-Location</code></td>
<td><code>cd</code></td>
<td>Gets the current location for operating on objects in the namespace.</td>
</tr>
<tr>
<td><code>Set-Location</code></td>
<td><code>cd</code></td>
<td>Sets the current location for operating on objects in the namespace.</td>
</tr>
</table>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2007/11/commonly-used-cmdlets/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Basic PowerShell Concepts</title>
		<link>http://wordpress.dpotter.net/index.php/2007/11/basic-powershell-concepts/</link>
		<comments>http://wordpress.dpotter.net/index.php/2007/11/basic-powershell-concepts/#comments</comments>
		<pubDate>Thu, 22 Nov 2007 00:38:33 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Test]]></category>

		<category><![CDATA[Features]]></category>

		<category><![CDATA[PowerShell]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/index.php/2007/11/21/basic-powershell-concepts/</guid>
		<description><![CDATA[Although PowerShell provides access to the commands and applications available in cmd.exe in a fairly transparent way, there are still a lot of differences which means there is quite a steep learning curve.  Let&#8217;s start with the basics.
A command in PowerShell is called a cmdlet (pronounced command-let).  A cmdlet is a two part verb-noun pair [...]]]></description>
			<content:encoded><![CDATA[<p>Although PowerShell provides access to the commands and applications available in cmd.exe in a fairly transparent way, there are still a lot of differences which means there is quite a steep learning curve.  Let&#8217;s start with the basics.</p>
<p>A command in PowerShell is called a <strong>cmdlet</strong> (pronounced command-let).  A cmdlet is a two part verb-noun pair that describes an action that is to performed against that object, for example <code class="shaded">Get-Service</code>, or <code class="shaded">Set-Location</code>.  You can use the <code class="shaded">Get-Command</code> cmdlet to see the list of cmdlets.  You can use the <code class="shaded">Get-Help</code> cmdlet to get help on any command or on a variety of other topics.</p>
<p>You can define <strong>aliases</strong> for commands to customize the environment to how you like to work.  In fact, a number of aliases are predefined to allow Windows Command Prompt and UNIX users be more comfortable with PowerShell.  For example, aliases for common DOS commands such as <code class="shaded">dir</code>, <code class="shaded">cd</code>, and <code class="shaded">type</code> have been defined, as have common UNIX commands such as <code class="shaded">ls</code> and <code class="shaded">cat</code>.  You can also define your own using the <code class="shaded">Set-Alias</code> cmdlet.  You can use the <code class="shaded">Get-Alias</code> cmdlet to see the list of aliases that have been defined.  You can create an alias for a cmdlet name, function name, or the name of an executable file.  Note that parameters cannot be included in the definition of an alias.  If you want to include parameters, consider defining a function.</p>
<p>A sequence of commands can be stored as a <strong>function</strong>.  There are several that are built-in, such as <code class="shaded">help</code>, <code class="shaded">more</code>, and even <code class="shaded">C:</code>.  You can list out all the functions currently defined by displaying the contents of the <em>Function:</em> drive.</p>
<p>A sequence of commands can also be stored in a <strong>script file</strong>.  A PowerShell script file has a file extension of .ps1.  More on scripts in a later post.</p>
<p>Cmdlets operate against objects in a <strong>namespace</strong>.  Namespaces are organized into drives (AKA PSDrives).  A drive is automatically created for each drive letter already defined by Windows.  A drive is also created for common registry hives (<em>HKCU</em>, <em>HKLM</em>), aliases (<em>Alias</em>), environment variables (<em>Env</em>), functions and variables (<em>Function</em>, <em>Variable</em> - I&#8217;ll touch on them shortly), and security certificates (<em>cert</em>).  You can use the <code class="shaded">Get-PSDrive</code> cmdlet to see the list of PowerShell drives.</p>
<p>The output from a cmdlet is one or more objects which can be piped (using the | pipe operator) to another cmdlet.  Objects from the last cmdlet are formatted based on formatting rules defined for the types of the objects.  If no formatting rules are defined, the properties of the object are displayed in a list.</p>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2007/11/basic-powershell-concepts/feed/</wfw:commentRss>
		</item>
		<item>
		<title>PowerShell - again</title>
		<link>http://wordpress.dpotter.net/index.php/2007/11/powershell-again/</link>
		<comments>http://wordpress.dpotter.net/index.php/2007/11/powershell-again/#comments</comments>
		<pubDate>Thu, 22 Nov 2007 00:35:11 +0000</pubDate>
		<dc:creator>David Potter</dc:creator>
		
		<category><![CDATA[Test]]></category>

		<category><![CDATA[PowerShell]]></category>

		<guid isPermaLink="false">http://wordpress.dpotter.net/index.php/2007/11/21/powershell-again/</guid>
		<description><![CDATA[When I worked at Microsoft I spent over a year working with Windows PowerShell (called Monad or Microsoft Shell (MSH) at the time).  PowerShell is a truly wonderful tool.  It is built on the .NET Framework and passes objects around instead of text.  It also allows a file system-like namespace to be built on any [...]]]></description>
			<content:encoded><![CDATA[<p>When I worked at Microsoft I spent over a year working with Windows PowerShell (called Monad or Microsoft Shell (MSH) at the time).  PowerShell is a truly wonderful tool.  It is built on the .NET Framework and passes objects around instead of text.  It also allows a file system-like namespace to be built on any random storage provider, such as the registry, a database, environment variables, etc.</p>
<p>I have the good fortune in my current job to work with PowerShell again to build a namespace for a database application and to build commands to perform the various operations for that application.  It&#8217;s been quite a few years since I worked with it, however, and they&#8217;ve also changed quite a few things since then, so I&#8217;m finding myself having to relearn it.  While I&#8217;m doing that I would like to document my findings so that hopefully it will be useful to others (including others at my company who will use my PowerShell provider and cmdlets).</p>
<h5>Where to get it</h5>
<p>Windows PowerShell is available as a <a href="http://www.microsoft.com/windowsserver2003/technologies/management/powershell/download.mspx" title="How to Download Windows PowerShell 1.0">free download</a> off the Microsoft web site.  The <a href="http://www.microsoft.com/windowsserver2003/technologies/management/powershell/default.mspx" title="Windows PowerShell">PowerShell web page</a> has information on downloading it along with a plethora of information on using it and on others who are extending it.  Make sure you install the right one for your platform.  Also note that as of this writing Microsoft has released a CTP (Community Technology Preview) of Windows PowerShell 2.0.  I&#8217;m not prepared to dive in to a pre-release version yet, but it&#8217;s there if you want it.</p>
]]></content:encoded>
			<wfw:commentRss>http://wordpress.dpotter.net/index.php/2007/11/powershell-again/feed/</wfw:commentRss>
		</item>
	</channel>
</rss>
