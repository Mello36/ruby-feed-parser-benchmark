<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	>

<channel>
	<title>Blogging to Zen</title>
	<atom:link href="http://rawwell.site50.net/?feed=rss2" rel="self" type="application/rss+xml" />
	<link>http://rawwell.site50.net</link>
	<description></description>
	<pubDate>Wed, 26 Nov 2008 10:51:33 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.6.3</generator>
	<language>en</language>
			<item>
		<title>Installing YubNub for Opera and Chrome</title>
		<link>http://rawwell.site50.net/?p=61</link>
		<comments>http://rawwell.site50.net/?p=61#comments</comments>
		<pubDate>Wed, 26 Nov 2008 10:51:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=61</guid>
		<description><![CDATA[]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.igp83.th8.us+Installing+YubNub+for+Opera+and+Chrome" title="Post to Twitter (www.igp83.th8.us)"></a><p>a href=&#8221;http://yubnub.org/documentation/describe_installation&#8221;Installing YubNub/a   blockquote   pimg src=&#8221;http://yubnub.org/images/opera.png&#8221; /      br /bOpera integration./b sports4mecc gave me the following tip: In Opera 9, simply right-click on the YubNub search field then click Create Search. iquot;The search engine you add will be put at the bottom of the list, unless you make it default search engine. (When the popup first comes up, choose quot;Detailsquot; on the right and check the default search engine box.)quot;./i /p    pimg src=&#8221;http://yubnub.org/images/chrome.png&#8221; /      br /bGoogle Chrome integration./b To put Yubnub on your Google Chrome address bar, you can use the following instructions (see screenshots on the a href=&#8221;http://www.tech-recipes.com/rx/3010/google_chrome_change_default_search_engine&#8221;tech-recipes.com article/a. (1) Click the wrench icon to the right of the toolbar (2) On the Basics tab, in the Default Search section, click Manage (3) In the Search Engines window, click Add (4) Fill in Yubnub for the name and http://yubnub.org/parser/parse?command=%s for the URL (5) Click OK; click Close (6) Pick Yubnub in the Default Search drop-down. /p/blockquote</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=61</wfw:commentRss>
		</item>
		<item>
		<title>Prevent auto Windows shutdown, reboot</title>
		<link>http://rawwell.site50.net/?p=59</link>
		<comments>http://rawwell.site50.net/?p=59#comments</comments>
		<pubDate>Tue, 18 Nov 2008 12:48:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=59</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.399k7.th8.us+Prevent+auto+Windows+shutdown%2C+reboot" title="Post to Twitter (www.399k7.th8.us)"></a>pSo ironical you need a program to prevent Windows update from automatically rebooting!!br /The problem would be that it&#8217;ll add a confirmation step everytime you want to reboot.br /br /a href=&#8221;http://blogs.zdnet.com/gadgetreviews/?p=514&#8243;Weekend Gadget Guidance: Prevent auto Windows shutdown, reboot &#124; The Toybox &#124; ZDNet.com/abr /br //pblockquoteShutdownGuard prevents Windows to shutdown, reboot or log off. When it [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.399k7.th8.us+Prevent+auto+Windows+shutdown%2C+reboot" title="Post to Twitter (www.399k7.th8.us)"></a><p>pSo ironical you need a program to prevent Windows update from automatically rebooting!!br /The problem would be that it&#8217;ll add a confirmation step everytime you want to reboot.br /br /a href=&#8221;http://blogs.zdnet.com/gadgetreviews/?p=514&#8243;Weekend Gadget Guidance: Prevent auto Windows shutdown, reboot | The Toybox | ZDNet.com/abr /br //pblockquoteShutdownGuard prevents Windows to shutdown, reboot or log off. When it prevents a shutdown it will pop up in the tray and ask you if you want to continue.    ShutdownGuard can even prevent the Windows Update prompt from rebooting your computer./blockquotebr /br /Download URL:br /br /a href=&#8221;http://code.google.com/p/shutdownguard/&#8221;shutdownguard - Google Code/ap/p</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=59</wfw:commentRss>
		</item>
		<item>
		<title>The executable Web - O&#8217;Reilly ONLamp Blog</title>
		<link>http://rawwell.site50.net/?p=57</link>
		<comments>http://rawwell.site50.net/?p=57#comments</comments>
		<pubDate>Sat, 15 Nov 2008 07:31:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=57</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.wkn74.th8.us+The+executable+Web+-+O%26%238217%3BReilly+ONLamp+Blog" title="Post to Twitter (www.wkn74.th8.us)"></a>pGreat post on interoperability on the web. /p  pTODO: look into the services mentioned below./p  pa href=&#8221;http://www.oreillynet.com/onlamp/blog/2008/06/the_executable_web.html?CMP=OTC-6YE827253101amp;ATT=The+executable+Web&#8221;The executable Web - O&#8217;Reilly ONLamp Blog/a /p  blockquote   pA while ago, I published a a href=&#8221;http://www.oreillynet.com/onlamp/blog/2006/08/unfolding_the_web.html&#8221;teaser/a on this blog about using the Web as a whole as a data storage object. At that [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.wkn74.th8.us+The+executable+Web+-+O%26%238217%3BReilly+ONLamp+Blog" title="Post to Twitter (www.wkn74.th8.us)"></a><p>pGreat post on interoperability on the web. /p  pTODO: look into the services mentioned below./p  pa href=&#8221;http://www.oreillynet.com/onlamp/blog/2008/06/the_executable_web.html?CMP=OTC-6YE827253101amp;ATT=The+executable+Web&#8221;The executable Web - O&#8217;Reilly ONLamp Blog/a /p  blockquote   pA while ago, I published a a href=&#8221;http://www.oreillynet.com/onlamp/blog/2006/08/unfolding_the_web.html&#8221;teaser/a on this blog about using the Web as a whole as a data storage object. At that time I said that emquot;the Web right now is cut down into a million pieces that don&#8217;t talk to each other properlyquot;/em. Almost two years have gone by since that article and it looks like not much has changed./p    pOne of the early questions was how interoperable are Web services when they&#8217;re not envisioned and created by them same company. This problem lead to a number of initiatives that are trying to push forward Web services creation standards. a href=&#8221;http://dataportability.org/&#8221;DataPortability/a, for example, is evangelizing a number of different standards that will create a better interoperable Web:/p    ul     liend user authentication through a href=&#8221;http://openid.net/&#8221;OpenID/a; /li      liinter-application authorization through a href=&#8221;http://oauth.net/&#8221;OAuth/a; /li      liinformation syndication and distribution through a href=&#8221;http://www.rssboard.org/&#8221;RSS/a, a href=&#8221;http://www.w3.org/RDF/&#8221;RDF/a and a href=&#8221;http://www.opml.org/&#8221;OPML/a; /li      liinformation meaning and automatic extraction through a href=&#8221;http://microformats.org/&#8221;microformats/a; /li      liuser attention profiling through a href=&#8221;http://www.apml.org/&#8221;APML/a; /li      limessaging and information brokerage through a href=&#8221;http://www.xmpp.org/&#8221;XMPP/a. /li   /ul    pThis collection of standards and best practices is great when a large number of companies start following them. For us, developers, it means that by following these standards our Web services will be interoperable with all other Web services that use the same standards. It means that creating a Web service now is much easier than it would have been two years ago./p    pWhat about the end users? How can they take advantage of this interoperability? I&#8217;m not just talking about Web services that let you consume data, because that problem was solved a long time ago by a href=&#8221;http://unfoldingtheweb.com/2007/08/12/what-have-you-been-doing-all-these-years/&#8221;aggregators/a. Aggregators are a good example of a class of Web application that survives because there&#8217;s a emde facto/em standard in place: RSS./p    pSo, my point is, how can end users take advantage of Web services that let you publish, transform and assemble information? We&#8217;re moving to a point where a number of emerging services give you a one-to-many publishing approach:/p    ul     lia href=&#8221;http://ping.fm/&#8221;Ping.fm/a and a href=&#8221;http://hellotxt.com/&#8221;HelloTxt/a publish your emstatus/em across multiple services, like a href=&#8221;http://twitter.com/&#8221;twitter/a, a href=&#8221;http://jaiku.com/&#8221;jaiku/a and a href=&#8221;http://pownce.com/&#8221;Pownce/a; /li      liTypepad&#8217;s a href=&#8221;http://www.typepad.com/features/blogit.html&#8221;Blog It/a publishes blog articles across different platforms and also announces them on different status services; /li      lia href=&#8221;http://twitxr.com/&#8221;twitxr/a publishes your pictures across different services like a href=&#8221;http://flickr.com/&#8221;flickr/a and a href=&#8221;http://picasaweb.google.com/&#8221;Picasa/a. /li   /ul    pIs it just me or there&#8217;s a pattern emerging here? Users see value in these services because they save you precious time by automating repeatable actions, like publishing a picture across different services. One thing to notice, though, is that these services only provide half of all that&#8217;s possible with the existing Web./p    pAll these services let you choose among a number of services and then embroadcast/em your information to all of them. Forgetting minor format and content adaptations, they won&#8217;t give you the possibility of emprogramming/em the flow of your information. One thing is to shoot a picture and send it to different services, another thing is letting users tell how that picture flows through different services./p    pOne service that&#8217;s offering you the capability of configuring this flow of information is a href=&#8221;http://www.switchabit.com/&#8221;switchAbit/a. It evolved from an original idea by Dave Winer that you could grab your pictures from flickr and post a tweet for each one of them. Quoting Dave&#8217;s a href=&#8221;http://www.scripting.com/stories/2008/05/15/switchingToSwitchabit.html&#8221;original post/a:/p /blockquote  blockquote   pThe SwitchABit platform was developed because we noticed that an ever more complex flow of ideas and information is being facilitated by editorial systems and aggregators such as Flickr, Facebook, Twitter, FriendFeed, Seesmic, Qik, Ustream, YouTube, BlogTalkRadio, Disqus, Wordpress, Tumblr, TypePad, Blogger, etc. /p /blockquote  pswitchAbit is basically an RSS to publish mechanism. It&#8217;s built around the a href=&#8221;http://en.wikipedia.org/wiki/Publish/subscribe&#8221;pub-sub paradigm/a which means that it will get your information from a number of services, filter it according to your instructions and publish part of it into other services./p  pWith this approach you&#8217;d still have to publish your information on at least one supported service, so that switchAbit grabs it and routes it somewhere else. Another approach is acting like a reverse aggregator, extending the functionalities of Ping.fm and others by adding the possibility of configuring information flow. /p  pYou could, for instance, add a watermark or a copyright notice to the picture, extract a href=&#8221;http://en.wikipedia.org/wiki/Exif&#8221;EXIF/a geo-location information and send it to a href=&#8221;http://fireeagle.yahoo.net/&#8221;Fire Eagle/a, publish the transformed picture on a number of services, and announce it to your contacts on some social networks. And this is just an example of what can be done in the near future./p  pI&#8217;ve been working since January on such an application. It has an interface similar to a href=&#8221;http://pipes.yahoo.com/pipes/&#8221;Yahoo! Pipes/a, but it lets you compose the flow of information from a starting point through a set of Web services that exist on the emcloud/em. Because of the obvious similarities of this concept with the familiar a href=&#8221;http://en.wikipedia.org/wiki/Redirection_%28Unix%29&#8243;UNIX pipe/a, it&#8217;s called a href=&#8221;http://tarpipe.com/&#8221;tarpipe/a. Quoting tarpipe&#8217;s blog a href=&#8221;http://blog.tarpipe.com/2008/02/08/what-is-tarpipe/&#8221;original post/a:/p  blockquote   ptarpipe will also create an ecosystem where Web applications and services will be able to receive and transform media content. Users will take advantage of this ecosystem by defining delivery and transformation workflows for their documents. /p /blockquote  pWith tarpipe you can direct the output of one Web service into the input of another one. This makes different services virtually interoperable, even if they&#8217;re not able to talk to each other individually. It also gives end users the ability to compose flows of actions (or emworkflows/em) for their information. It currently accepts information sent through email and a a href=&#8221;http://en.wikipedia.org/wiki/Representational_State_Transfer&#8221;REST/a endpoint, meaning you can extend your application by connecting it to tarpipe./p  pSo, my initial thought that emquot;the Web right now is cut down into a million pieces that don&#8217;t talk to each other properlyquot;/em is not so true anymore. There are ways of making the Web more interoperable, like following emde facto/em standards and creating programmable service adapters./p</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=57</wfw:commentRss>
		</item>
		<item>
		<title>Al-Arabiya: Letrsquo;s rape all the Israeli women</title>
		<link>http://rawwell.site50.net/?p=56</link>
		<comments>http://rawwell.site50.net/?p=56#comments</comments>
		<pubDate>Fri, 14 Nov 2008 14:20:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=56</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.sdnz5.th8.us+Al-Arabiya%3A+Letrsquo%3Bs+rape+all+the+Israeli+women" title="Post to Twitter (www.sdnz5.th8.us)"></a>a href=&#8221;http://hotair.com/archives/2008/11/13/egyptian-tv-lets-rape-all-the-israeli-women/&#8221;Hot Air #187; Blog Archive #187; Al-Arabiya: Let#8217;s rape all the Israeli women/a   blockquote   pSystem rape is defined as an a href=&#8221;http://www.airpower.maxwell.af.mil/airchronicles/bookrev/allen1.html&#8221;act of genocide/a or a href=&#8221;http://www.un.org/ictr/statute.html&#8221;crime against humanity/a by the UN, and one might expect a call for that tactic to come from the most lunatic of radical Islamist [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.sdnz5.th8.us+Al-Arabiya%3A+Letrsquo%3Bs+rape+all+the+Israeli+women" title="Post to Twitter (www.sdnz5.th8.us)"></a><p>a href=&#8221;http://hotair.com/archives/2008/11/13/egyptian-tv-lets-rape-all-the-israeli-women/&#8221;Hot Air #187; Blog Archive #187; Al-Arabiya: Let#8217;s rape all the Israeli women/a   blockquote   pSystem rape is defined as an a href=&#8221;http://www.airpower.maxwell.af.mil/airchronicles/bookrev/allen1.html&#8221;act of genocide/a or a href=&#8221;http://www.un.org/ictr/statute.html&#8221;crime against humanity/a by the UN, and one might expect a call for that tactic to come from the most lunatic of radical Islamist terrorist leaders. Instead, we hear it from an Egyptian lawyer #8212; aem female/em #8212; on al-Arabiya, with the show host nodding his head in agreement:#160;#160; /p    pembed src=&#8221;http://www.youtube.com/v/G7Yun11eTIUamp;hl=enamp;fs=1&#8243; width=&#8221;425&#8243; height=&#8221;344&#8243; type=&#8221;application/x-shockwave-flash&#8221; allowscriptaccess=&#8221;always&#8221; allowfullscreen=&#8221;true&#8221; //p    pAs Omri at a href=&#8221;http://www.mererhetoric.com/archives/11275080.html&#8221;Mere Rhetoric/a notes, she#8217;s not just excusing whatever cases occur as an inevitable result of the so-called occupation.#160; She wants all Arabs to use rape as a tactic to drive Israelis out of Israel. /p    pAl-Arabiya operates out of Dubai, UAE, and is heavily subsidized by the Saudis #8212; two American allies.#160; Just for the record. /p /blockquote a href=&#8221;http://israeligirl.typepad.com/my_weblog/2008/11/female-lawyer-encourage-rape-on-tv.html&#8221;IsraeliGirl: Female Lawyer Encourage Rape on TV/a   blockquotequot;Arab men should rape Israeli women as means of resistance fighting against Israelquot; - this gem is from a Muslim FEMALE lawyer no less./blockquote</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=56</wfw:commentRss>
		</item>
		<item>
		<title>Pings, Spings, Splogs and the Splogosphere: 2007 Updates</title>
		<link>http://rawwell.site50.net/?p=55</link>
		<comments>http://rawwell.site50.net/?p=55#comments</comments>
		<pubDate>Tue, 11 Nov 2008 14:23:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=55</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.66cxk.th8.us+Pings%2C+Spings%2C+Splogs+and+the+Splogosphere%3A+2007+Updates" title="Post to Twitter (www.66cxk.th8.us)"></a>a href=&#8221;http://ebiquity.umbc.edu/blogger/2007/02/01/pings-spings-splogs-and-the-splogosphere-2007-updates/&#8221;Pings, Spings, Splogs and the Splogosphere: 2007 Updates/a   blockquote   div class=&#8221;entrytext&#8221;     pWe present some updates on the Splogosphere as seen at a pingserver (a title=&#8221;weblogs.com&#8221; href=&#8221;http://weblogs.com&#8221;weblogs.com/a). This follows our a href=&#8221;http://ebiquity.umbc.edu/blogger/?p=429&#8243;study/a from a year earlier which reported on splogs in the English speaking blogosphere. Our current [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.66cxk.th8.us+Pings%2C+Spings%2C+Splogs+and+the+Splogosphere%3A+2007+Updates" title="Post to Twitter (www.66cxk.th8.us)"></a><p>a href=&#8221;http://ebiquity.umbc.edu/blogger/2007/02/01/pings-spings-splogs-and-the-splogosphere-2007-updates/&#8221;Pings, Spings, Splogs and the Splogosphere: 2007 Updates/a   blockquote   div class=&#8221;entrytext&#8221;     pWe present some updates on the Splogosphere as seen at a pingserver (a title=&#8221;weblogs.com&#8221; href=&#8221;http://weblogs.com&#8221;weblogs.com/a). This follows our a href=&#8221;http://ebiquity.umbc.edu/blogger/?p=429&#8243;study/a from a year earlier which reported on splogs in the English speaking blogosphere. Our current update is based on 8.8 million pings on weblogs.com between January 23rd and January 26th. Though not fully representative, it does give a good sense of spam in the indexed blogosphere./p      pstrong(i) 53% of all pings is spam, 64% of all pings from blogs in English is spam. /stronga href=&#8221;http://ebiquity.umbc.edu/blogger/?p=429&#8243;A year earlier/a we found that close to 75% of all pings from English blogs are spings. Dave Sifry reported on seeing 70% spings in his a href=&#8221;http://www.sifry.com/alerts/archives/000443.html&#8221;last report/a. Clearly the growth of spings has plateaued, one less thing to worry about./p      p/p     centerimg alt=&#8221;ping_all&#8221; src=&#8221;http://ebiquity.umbc.edu/blogger/wp-content/uploads/2007/02/ping_all.png&#8221; / /centerstrong(ii) 56% of all pinging blogs are spam. /strongBy collapsing these pings to their respective blogs, we chart the distribution of authentic blogs against splogs. These numbers have seen no change, a href=&#8221;http://www.wired.com/wired/archive/14.09/splogs.html&#8221;56% of all pinging blogs are splogs/a. centerimg alt=&#8221;ping_unique&#8221; src=&#8221;http://ebiquity.umbc.edu/blogger/wp-content/uploads/2007/02/ping_unique.png&#8221; / /centerstrong(iii) MySpace is now the biggest contributor to the blogosphere/strong. The other key driver LiveJournal and blogs managed by SixApart (as seen at their a title=&#8221;update stream&#8221; href=&#8221;http://updates.sixapart.com&#8221;update stream/a) contribute only 50-60% of what MySpace does. The growth of MySpace blogs has in fact dwarfed the growth of splogs! Further if MySpace is discounted in our analysis close to 84% of all pings are spings! Though MySpace is relatively splog free, we are beginning to a href=&#8221;http://ebiquity.umbc.edu/blogger/2006/11/27/sploggers-compromising-myspace/&#8221;notice splogs/a, something blog harvesters should keep an eye on. [Note that not all blogspot blogs ping weblogs.com] centerimg alt=&#8221;ping_host&#8221; src=&#8221;http://ebiquity.umbc.edu/blogger/wp-content/uploads/2007/02/ping_hosts.png&#8221; / /centerstrong(iv) Blogspot continues to be heavily spammed/strong. Most of this spam however is now detected by blog search engines, a point also shared by a href=&#8221;http://www.mattcutts.com/blog/update-on-blog-spam/&#8221;Matt Cutts/a and a href=&#8221;http://www.kbcafe.com/spam/?guid=20061201203459&#8243;Randy Morin/a. In all of the pings we processed, 51% blogspot blogs were spam!       p/p      pstrong(v) Most spam blogs are still hosted in the US./strong We ranked IPs associated with spam blogs based on their frequency of pings, and located them using a href=&#8221;http://ws.arin.net/cgi-bin/whois.pl&#8221;ARIN/a. /p     center       p/p        tabletbody           tr             td style=&#8221;text-align: left&#8221;1./td              td style=&#8221;text-align: left&#8221;Mountain View, CA/td           /tr            tr             td style=&#8221;text-align: left&#8221;2./td              td style=&#8221;text-align: left&#8221;Washington DC/td           /tr            tr             td style=&#8221;text-align: left&#8221;3./td              td style=&#8221;text-align: left&#8221;San Francisco, CA/td           /tr            tr             td style=&#8221;text-align: left&#8221;4./td              td style=&#8221;text-align: left&#8221;Orlando, FL/td           /tr            tr             td style=&#8221;text-align: left&#8221;5./td              td style=&#8221;text-align: left&#8221;Lansing, MI/td           /tr         /tbody/table        p/p     /centerBlogspot hosts the highest number of splogs, but we also found that most of the other top hosts where physically hosted in the US. Perhaps a href=&#8221;http://www.plagiarismtoday.com/&#8221;Jonathan Bailey/a knows more about the legal ramifications.       p/p      pstrong(vi) Content on .info domain continues to be a problem. /strong99.75% of all blogs hosted on these domains are spam. In other words 1.65 Million blogs were spam as opposed to only around 4K authentic blogs! As long these domains are cheap and keyword rich this trend is likely to continue. Sploggers are also exploiting private domain registration services (a title=&#8221;see this&#8221; href=&#8221;http://ebiquity.umbc.edu/blogger/2006/10/23/spam-on-anti-spam-services-private-domain-registration/&#8221;see here/a)./p      pstrong(vii) High PPC contexts remain the primary motivation to spam. /strongWe identified the top keywords associated with spam blogs and generated a tag cloud using keyword frequency./p      p/p     center       p/p        table width=&#8221;450&#8243;tbody           tr             tdfont size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/adult&#8221;*****/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/auto&#8221;auto/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/big&#8221;big/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/buy&#8221;buy/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/california&#8221;california/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/cancer&#8221;cancer/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/card&#8221;card/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/casino&#8221;casino/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/cheap&#8221;cheap/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/college&#8221;college/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/consolidation&#8221;consolidation/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/credit&#8221;credit/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/debt&#8221;debt/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/diet&#8221;diet/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/digital&#8221;digital/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/discount&#8221;discount/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/dvd&#8221;dvd/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/equipment&#8221;equipment/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/estate&#8221;estate/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/finance&#8221;finance/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/florida&#8221;florida/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/forex&#8221;forex/a/font font size=&#8221;6&#8243;a href=&#8221;http://del.icio.us/tag/free&#8221;free/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/furniture&#8221;furniture/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/gift&#8221;gift/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/girls&#8221;girls/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/golf&#8221;golf/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/health&#8221;health/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/hotel&#8221;hotel/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/info&#8221;info/a/font font size=&#8221;4&#8243;a href=&#8221;http://del.icio.us/tag/insurance&#8221;insurance/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/jewelry&#8221;jewelry/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/lawyer&#8221;lawyer/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/loan&#8221;loan/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/loans&#8221;loans/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/medical&#8221;medical/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/money&#8221;money/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/mortgage&#8221;mortgage/a/font font size=&#8221;11&#8243;a href=&#8221;http://del.icio.us/tag/new&#8221;new/a/font font size=&#8221;5&#8243;a href=&#8221;http://del.icio.us/tag/online&#8221;online/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/phone&#8221;phone/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/poker&#8221;poker/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/rental&#8221;rental/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/sale&#8221;sale/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/school&#8221;school/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/sex&#8221;***/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/small&#8221;small/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/software&#8221;software/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/texas&#8221;texas/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/tits&#8221;****/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/trading&#8221;trading/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/travel&#8221;travel/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/used&#8221;used/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/vacation&#8221;vacation/a/font font size=&#8221;3&#8243;a href=&#8221;http://del.icio.us/tag/video&#8221;video/a/font font size=&#8221;2&#8243;a href=&#8221;http://del.icio.us/tag/wedding&#8221;wedding/a/font/td           /tr         /tbody/table        p/p     /centerWe link these keywords to del.icio.us to depict an emerging problem that is quickly becoming serious. We a title=&#8221;posted on this earlier&#8221; href=&#8221;http://ebiquity.umbc.edu/blogger/2007/01/24/tag-spam-on-the-rise/&#8221;posted on this recently/a, though references date to quite a while back. [See related tag spam notes on a href="http://www.micropersuasion.com/2005/07/yahoo_myweb_bec.html"MyWeb/a, a href="http://gigaom.com/2005/08/02/the-dark-side-of-technorati-tags/"Technorati/a and a href="http://many.corante.com/archives/2005/02/01/tags_run_amok.php"del.icio.us/a]       p/p      pWe will continue our effort on tackling spam. Our ongoing research on spam is catalogued in our a href=&#8221;http://ebiquity.umbc.edu/tag/splog&#8221;tagged splog resources/a, or better still check out our a href=&#8221;http://www.icwsm.org/tutorials.html#spam&#8221;tutorial at ICWSM/a this March!/p   /div /blockquote a href=&#8221;http://research.microsoft.com/searchdefender/&#8221;Strider Search Defender/a   blockquote   pbia href=&#8221;http://en.wikipedia.org/wiki/Search_Engine_Spamming&#8221;Search engine spamming/a/i/bi /i(or bisearch spamming/i/bi or bweb spamming/b /i[1]) refers to the practice of using questionable biua href=&#8221;http://en.wikipedia.org/wiki/Search_engine_optimization&#8221;Search Engine Optimization (SEO)/a/u/i/b techniques to improve the ranking of a website in search engine listings. bia href=&#8221;http://en.wikipedia.org/wiki/Spam_in_blogs&#8221;Comment spamming/a/i/b (or iblog spamming/i) is a form of search spamming in which random comments, promoting links to commercial services, are automatically posted to publicly-accessible forums, guest books, blogs, message boards, etc. See a href=&#8221;http://research.microsoft.com/searchdefender/non-blog_spamming.htm&#8221;sample screenshots/a of URLs hosted on uauto-review.net/u, uwebspawner.com/u, uripway.com/u, etc. being spammed at many open forums. There are now a href=&#8221;http://ebiquity.umbc.edu/blogger/splog-software-from-hell/&#8221;several commercial programs/a that automate such spamming tasks./p    pTo make their URLs look more legitimate so that search users are more likely to click the links, many spammers create ia href=&#8221;http://en.wikipedia.org/wiki/Doorway&#8221;doorway pages/a /ion reputable domains and use their URLs in comment spamming. When a user clicks on a doorway-page link in search listings, her browser is instructed to either iredirect to/i or ifetch ads listing from/i the actual itarget page/i, potentially operated by the spammer. See a href=&#8221;http://research.microsoft.com/searchdefender/Doorway_Pages.htm&#8221;sample screenshots/a of doorway-page URLs hosted on umywebpage.netscape.com/u, utripod.com/u, ugeocities.com/u, uangelfire.com/u, uhometown.aol.com/u, ugroups.yahoo.com/u, etc. being spammed at many open forums. Also see an example of a href=&#8221;http://research.microsoft.com/searchdefender/Google_freett_Spam_Examples.htm&#8221;Google spammed by #8220;freett.com#8221; URLs/a./p    pMany search spammers set up doorway pages on blog websites such as ublogspot.com/u, ublogstudio.com/u, ublogdrive.com/u, uebloggy.com/u, ublog4ever.com/u, ublogspirit.com/u, etc. Such doorway pages are a form of ia href=&#8221;http://en.wikipedia.org/wiki/Spam_blog&#8221;spam blogs (splogs)/a/i. (See a href=&#8221;http://research.microsoft.com/searchdefender/Sample_splogs.htm&#8221;screenshots of sample splogs/a hosted on several blog websites.) Our preliminary investigation shows that splogs hosted on ublogspot.com /uappear to be particularly widely spammed and effective against search engines: see /p    pimg height=&#8221;13&#8243; alt=&#8221;*&#8221; src=&#8221;http://research.microsoft.com/searchdefender/default_files/image002.gif&#8221; width=&#8221;13&#8243; / A picture illustrating a href=&#8221;http://research.microsoft.com/searchdefender/#SplogDoorwayPages&#8221;how splog doorway pages work/a;/p    pimg height=&#8221;13&#8243; alt=&#8221;*&#8221; src=&#8221;http://research.microsoft.com/searchdefender/default_files/image002.gif&#8221; width=&#8221;13&#8243; / A a href=&#8221;http://research.microsoft.com/searchdefender/Spammed_Forums.htm&#8221;long (partial) list of forums and guest books spammed/a by splog URLs hosted on ublogspot.com;/u/p    pimg height=&#8221;13&#8243; alt=&#8221;*&#8221; src=&#8221;http://research.microsoft.com/searchdefender/default_files/image002.gif&#8221; width=&#8221;13&#8243; / a href=&#8221;http://research.microsoft.com/searchdefender/Google_Spam_Examples.htm&#8221;Screenshots of Google search results spammed/a by ublogspot.com/u splog URLs;/p    pimg height=&#8221;13&#8243; alt=&#8221;*&#8221; src=&#8221;http://research.microsoft.com/searchdefender/default_files/image002.gif&#8221; width=&#8221;13&#8243; / a href=&#8221;http://research.microsoft.com/searchdefender/Yahoo_Spam_Examples.htm&#8221;Screenshots of Yahoo! search results spammed/a by ublogspot.com/u splog URLs;/p    pimg height=&#8221;13&#8243; alt=&#8221;*&#8221; src=&#8221;http://research.microsoft.com/searchdefender/default_files/image002.gif&#8221; width=&#8221;13&#8243; / a href=&#8221;http://research.microsoft.com/searchdefender/MSN_Spam_Examples.htm&#8221;Screenshots of MSN search results spammed/a by ublogspot.com/u splog URLs./p    pA common approach to detecting spam web pages is through icontent analysis/i based on classification heuristics [2,3]. In this report, we propose an orthogonal icontext-based approach/i that uses iURL-redirection analysis/i. Our work was primarily motivated by two key observations:/p    p1) Many spam pages use a href=&#8221;http://en.wikipedia.org/wiki/Cloaking&#8221;cloaking/a and redirection techniques [1,4] to iserve up a different page to search-engine crawlers than will be seen by human users/i. A common technique is to present to the crawler some page content that will be dynamically rewritten by the browser before the page is displayed to the users. Some spammers even use obfuscated scripts to make it impossible for crawlers to figure out how the pages will be rewritten. (See examples and analysis of a href=&#8221;http://research.microsoft.com/searchdefender/Cloaking.htm&#8221;actual cloaking techniques/a used by major spammers.) iOur approach is to treat each spam page as a dynamic program rather than a static page, and utilize a #8220;monkey program#8221; [6] to analyze the traffic resulting from visiting each page with an actual browser so that the program can be executed in full fidelity./i/p    p2) Many successful, large-scale spammers have created a huge number of doorway pages that either redirect to or fetch ads from a single domain that is responsible for serving all target pages. iBy identifying those domains that serve target pages for a large number of doorway pages, we can catch major spammers#8217; domains together with all their doorway pages and doorway domains./i/p    pWe call our approach the iSearch Defender/i approach. It consists of two steps: /p    p1. Starting with a seed list of confirmed spam URLs, the iSpam Hunter /isupplies them as search terms (or #8220;link:#8221; query terms) to search engines to locate the forums and guest books at which they were spammed, gathers additional URLs from each of these pages to grow the list, and does this iteratively until the list #8220;converges#8221;, i.e., the list no longer grows significantly after a query iteration./p    pThe list automatically generated from the above step is only a list of #8220;potential#8221; spam URLs because there can be false positives. For example, some spammed forum pages may contain earlier comments from actual users that include non-spam URLs; spammers may intentionally intersperse non-spam URLs with spam ones./p    p2. To filter out false positives, we feed the list of potential spam URLs to the ia href=&#8221;http://research.microsoft.com/URLTracer&#8221;Strider URL Tracer/a/i (which we have previously released to help trademark owners find typo-squatting domains of their websites [5]). The tracer provides a key functionality called the iTop Domain view/i: given a list of (primary) URLs, the tracer launches an actual browser to visit each URL and records all secondary URLs visited as a result. At the end of the batched scan, the Top Domain view provides the list of third-party domains that received secondary-URL traffic and rank them by the number of primary URLs that generated traffic to them. If the input is a list of potential spam URLs, the Top Domain view essentially highlights those target-page domains that are associated with a large number of doorway-page URLs. To further reduce false positives, we use the whitelist of legitimate ads syndicators and web-analytics servers that were heavy redirection-traffic receivers in our a href=&#8221;http://research.microsoft.com/HoneyMonkey&#8221;Strider HoneyMonkey/a scan of the top one million click-through URLs [6,7]. The ranked Top Domain list is then used to prioritize manual investigation. Once a third-party domain is determined to be a spammer#8217;s domain, all doorway-page URLs associated with that domain are labeled as high-potential spam URLs./p    pOur Search Defender approach has two desirable properties that naturally turn the spammers#8217; spamming activities against themselves:/p    p1. The more widely spammed a URL is, the easier it is for the spam hunter to find it. Once a href=&#8221;http://research.microsoft.com/searchdefender/Spammed_Forums.htm&#8221;a spammed forum is identified/a, it becomes a #8220;HoneyForum#8221; that can be used to capture new spam URLs in new comment postings. Ideally, since there is a delay between spamming and its effect on search engine results, our spam hunter should be able to identify new spam URLs and notify the search engine before the URLs enter top search results./p    p2. The more doorway pages a spammer creates, the higher priority its target-page domain is placed on the Top Domain list for investigation./p    p/p    puCase Study #1: Analysis of Blogspot Spammers/u/p    pGiven over 17,000 blogspot URLs collected by the spam hunter, the URL Tracer identified these a href=&#8221;http://research.microsoft.com/searchdefender/17000_blogspot_URLs_TopSpammers.htm&#8221;top-25 target-page domains/a that are behind a large number of blogspot splogs. The top six are particularly active: bus-e-arch.com/u/b, buspeedsearcher.net/u/b, buabcsearcher.com/u/b, bueash.info/u/b, bupaysefeed.net/u/b, and buveryfastsearch.com/u/b, which collectively were responsible for approximately 45% of the blogspot URLs. Screenshots of how the target pages look like and where their doorway URLs are spammed are shown a href=&#8221;http://research.microsoft.com/searchdefender/Top-25_Blogspot_Spammers_Screenshots.htm&#8221;here/a. In addition, we found that hundreds of these splogs generated traffic to ugooglesyndication.com/u (see a href=&#8221;http://research.microsoft.com/searchdefender/Blogspot_URLs_googlesyndication.htm&#8221;an example/a). The #8220;Fighting Splog#8221; blog at a href=&#8221;http://fightsplog.blogspot.com/&#8221;http://fightsplog.blogspot.com/a provides a more comprehensive analysis of splogs that serve AdSense ads./p    pstronguCase Study #2: Analysis of Blog4ever Spammers/u/strongstrongu/u/strong/p    pGiven 5,505 blog4ever URLs collected by the spam hunter, the URL Tracer identified 5,363 of them that fetched Google AdSense ads from ugooglesyndication.com/u. All of them included the client ID #8220;bca-pub-6785940031399100/b#8221; in the ads-fetching URLs and are most likely owned by the same spammer. See full report a href=&#8221;http://research.microsoft.com/searchdefender/Blog4ever_spams.htm&#8221;here/a./p    pstrong/strong/p    pstronguCase Study #3: Analysis of Blogstudio Spammers/u/strong/p    pGiven over 2,400 blogstudio URLs collected by the spam hunter, the URL Tracer identified itwo/i redirection target domains that are behind all these splogs: bucasino-web-search.com/u/b and bufinance-web-search.com/u/b. See full report a href=&#8221;http://research.microsoft.com/searchdefender/BlogStudio_spams.htm&#8221;here/a./p    pstrong/strong/p    pstronguCase Study #4: Analysis of Proboards Spammers /u/strong/p    pGiven over 1,300 proboards URLs collected by the spam hunter, the URL Tracer identified these a href=&#8221;http://research.microsoft.com/searchdefender/Proboards_spams.htm&#8221;top-8 target-page domains/a. The #1 bupaysefeed.net/u /band #7bu s-e-arch.com/u /bare also #5 and #1 on the blogspot list, respectively.strong/strong/p    pstrong/strong/p    pstronguCase Study #5: Analysis of the #8220;Money Spammers#8221;/u/strong/p    pGiven the hundreds of money-related, non-splog URLs collected by the spam hunter that contain keywords like #8220;credit#8221;, #8220;loan#8221;, #8220;mortgage#8221;, #8220;insurance#8221;, #8220;finance#8221;, #8220;cash#8221;, etc., the URL Tracer identified ifive/i redirection target domains that are behind a large number of doorway domains: bufinance-4u.com/u/b, bufinance-portal-4u.com/u/b, bubankersnationalfinancial.com/u/b, bufinance-portal-online.com/u/b, and bu1placeloan.com/u/b. See full report a href=&#8221;http://research.microsoft.com/searchdefender/The_Money_Spammers.htm&#8221;here/a./p    pstronguCase Study #6: Analysis of the #8220;.be Spammers#8221;/u/strongstrongu/u/strong/p    pSearch Defender have found 3,854 doorway pages hosted on 109 .be doorway domains, all of which fetch ads from the target domain burills.be/u/b. See screenshots and the full list a href=&#8221;http://research.microsoft.com/searchdefender/The_._be_Spammers.htm&#8221;here/a.strong/strong/p    pstrong/strong/p    pstronguDiscussions/u/strong/p    pWe are in the process of fully automating Strider Search Defender. The main purpose of releasing this preliminary study is to raise awareness of this growing problem by providing a systematic analysis and proposing a solution so that the web community can start working together to combat this problem. We urge owners of blog sites and free hosting sites to actively monitor their websites to detect abuse. Similarly, advertisement syndicators can detect potential spammers by monitoring those customers who serve ads on a huge number of different URLs through a single account because it is highly unlikely that anyone can generate quality content at that scale. Second, although the content on some spam pages may actually have decent relevance, we urge search engines to consider removing such pages so as not to encourage web spamming. Third, we urge owners of publicly accessible forums (and guest books, etc.) to do a local search of i#8220;blogspot.com#8221;/i and other spam-related domain names reported on this page to see if their forums have been abused and should be protected. For example, searching for i#8220;blogspot.com#8221;/i at a href=&#8221;http://www.stat.ucla.edu/forums/search.php?f=325&#8243;http://www.stat.ucla.edu/forums/search.php?f=325/a, or searching for i#8220;funpic.org#8221;, or #8220;yoll.net#8221;, or #8220;freett.com#8221;, or #8220;fc2.com#8221; /iat a href=&#8221;http://coolplayer.sourceforge.net/phorum/search.php?f=2&#8243;http://coolplayer.sourceforge.net/phorum/search.php?f=2/a would generate a large number of hits./p    pFinally, in some cases, the owners of the target-page domains may not be directly involved in the spamming activities of the doorway pages that redirect to them; their #8220;affiliates#8221; may be the ones who are actually performing the spamming. We urge the owners of such target-page domains to have a stronger rule that prohibits their affiliates from using spamming techniques to draw traffic./p/blockquote</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=55</wfw:commentRss>
		</item>
		<item>
		<title>Good Math, Bad Math : Databases are hammers; MapReduce is a screwdriver.</title>
		<link>http://rawwell.site50.net/?p=54</link>
		<comments>http://rawwell.site50.net/?p=54#comments</comments>
		<pubDate>Sun, 09 Nov 2008 18:53:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=54</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.4erzt.th8.us+Good+Math%2C+Bad+Math+%3A+Databases+are+hammers%3B+MapReduce+is+a+screwdriver." title="Post to Twitter (www.4erzt.th8.us)"></a>]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.4erzt.th8.us+Good+Math%2C+Bad+Math+%3A+Databases+are+hammers%3B+MapReduce+is+a+screwdriver." title="Post to Twitter (www.4erzt.th8.us)"></a>]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=54</wfw:commentRss>
		</item>
		<item>
		<title>Life after the bubble: How Japan lost a decade - Print Version - International Herald Tribune</title>
		<link>http://rawwell.site50.net/?p=52</link>
		<comments>http://rawwell.site50.net/?p=52#comments</comments>
		<pubDate>Sun, 09 Nov 2008 18:31:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=52</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.d9rxr.th8.us+Life+after+the+bubble%3A+How+Japan+lost+a+decade+-+Print+Version+-+International+Herald+Tribune" title="Post to Twitter (www.d9rxr.th8.us)"></a>pa href=&#8221;http://www.iht.com/bin/printfriendly.php?id=17068598&#8243;Life after the bubble: How Japan lost a decade - Print Version - International Herald Tribune/a/p  blockquote   pIs the United States the new Japan? Or more precisely, Japan circa 1990, just as it was staggering into its Lost Decade. As recently as six months ago, the notion that the United States [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.d9rxr.th8.us+Life+after+the+bubble%3A+How+Japan+lost+a+decade+-+Print+Version+-+International+Herald+Tribune" title="Post to Twitter (www.d9rxr.th8.us)"></a><p>pa href=&#8221;http://www.iht.com/bin/printfriendly.php?id=17068598&#8243;Life after the bubble: How Japan lost a decade - Print Version - International Herald Tribune/a/p  blockquote   pIs the United States the new Japan? Or more precisely, Japan circa 1990, just as it was staggering into its Lost Decade. As recently as six months ago, the notion that the United States would face a decade or more of Japanese-style economic malaise seemed preposterous. But after the last few weeks of financial turmoil and political ineptitude, you could almost argue that America would be fortunate to end up with a downturn akin to Japan&#8217;s. That&#8217;s because in several key ways, Japan was much better equipped to withstand its financial lashing in the 1990s than Americans are today./p    pA little history: During the post-World-War-II era, the Japanese economy often lived up to its Homeric epithet: the Miracle Economy. It rose from the ruins of the war to become the world&#8217;s second-largest economy. By the mid-1980s, America and Japan accounted for a staggering 40 percent of the global economy. Picture President Ronald Reagan and Prime Minister Yasuhiro Nakasone belting out quot;We Are the Worldquot; in some fancy karaoke bar in the Ginza./p    pThen, in 1986, Japan shifted into overdrive. It was a time of super-easy credit, frenzied financial speculation, and blistering industrial expansion. During the second half of the 1980s, the Tokyo Stock Exchange&#8217;s compass seemed permanently stuck on north. Between 1986 and 1991, Japan had expanded by roughly the equivalent of the French gross domestic product, then $956 billion. Japan was also outshining the United States, whose consumers bought most of its products and whose military provided its protection. In fact, its rise seemed to coincide with the U.S. slide./p    pThe United States appeared to be a spent power, done in by imperial overreach, as Paul Kennedy put it. Anything we could do, Japan could do better. We made Pintos; they made Accords. We made quot;Ishtarquot;; they made Walkmans. But mostly we made things like greenmail and leveraged buyouts and they made, well, a lot of stuff #8212; widgets the world loved./p    pBut Japan was also busy manufacturing a second bubble of comical proportions. Its real estate market made our recent mania seem downright restrained by comparison. At the start of the 90s, a square meter of prime Ginza real estate cost as much as $300,000. Homes were so expensive in land-scarce Japan that families took out multigenerational loans./p    pMy favorite example of how real estate had become an extreme sport: the property that housed the Imperial Palace in central Tokyo was believed to be worth (no one knew for sure because it wasn&#8217;t really for sale) as much as the entire state of California./p    pThen the double bubble turned into double trouble when both burst at the same time. Denial followed denial. When officials did finally admit there was a problem, policy misstep followed misstep as the clever, selfless and indefatigable Japanese mandarins (our best and brightest went to Wall Street; theirs went to the Ministry of Finance) started acting like fumbling Soviet bureaucrats, minus the corruption. Experts on Japan, watching Tokyo&#8217;s initial nonresponse to the crisis, smirked that Americans facing a similar mess would have rolled up their sleeves and busted a few heads. Just look at how we had handled our savings and loan debacle./p    pWhat came next for Japan was depressing but far from a depression. There were no miso soup lines and the relatively low official unemployment rate often seemed to belie that there was a problem at all. But Japan seemed out of miracles. The economy would grow a little, then stop, then contract a little. Countless bridges to nowhere were built, but all the spending on infrastructure failed to lift the nation out of its doldrums./p    pThe notion of Japan as a threat, a ninja-like adversary along the lines that Michael Crichton described in quot;Rising Sun,quot; suddenly seemed silly. No one worries much about Japan taking over the world today. When Americans wring their hands, it&#8217;s China they fear./p    pNow that the United States&#8217; second bubble has popped, some Americans worry that this is the beginning of their own Lost Decade. There is still good reason to think that the U.S. policy response will not be #8212; and cannot be #8212; denial./p    pStill, America lacks several advantages Japan had as it grappled with the aftermath of its burst bubbles. The most obvious one is that Japan began its Lost Decade as the world&#8217;s largest creditor nation, and it still is. By contrast, America is now, as it was then, the world&#8217;s biggest debtor nation. Just to make the United States government run we need to borrow $2 billion a day from increasingly nervous lenders overseas, including the Japanese./p    pFor the moment, it is in the best interest of creditors to keep the spigot open, but when and if that changes, watch out. Some estimates have the U.S. government deficit weighing in at over $750 billion next year./p    pThat&#8217;s not the biggest ever as a percentage of total economic output, but it&#8217;s up there; and it&#8217;s not clear how that number is going to get smaller any time soon. What&#8217;s more, whereas America has a negative savings rate and its citizens are neck-deep in debt, the Japanese have remained fanatical savers, frugal to a fault./p    pThat&#8217;s why when people ask me now if we are turning Japanese, I no longer tell them: quot;No Way!quot; Now I tell them: quot;If we are lucky.quot;/p /blockquote a href=&#8221;http://www.usnews.com/blogs/capital-commerce/2008/10/21/a-lost-decade-for-america.html&#8221;A &#8216;Lost Decade&#8217; for America - Capital Commerce (usnews.com)/a   blockquote   pThe econ team over at Wachovia argues that rather than quot;reaching back decades for a guidepost to the trajectory of the U.S. economy over the next few years, the Japanese experience of the 1990s may be more illustrative than the Great Depression of the early 1930s.quot; And what was that like?/p    p1) The Nikkei stock market index climbed about sixfold between late 1982 and the last trading day in 1989, only to give up most of its gains over the subsequent 14 years./p    pa name=&#8221;read_more&#8221;/a/p    p2) Residential land prices in Japan have dropped about 40 percent since 1990./p    p3) Not only did Japanese asset prices tumble, but the real economy stagnated. During the highflying decade that spanned 1980 to 1990, Japanese real GDP growth averaged nearly 4 percent per annum. Between 1991 and 2003, which coincided with the Nikkei&#8217;s nadir, the country&#8217;s average growth rate dropped to only 1 percent per annum./p    pBut in the end, Wachovia thinks we are in store for merely a quot;few lost yearsquot; rather than a lost decade since we are moving more quickly than Japan did to deal with banking problems. So we&#8217;ve got that going for us./p /blockquote  pa href=&#8221;http://inflandersfields.eu/2008/09/coming-lost-decade-in-america-steve.html&#8221;In Flanders Fields: The Coming &#8216;Lost Decade&#8217; in America? (Steve Sjuggerud)/a/p  blockquote   pHistorically, when the government meddles in the markets, things don&#8217;t turn out well&#8230;      br /The most recent example is Japan in the 1990s, and that ended with the quot;Lost Decade.quot; Here&#8217;s what happened:       br /#8226; Japan had a huge real estate bubble.       br /#8226; Banks overlent on a massive scale, making risky loans that were almost doomed from the start.       br /#8226; The stock market and the real estate market started to fall.       br /#8226; To save the economy, the Japanese Central Bank took extraordinary measures&#8230; lowering interest rates to unprecedented levels. But it wasn&#8217;t enough.       br /Once the crisis was in full swing, the troubled banks hoarded cash instead of lending money. The economy gummed up. Asset prices went down. And people froze&#8230; They wouldn&#8217;t invest in stocks or real estate. Sound familiar?       br /The next steps sound familiar, too&#8230;       br /Instead of allowing bad banks to fail&#8230; instead of allowing the system to quot;clearquot;&#8230; the government pumped in cash to prop them up. The result was hundreds of banks and businesses existing in a sort of purgatory&#8230; neither private nor public&#8230; neither alive nor dead&#8230; They were known as quot;zombies.quot;       br /The result? Japan&#8217;s Lost Decade. Real estate prices plummeted. Japan&#8217;s main stock index, the Nikkei, dropped from a peak near 40,000 to a low of about 7,500 in 2003.       br /Japan&#8217;s government, of course, was trying to help.       br /It&#8217;s easy to say, quot;Let &#8216;em fail.quot; But when you&#8217;re in the thick of things&#8230; when it comes right down to it&#8230; it&#8217;s hard to do. When the public is pleading for government to quot;do something,quot; then government feels compelled to, well, do something.       br /In hindsight, most analysts agree that if the Japanese government had simply gotten out of the way and let the bad banks and businesses fail, the country wouldn&#8217;t have experienced the Lost Decade of the 1990s&#8230;       br /And the Lost Decade has basically morphed into the Lost Two Decades these days. Japanese residential real estate prices have fallen every year since the peak in 1990. And the Nikkei is still down 70% today #8211; nearly 19 years later.       br /Like the Japanese government did in 1990, today, for better or worse, the U.S. government feels compelled to do something. In the short run, things might actually be better&#8230;       br /Whatever lawmakers do today will prop up the system for now. They&#8217;ll save countless businesses that rely on lines of credit to function, and therefore save many jobs on quot;Main Street.quot;       br /But then things will likely get worse&#8230;       br /We may dodge a major crisis&#8230; only to enter a quot;zombiequot; stage. This includes more regulation, lower returns on capital, and uncertainty about who&#8217;s running what. We could end up with quot;zombiequot; financial institutions, companies that are not private but not exactly public either&#8230; owning mortgage bonds of uncertain value. In other words, like Japan&#8217;s Lost Decade.       br /It might be better for the government to do nothing and let businesses fail. But quot;do somethingquot; is the cry. And something is what&#8217;s happening.       br /So let&#8217;s hope lawmakers do as much as can be done at this moment&#8230; which will then allow government to get out of the way as soon as possible.       br /Fed Chairman Ben Bernanke is a student of the Depression. If he has any say, he won&#8217;t let the mistakes of the Depression (or Japan&#8217;s Lost Decade) happen here. If the government&#8217;s got to do something, his plan, undoubtedly, will be to flood the system with dollars until the gears start turning again.       br /If that&#8217;s the plan, then holding at least some gold #8211; the quot;anti-dollarquot; #8211; is probably something worth doing&#8230;       br /Good investing,       br /Steve Sjuggerud       br /http://www.dailywealth.com//p /blockquote  pa href=&#8221;http://burningourmoney.blogspot.com/2008/10/could-we-settle-for-lost-decade.html&#8221;Burning our money: Could We Settle For A Lost Decade?/a/p  blockquote   pa href=&#8221;http://1.bp.blogspot.com/_mJmwQtPmusk/SOoOJCA8Z7I/AAAAAAAACQU/cePj3F5qDec/s1600-h/GDP-following-bank-crisis.jpg&#8221;img alt=&#8221;" src=&#8221;http://1.bp.blogspot.com/_mJmwQtPmusk/SOoOJCA8Z7I/AAAAAAAACQU/cePj3F5qDec/s400/GDP-following-bank-crisis.jpg&#8221; border=&#8221;0&#8243; //a       br /As the darkness descends we couldn&#8217;t stop ourselves looking out the data for previous banking crises. Just how bad will the coming recession be? Could it really be back to the thirties?       br /The chart shows what happened to per capita GDP in the decade following three major crises. And to cheer ourselves up we&#8217;ve labelled them the emLiquidation crisis/em (blue line), the emRecapitalisation crisis/em (red line), and the emZombie crisis /em(green line)       br /As we can see, the strongLiquidation crisis/strong was by emfar/em the worst. In that one, per capita GDP fell by over 30% in four years, andem still/em hadn&#8217;t recovered back to pre-crisis levels 10 years later. It was the nightmare of 1930s America: the Great Depression that ensued when the US authorities allowed thousands of their banks and financial institutions to go into liquidation following the stock market crash.       br /Next worse - albeit much less severe - was the strongRecapitalisation crisis/strong. In that one, GDP per capita fell by 6% in three years, but then rebounded strongly to surpass pre-crisis levels within five years. This was the a href=&#8221;http://www.nytimes.com/2008/09/23/business/worldbusiness/23krona.html?_r=1amp;oref=slogin&#8221;much praised Swedish bank rescue/a of the early 90s, when the Swedish authorities injected taxpayer equity into banks busted by a domestic property market crash. Existing shareholders were wiped out, but the banks were put back on a sound footing, and the taxpayers were later able to sell out at a profit (within just 7 years).       br /The least bad, by far, was the strongZombie crisis/strong. In that one GDP continued to grow, albeit somewhat sluggishly and erratically. At the end of the decade, GDP per capita was 10% higher than when the crisis broke.       br /Which is a little odd. Because that was the Japanese banking crisis which followed the bursting of their asset bubble in 1990. By common consent, the Japanese authorities made a complete horlicks of managing the fall-out and those ten years have become known as the a href=&#8221;http://en.wikipedia.org/wiki/Japanese_asset_price_bubble&#8221;Lost Decade/a. It&#8217;s supposed to be the example of how emnot/em to do it.       br /The Japanese failed to insist on mass bank recapitalisation or even proper loan write-downs. And far from forcing mergers and consolidation, they allowed things to jog along more or less as was. Japanese banks became known as emZombie Banks/em, a living dead who were incapable of carrying out their basic but vital functions such as extending credit. Japan&#8217;s population, it is said, suffered much longer than they need have.       br /And yet in retrospect, facing what we now face, maybe the Bank of Japan and the government didn&#8217;t doem such/em a bad job after all.       br /Any chance we could settle for a Lost Decade?       br /Sadly, no.       br /For one thing, this is now a global crisis, not confined to one economy. And also, western banks now have to write down their bad debts on a emmark to market/em basis. Since international banking regulations were tightened in the 90s, the option to quietly ignore the bad news for a few years is no longer available&#8230; and you can&#8217;t stuff that particular genii back into the bottle.       br /So the real choice is between the Liquidation option and the Recapitalisation option.       br /We know which we&#8217;d choose.       br /strongFootnote:/strong The chart shows GDP per capita for the specific country concerned. In the case of the Liquidation crisis, the blue line plots the course of US GDP, not world GDP. And as you may know, the US suffered emmuch /emworse than Britain in the 30s. Indeed, Britain&#8217;s per capita GDP recovered back to pre-crisis levels within five years. Which kind of makes you wonder why socialism got such a hold here./p /blockquote  pihttp://haloscan.com/tb/mikedenham/4761995724621946552/i/p</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=52</wfw:commentRss>
		</item>
		<item>
		<title>Amazonrsquo;s Elastic Block Store explained</title>
		<link>http://rawwell.site50.net/?p=51</link>
		<comments>http://rawwell.site50.net/?p=51#comments</comments>
		<pubDate>Sun, 09 Nov 2008 06:07:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=51</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.zce2r.th8.us+Amazonrsquo%3Bs+Elastic+Block+Store+explained" title="Post to Twitter (www.zce2r.th8.us)"></a>a href=&#8221;http://blog.rightscale.com/2008/08/20/amazon-ebs-explained/&#8221;Amazon#8217;s Elastic Block Store explained #171; RightScale Blog/a   blockquote   pNow that Amazon#8217;s Elastic Block Store is live I thought it#8217;d be helpful to explain all the ins and outs as well as how to use them. The official information about EBS is found on the AWS site, a href=&#8221;http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters&#8221;I#8217;ve written/a [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.zce2r.th8.us+Amazonrsquo%3Bs+Elastic+Block+Store+explained" title="Post to Twitter (www.zce2r.th8.us)"></a><p>a href=&#8221;http://blog.rightscale.com/2008/08/20/amazon-ebs-explained/&#8221;Amazon#8217;s Elastic Block Store explained #171; RightScale Blog/a   blockquote   pNow that Amazon#8217;s Elastic Block Store is live I thought it#8217;d be helpful to explain all the ins and outs as well as how to use them. The official information about EBS is found on the AWS site, a href=&#8221;http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters&#8221;I#8217;ve written/a about the significance of EBS before and I#8217;ll follow-up with a href=&#8221;http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters&#8221;a post about some new use-cases it enables/a./p    h5The Basics/h5    pEBS starts out really simple: you create a volume from 1GB to 1TB in size and then you mount it on a device (like /dev/sdj) on an instance, format it, and off you go. Later you can detach it, let it sit for a while, and then reattach it to a different instance. You can also snapshot the volume at any time to S3, and if you want to restore your snapshot you can create a fresh volume from the snapshot. Sounds simple, eh? It is but the devil is in the detail!/p   dldtimg height=&#8221;187&#8243; alt=&#8221;Amazon Elastic Block Store features&#8221; src=&#8221;http://rightscale.files.wordpress.com/2008/08/01-ebs_features1.gif?w=450amp;h=187&#8243; width=&#8221;450&#8243; / /dt/dl    h5Reliability/h5    pEBS volumes have redundancy built-in, which means that they will not fail if an individual drive fails or some other single failure occurs. But they are not as redundant as S3 storage which replicates data into multiple availability zones: an EBS volume lives entirely in one availability zone. This means that making snapshot backups, which are stored in S3, is important for long-term data safeguarding./p    pI know that folks at Amazon have thought long and hard how to characterize the reliability of EBS volumes, so here#8217;s their explanation taken from the EC2 detail page:/p    blockquote     pAmazon EBS volumes are designed to be highly available and reliable. Amazon EBS volume data is replicated across multiple servers in an Availability Zone to prevent the loss of data from the failure of any single component. The durability of your volume depends both on the size of your volume and the percentage of the data that has changed since your last snapshot. As an example, volumes that operate with 20 GB or less of modified data since their most recent Amazon EBS snapshot can expect an annual failure rate (AFR) of between 0.1% - 0.5%, where failure refers to a complete loss of the volume. This compares with commodity hard disks that will typically fail with an AFR of around 4%, making EBS volumes 10 times more reliable than typical commodity disk drives./p   /blockquote    pFrom a practical point of view what this means is that you should expect the same type of reliability you get from a fully redundant RAID storage system. While it may be technically possible to increase the reliability by, for example, mirroring two EBS volumes in software on one instance, it is much more productive to rely on EBS directly. Focus your efforts on building a good snapshot strategy that ensures frequent and consistent snapshots, and build good scripts that allow you to recover from many types of failures using the snapshots and fresh instances and volumes./p    h5Volume performance/h5    pOur performance observations are based on the pre-release EBS volumes, thus some variations on the production systems should be expected. On the one hand our pre-release tests were probably running on a small infrastructure with fewer users, but on the other hand many of these users were also running stress tests, so it#8217;s really hard to tell how all this will carry over. Only time will tell./p    pEBS volumes are network attached disk storage and thus take a slice off the instance#8217;s overall network bandwidth. The speed of light here is evidently 1GBps, which means that the peak sequential transfer rate is 120MBytes/sec. #8220;Any number larger than that is an error in your math.#8221; We see over 70MB/sec using sysbench on a m1.small instance, which is hot! Presumably we didn#8217;t get much network contention from other small instances on the same host when running the benchmarks. For random access we#8217;ve seen over 1000 I/O ops/sec, but it#8217;s much more difficult to benchmark those types of workloads. The bottom line though is that performance exceeds what we#8217;ve seen for filesystems striped across the four local drives of x-large instances./p    pWith EBS it is possible to increase the I/O transaction rate further by mounting multiple EBS volumes on one instance and striping filesystems across them. For streaming performance this doesn#8217;t seem worthwhile as the limit of the available instance network bandwidth is already reached with one volume, but it can increase the performance of random workloads as more heads can be seeking at a time./p    h5Snapshot backups/h5    pSnapshot backups are simultaneously the most useful and the most difficult to understand feature of EBS. Let me try to explain. A snapshot of an EBS volume can be taken at any time, it causes a copy of the data in the volume to be written to S3 where it is stored redundantly in multiple availability zones (like all data in S3). The first peculiarity is that snapshots do not appear in your S3 buckets, thus you can#8217;t access them using the standard S3 API. You can only list the snapshots using the EC2 API and you can restore a snapshot by creating a new volume from it. The second peculiarity is that snapshots are incremental, which means that in order to create a subsequent snapshot, EBS only saves the disk blocks that have changed since previous snapshots to S3./p    pHow the incremental snapshots work conceptually is depicted in the diagram below. Each volume is divided up into blocks. When the first snapshot of a volume is taken all blocks of the volume that have ever been written are copied to S3, and then a snapshot table of contents is written to S3 that lists all these blocks. Now, when the second snapshot is taken of the same volume only the blocks that have changed since the first snapshot are copied to S3. The table of contents for the second snapshot is then written to S3 and lists all the blocks on S3 that belong to the snapshot. Some are shared with the first snapshot, some are new. The third snapshot is created similarly and can contain blocks copied to S3 for the first, second and third snapshots./p   dldtimg height=&#8221;690&#8243; alt=&#8221;Illustration of EBS snapshots to show incremental storage of a snapshots block in Amazon S3&#8243; src=&#8221;http://rightscale.files.wordpress.com/2008/08/03-ebs_snapshot2.gif?w=450amp;h=690&#8243; width=&#8221;450&#8243; / /dt/dl    pThere are two nice things about the incremental nature of the snapshots: it saves time and space. Taking subsequent snapshots can be very fast because only changed blocks need to be sent to S3, and it saves space because you#8217;re only paying for the storage in S3 of the incremental blocks. What is difficult to answer is how much space a snapshot uses. Or, to put it differently, how much space would be saved if a snapshot were deleted. If you delete a snapshot, only the blocks that are only used by that snapshot (i.e. are only referenced by that snapshot#8217;s table of contents) are deleted./p    pSomething to be very careful about with snapshots is consistency. A snapshot is taken at a precise moment in time even though the blocks may trickle out to S3 over many minutes. But in most situations you will really want to control what#8217;s on disk vs. what#8217;s in-flight at the moment of the snapshot. This is particularly important when using a database. We recommend you freeze the database, freeze the file system, take the snapshot, then unfreeze everything. At the file system level we#8217;ve been using xfs for all the large local drives and EBS volumes because it#8217;s fast to format and supports freezing. Thus when taking a snapshot we perform an xfs freeze, take the snapshot, and unfreeze. When running mysql we also #8220;flush all tables with read lock#8221; to briefly halt writes. All this ensures that the snapshot doesn#8217;t contain partial updates that need to be recovered when the snapshot is mounted. It#8217;s like USB dongles: if you pull the dongle out while it#8217;s being written to #8220;your mileage may vary#8221; when you plug it back into another machine#8230;/p    pSnapshot performance appears to be pretty much gated by the performance of S3, which is around 20MBytes/sec for a single stream. The three big bonuses here are that the snapshot is incremental, that the data is compressed, and that all this is performed in the background by EBS without affecting the instance on which the volume is mounted much. Obviously the data needs to come off the disks, so there is some contention to be expected, but compared to having to do the transfer from disk through the instance to S3 it is like night and day./p    h5Availability Zones/h5    pEBS volumes can only be mounted on an instance in the same availability zone, which makes sense when you think of availability zones as being equivalent to datacenters. It would probably be technically possible to mount volumes across zones, but from a network latency and bandwidth point of view it doesn#8217;t make much sense./p    pThe way you get a volume#8217;s data from one zone into another is through a snapshot: You snapshot one volume and then immediately create a new volume in a different zone from the snapshot. We have really gotten away from the idea that we#8217;re unmounting a volume from one instance and then remount it on the next one: we always go through a snapshot for a variety of reasons. The way we think and operate is as follows:/p    ul     liYou create a volume, mount it on an instance, format it, and write some data to it. /li      liThen you periodically snapshot the volume for backup purposes. /li      liIf you don#8217;t need the instance anymore, you may terminate it and, after unmounting the volume you always take a final snapshot. If the instance crashes instead of properly terminating, you also always take a final snapshot of the volume as it was left. /li      liWhen you launch a new instance on which you want the same data, you create a fresh volume from your snapshot of choice. This may be the last snapshot, but it could also be a prior one if it turns out that the last one is corrupt (e.g. in the case of an instance crash or of some software failure). /li   /ul    pBy creating a volume from the snapshot you achieve two things: one, you are independent of the availability zone of the original volume, and second, you have a repeatable process in case mounting the volume fails, which can easily happen especially if the unmount wasn#8217;t clean./p    pNow, of course, in some situations you can directly remount the original volume instead of creating a new volume from a snapshot as an optimization. This applies if the new instance is in the same availability zone, the volume corresponds to the snapshot that we#8217;d like to mount, and the volume is guaranteed not to have been modified since (e.g. by a failed prior mount). The best is to think of the volume as a high-speed cache for the snapshot./p    h5Price/h5    pEstimating the costs of EBS is really quite tricky. The easy part is the storage cost of $0.10 per GB per month. Once you create a volume of a certain size you#8217;ll see the charge. The $0.10 per million I/O transactions are much harder to estimate. To get a rough estimate you can look at /proc/diskstats on your servers. This will include something like this:/p    pre   8  160 sdk 9847 77 311900 56570 1912664 3312437 160672914 211993229 0 1597261 212049797<br />
   8  176 sdl 333 86 4561 1538 895 51 19002 20131 0 4043 21669/pre</p>
<p>  pwhich is just a pile of numbers. Following the a href=&#8221;http://devresources.linux-foundation.org/dev/robustmutexes/src/fusyn.hg/Documentation/iostats.txt&#8221;explanation for the columns/a you should sum the first number (reads completed) and the fifth number (writes completed) to arrive at the number of I/O transactions (9847+1912664 for /dev/sdk above). This is not 100% accurate but should be close (I believe subtracting the 2nd and 6th numbers gets you closer yet, but I prefer an over-estimate). As a point of reference, our main database server is pretty busy and chugs along at an average of 17 transactions per second, which should total to around $4.40 per month. But our monitoring servers, prior to some recent optimizations, hammered the disks as fast as they would go at over 1000 random writes per second sustained 24#215;7. That would end up costing over $250 per month! As far as I can tell, for most situations the EBS transaction costs will be in the noise, but you can make it expensive if you#8217;re not careful./p</p>
<p>  pThe cost of snapshots is harder to estimate due to their incremental nature. First of all, only the blocks written are captured on S3 (i.e. blocks on the volume that have never been written are not stored on S3). Second it#8217;s tricky to talk about the cost of a snapshot due to their incremental sharing./p</p>
<p>  h5Summing it up/h5</p>
<p>  pAll in all it#8217;s amazing how simple EBS is, yet how complex a universe of options it opens. Between snapshots, availability zones, pricing, and performance there are many options to consider and a lot of automation to provide. Of course at RightScale we#8217;re busy working out a lot of these for you, but beyond that it is not an overstatement to say that Amazon#8217;s Elastic Block Store brings cloud computing to a whole new level. I#8217;ll repeat what I#8217;ve said before: if you#8217;re using traditional forms of hosting it#8217;s gonna get pretty darn hard for you to keep up with the cloud, and you#8217;ve probably already fallen behind at this point!/p<br />
/blockquote</p>
<p>pa href=&#8221;http://blog.rightscale.com/2008/04/13/amazon-takes-ec2-to-the-next-level-with-persistent-storage-volumes/&#8221;Amazon takes EC2 to the next level with persistent storage volumes #171; RightScale Blog/a /p</p>
<p>blockquote<br />
  pThe Amazon folks have gone public today with the next EC2 feature: persistent storage. The official information is found in a href=&#8221;http://aws.typepad.com/aws/2008/04/block-to-the-fu.html&#8221;Jeff Barr#8217;s blog entry/a and in a href=&#8221;http://developer.amazonwebservices.com/connect/thread.jspa?threadID=21082amp;tstart=0&#8243;Matt#8217;s forum post/a. Calling the persistent storage a #8220;feature#8221; is actually quite an understatement, it really revolutionizes EC2 and enables usage patterns that any big-iron SAN user would die for./p</p>
<p>  h5The basics/h5</p>
<p>  pWhat does this persistent storage look like? We#8217;ve been testing it for awhile and are thoroughly impressed. The Amazon folks are clearly still fine-tuning a lot of the details, but basically you can create storage volumes in the cloud next to the server instances you launch in the cloud. Think of having a really big SAN in the cloud in which you can create volumes of up to 1TB each with a single API call, or with a simple click in the RightScale UI (yes, of course we#8217;ll have nice support for the storage volumes on our site coupled with some neat automation and an array of pre-packaged solutions). You can mount one or multiple volumes on an instance and they appear just like the other local drives, so you can format them as you like, set-up striping and do other useful things./p</p>
<p>  pThe feature that really makes the storage volumes sizzle is the ability to snapshot them to S3 and then create new volumes from the snapshots. The snapshots are great for durability: once a snapshot is taken it is stored in S3 with all the reliability attributes of S3, namely redundant storage in multiple availability zones. This essentially solves the whole backup issue with one simple API call or click in the RightScale UI. You can also easily restore a snapshot by creating a fresh volume from it. This feature is useful beyond just restoring a backup: you may restore to another instance where you now have a clone of the data and can do whatever you want to it. Wow!/p</p>
<p>  h5The cool stuff/h5</p>
<p>  pThere are so many great uses for the storage volumes that it#8217;s impossible to write them all up in a single blog post, and we obviously haven#8217;t thought of them all (or even close). The first usage scenario we looked into is running a database. Up to today the only setup for a mission critical database we recommend is using two instances with real-time database replication and frequent backups to S3. We#8217;ve now installed our a href=&#8221;http://www.rightscale.com/m/features.html&#8221;Manager for MySQL/a replicated set-up for many, many customers and it works very well. In short, we use MySQL replication for redundancy and frequent (like every 10 minutes) backups to S3 on the slave to guard against the unlikely event of simultaneous failure of both instances located in different availability zones./p</p>
<p>  pWith the storage volumes the Manager for MySQL set-up works even better. Instead of having to tar-up the database files and upload them to S3 we can just take a snapshot. And in order to initialize a slave we simply create a volume for it from the last snapshot of the master and launch the replication: no more rsync of the data is necessary. It#8217;s really nice to see how all the automation we#8217;ve built stays in place with the new Amazon capabilities and saves just as many headaches as before, it just gets turbocharged by the storage volumes!/p</p>
<p>  pIn addition, the storage volumes enable slightly lower-end database offerings. Since the storage volumes are more durable than local instance storage a lot of the risk of losing it all if the instance dies goes away. It is now possible to run a single instance with the database data living on a storage volume and to take frequent snapshots to get backups onto S3. Should the instance die, it is very simple to launch a fresh one using the same storage volume. Typically it would take only a few minutes for the new instance to come up and take off where the old one stopped! Of course this set-up has more downtime when compared to the redundant database set-up, and one has to be really careful in setting everything up to minimize the time it takes to mount the volume and to ensure a successful database recovery./p</p>
<p>  pJust as the storage volumes enable the reliable use of single-instance databases they also enable single-tenant appliances in EC2. It is now possible to host the data for a single-tenant virtual appliance on a storage volume and mount it on an instance. What#8217;s really cool is the decoupling of the data from the instance. It means that you can start a customer on a small instance and if they outgrow it, you can migrate them almost seamlessly to a large and later an x-large instance, all using the same storage volume. Beyond an x-large a couple of interesting options are possible to increase performance further, such as striping multiple storage volumes. EC2 really brings virtual appliances to the next level!/p</p>
<p>  pThe S3 snapshots enable some completely different and very intriguing usage scenarios. Suppose you#8217;re doing some DNA matching against a Genome data set on 1000 instances. In addition to firing-up 1000 instances on a whim you can, also on a whim, clone a nicely prepared snapshot of the data set 1000-times to create 1000 volumes, one for each instance. BANG! This way they can all independently crawl over the data set. This type of massive (essentially read-only) cloning really opens-up new possibilities in running such large computations in a cost effective manner./p</p>
<p>  h5Summing it up/h5</p>
<p>  pI#8217;ll stop here, but clearly the cloud has just squared in size! Two years ago, when I started on EC2 there were only small instances available and the sentiment was that in order to get the horizontal scalability and pricing of the cloud you had to accept inferior features. In the meantime we#8217;ve gotten multiple instance sizes plus recently the remappable IP addresses and availability zones. That already indicated that computing in the cloud would soon surpass computing in traditional colos or in your own datacenter not just in scale and price, but also in feature set. With the addition of the storage volumes with all the cool snapshot features it#8217;s now a emfait accomplit/em: the cloud adopters will have much more computing horsepower and flexibility at their fingertips than those who are still racking their own machines. It#8217;s going to be like agile software development: if you want to survive as an internet/web service you will have to compute in the cloud or your competitors will leave you in the dust by being able to deploy faster, better, and cheaper./p</p>
<p>  pstrongUpdate:/strong Werner Vogels, Amazon#8217;s CTO also a href=&#8221;http://www.allthingsdistributed.com/2008/04/persistent_storage_for_amazon.html&#8221;blogs about the storage volumes/a in a href=&#8221;http://www.allthingsdistributed.com/&#8221;all-things-distributed/a with a little more background perspective. The Amazon folks are getting pretty coordinated with news appearing at the same time on their blogs and the forums. Maybe I missed it, but I don#8217;t think they even press release this stuff#8230;/p<br />
/blockquote<br />
a href=&#8221;http://www.allthingsdistributed.com/2008/04/persistent_storage_for_amazon.html&#8221;Persistent Storage for Amazon EC2 - All Things Distributed/a </p>
<p>blockquote<br />
  pI would like to introduce to you the newest feature of Amazon EC2: Persistent local storage. This has been very high on the request list of EC2 customers and I believe that combined with the a href=&#8221;http://www.allthingsdistributed.com/2008/03/on_the_road_to_highly_availabl.html&#8221;Availability Zones and Elastic IP Address/a features released earlier this month this makes EC2 the ideal environment for building highly scalable and reliable applications. /p</p>
<p>  pSignificant innovation has gone into this feature: Instead of restricting developers to the use of a particular (distributed) file-system we once again decided to look at what is the most fundamental building block and how we could offer that in the most scalable and reliable manner. /p</p>
<p>  pPersistent storage for Amazon EC2 will be offered in the form of storage volumes which you can mount into your EC2 instance as a raw block storage device. It basically looks like an unformatted hard disk. Once you have the volume mounted for the first time you can format it with any file system you want or if you have advanced applications such as high-end database engines, you could use it directly. /p</p>
<p>  pDevelopers can create any number of volumes they want, in size ranging from 1 GB to 1TB. This volume will be created within a specified Availability Zone and will be accessible by your EC2 instances running in that Availability Zone. As to be expected with a volume abstraction only one instance can have the volume mounted at any given time. Volumes can migrate and be reattached to other instances if necessary for failure handling or application migration reasons. /p</p>
<p>  pThe consistency of data written to this device is similar to that of other local and network-attached devices; it is under control of the developer when and how to force flush data to disk if you want to bypass the traditional lazy-writer functionality in the operating systems file-cache. Because of the session oriented model for access to the volume you do not need to worry about a href=&#8221;http://www.allthingsdistributed.com/2007/12/eventually_consistent.html&#8221;eventual consistency issues/a. /p</p>
<p>  pbSnapshots/b/p</p>
<p>  pimg height=&#8221;411&#8243; alt=&#8221;abstract-disk.jpg&#8221; src=&#8221;http://www.allthingsdistributed.com/images/abstract-disk.jpg&#8221; width=&#8221;292&#8243; / If we would have stopped here that would have already been quite a solid service for developers to use. We realized we needed to do more to make sure that developers could build truly geo-scalable applications. For that we introduced snapshot functionality: you ask the EC2 to make a isnapshot/i of your volume and store it into Amazon S3. You can use this for long term backup purposes, for use in rollback strategies, but also for (world-wide) volume re-creation purposes. /p</p>
<p>  pWhen you create a volume you can ask it to be created from a particular snapshot. And because this snapshot is stored in S3, which is accessible in all Availability Zones, your new volume can be created in any zone, not just the one where the snapshot originated from. /p</p>
<p>  pThe snapshot is extremely powerful technology and allows for building highly fault-tolerant applications operating world-wide. Combine these snapshots with Availability Zones and Elastic IPs and you have all the tools to manage and migrate even the most complex of applications. /p</p>
<p>  pAnd the great thing is it that it is all done with using standard technologies such that you can use this with any kind of application, middleware or any infrastructure software, whether it is legacy or brand new. /p</p>
<p>  pbEarly access/b/p</p>
<p>  pThis new functionality is already being used privately by a handful of customers, and will be publically available later this year. We are talking about this service at this early stage because we believe this will help many of our EC2 customers with setting their development priorities for this year. /p<br />
/blockquote<br />
a href=&#8221;http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters/&#8221;Why Amazon#8217;s Elastic Block Store Matters #171; RightScale Blog/a </p>
<p>blockquote<br />
  pOn the technical side, Amazon#8217;s EBS service may look like #8220;just#8221; another great new feature of the Elastic Compute Cloud, but on the business side it enables a whole slew of new customers. I won#8217;t pretend that I understand all the new uses, but I can talk about those we see and are supporting./p</p>
<p>  pFirst a couple of words about what EBS is. In short it#8217;s a SAN (Storage Area Network) in the cloud. You can allocate a disk volume of 1GB to 1TB in size from what is now an endless SAN in the cloud and attach it to an instance of yours running in EC2. The volume is stored on redundant disks (i.e. with some form of RAID) and has a lifetime separate from any instance on which it is mounted, so you can unmount it and later remount it on another instance. You can also perform a snapshot backup of a volume to S3, where it is stored with the redundancy and durability of all objects on S3. Moreover, successive snapshots are incremental providing a very powerful and efficient incremental backup capability for volumes./p</p>
<p>  pAll this and much more is explained in detail in a href=&#8221;http://blog.rightscale.com/2008/08/20/amazon-ebs-explained&#8221;my other post/a and there#8217;s yet more detailed a href=&#8221;http://wiki.rightscale.com/2._References/Persistent_Storage&#8221;EBS information on our support site/a. The official EBS announcement is on the a href=&#8221;http://www.amazon.com/ec2&#8243;EC2 detail page/a, Werner Vogels a href=&#8221;http://www.allthingsdistributed.com/2008/08/amazon_ebs_elastic_block_store.html&#8221;provides some background/a, and a href=&#8221;http://aws.typepad.com/aws/2008/08/amazon-elastic.html&#8221;Jeff Barr#8217;s blog entry/a has links to many other related announcements./p</p>
<p>  pThe RightScale dashboard supports all the features of EBS and offers a number of additional goodies such as configuring volumes to automatically be attached to servers when these launch and keeping track of the ancestry of a volume or snapshot./p</p>
<p>  pWhat does EBS enable? In short: traditional processing on large datasets and reliable storage for many servers. Let#8217;s look at these two areas one-by-one./p</p>
<p>  h5Large datasets/h5</p>
<p>  pAmazon Web Services are designed for scale. EC2, S3, SQS, and SDB are ideally suited for building large systems that process huge data volumes. The catch has been that they are geared towards modern service oriented systems that can use storage accessed via HTTP PUTs and GETs (Amazon S3), can work using a non-relational database like Amazon SDB, and thrive on large numbers of simple servers (EC2). Users that have more traditional applications, such as relational databases, that require large datasets stored in a file system with a POSIX interface have had difficulties in meeting all their requirements for operating in AWS. While an EC2 X-large instance comes with about 1.4TB of local disk it is rather difficult to actually use this disk space in a production system. Populating the disk with data at boot time can take hours and backups, replication and restoring the data in case of an instance failure are all sore points. For up to 100GB the timescales are all workable, but beyond that it gets difficult./p</p>
<p>  pWith EBS the processing of large datasets contained within a file system becomes easily accessible. First of all, volumes can be up to 1TB in size and beyond that it is possible to mount multiple volumes on the same instance such that file systems of 10TB are practical. The volumes can further be backed-up to S3 using the snapshots and they can be replicated by creating new volumes from the snapshots. What is particularly nice is that a volume can be created in any availability zone (think datacenter) of a region from a snapshot, so copying a large volume across datacenters can be off-loaded to EBS and is done very efficiently./p</p>
<p>  h5Many virtual appliance servers/h5</p>
<p>  pEBS also really enables SaaS vendors that use a single-tenant #8220;virtual appliance#8221; model. Many software vendors have approached us with use-cases where they would like to run individual servers on behalf of their customers. Often these servers are co-managed between customer and software vendor or have other properties that make the service inappropriate for multi-tenant SaaS implementation. In these use-cases the end-customer is storing important data on these servers and requires a robust data safeguarding architecture, in particular for database storage. While we today have a very effective mysql replication and backup solution, it is really geared at multi-server set-ups and doesn#8217;t fit the price and complexity budget of cookie-cutter single-server virtual appliances. For those use-cases EBS brings the desired performance and reliability and drops the complexity and price./p</p>
<p>  pWith EBS the canonical reliable single-server virtual appliance can be implemented with the following architecture: an EC2 instance whose type is chosen for the cpu and memory required, an EBS volume sized appropriately for the data set, a revolving set of frequent snapshots providing disaster recovery backups, and periodic application-level #8220;export#8221; of backups to S3 for archiving and off-cloud backups. In case of a total failure of the EC2 instance and the EBS volume (e.g. datacenter fire) a new instance and volume can be allocated in another availability zone from the last revolving snapshot./p</p>
<p>  pWhen it comes time to upgrade the virtual appliance to a new software version it becomes relatively easy for the software vendor to spin-up a second instance and volume with the upgraded software for important customers so they can test-drive the new version on their data and train their internal users before committing to the upgrade./p<br />
/blockquote<br />
http://www.typepad.com/t/trackback/495065/32648054 http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters/trackback/ http://blog.rightscale.com/2008/04/13/amazon-takes-ec2-to-the-next-level-with-persistent-storage-volumes/trackback/ http://mt.vogels.net/mt-tb.cgi/118</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=51</wfw:commentRss>
		</item>
		<item>
		<title>Amazon takes EC2 to the next level with persistent storage volumes</title>
		<link>http://rawwell.site50.net/?p=50</link>
		<comments>http://rawwell.site50.net/?p=50#comments</comments>
		<pubDate>Sun, 09 Nov 2008 05:59:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[amazon]]></category>

		<category><![CDATA[cloud]]></category>

		<category><![CDATA[tech]]></category>

		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=50</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.3anfp.th8.us+Amazon+takes+EC2+to+the+next+level+with+persistent+storage+volumes" title="Post to Twitter (www.3anfp.th8.us)"></a>a href=&#8221;http://blog.rightscale.com/2008/04/13/amazon-takes-ec2-to-the-next-level-with-persistent-storage-volumes/&#8221;Amazon takes EC2 to the next level with persistent storage volumes #171; RightScale Blog/a   blockquote   pThe Amazon folks have gone public today with the next EC2 feature: persistent storage. The official information is found in a href=&#8221;http://aws.typepad.com/aws/2008/04/block-to-the-fu.html&#8221;Jeff Barr#8217;s blog entry/a and in a href=&#8221;http://developer.amazonwebservices.com/connect/thread.jspa?threadID=21082amp;tstart=0&#8243;Matt#8217;s forum post/a. Calling the persistent storage [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.3anfp.th8.us+Amazon+takes+EC2+to+the+next+level+with+persistent+storage+volumes" title="Post to Twitter (www.3anfp.th8.us)"></a><p>a href=&#8221;http://blog.rightscale.com/2008/04/13/amazon-takes-ec2-to-the-next-level-with-persistent-storage-volumes/&#8221;Amazon takes EC2 to the next level with persistent storage volumes #171; RightScale Blog/a   blockquote   pThe Amazon folks have gone public today with the next EC2 feature: persistent storage. The official information is found in a href=&#8221;http://aws.typepad.com/aws/2008/04/block-to-the-fu.html&#8221;Jeff Barr#8217;s blog entry/a and in a href=&#8221;http://developer.amazonwebservices.com/connect/thread.jspa?threadID=21082amp;tstart=0&#8243;Matt#8217;s forum post/a. Calling the persistent storage a #8220;feature#8221; is actually quite an understatement, it really revolutionizes EC2 and enables usage patterns that any big-iron SAN user would die for./p    h5The basics/h5    pWhat does this persistent storage look like? We#8217;ve been testing it for awhile and are thoroughly impressed. The Amazon folks are clearly still fine-tuning a lot of the details, but basically you can create storage volumes in the cloud next to the server instances you launch in the cloud. Think of having a really big SAN in the cloud in which you can create volumes of up to 1TB each with a single API call, or with a simple click in the RightScale UI (yes, of course we#8217;ll have nice support for the storage volumes on our site coupled with some neat automation and an array of pre-packaged solutions). You can mount one or multiple volumes on an instance and they appear just like the other local drives, so you can format them as you like, set-up striping and do other useful things./p    pThe feature that really makes the storage volumes sizzle is the ability to snapshot them to S3 and then create new volumes from the snapshots. The snapshots are great for durability: once a snapshot is taken it is stored in S3 with all the reliability attributes of S3, namely redundant storage in multiple availability zones. This essentially solves the whole backup issue with one simple API call or click in the RightScale UI. You can also easily restore a snapshot by creating a fresh volume from it. This feature is useful beyond just restoring a backup: you may restore to another instance where you now have a clone of the data and can do whatever you want to it. Wow!/p    h5The cool stuff/h5    pThere are so many great uses for the storage volumes that it#8217;s impossible to write them all up in a single blog post, and we obviously haven#8217;t thought of them all (or even close). The first usage scenario we looked into is running a database. Up to today the only setup for a mission critical database we recommend is using two instances with real-time database replication and frequent backups to S3. We#8217;ve now installed our a href=&#8221;http://www.rightscale.com/m/features.html&#8221;Manager for MySQL/a replicated set-up for many, many customers and it works very well. In short, we use MySQL replication for redundancy and frequent (like every 10 minutes) backups to S3 on the slave to guard against the unlikely event of simultaneous failure of both instances located in different availability zones./p    pWith the storage volumes the Manager for MySQL set-up works even better. Instead of having to tar-up the database files and upload them to S3 we can just take a snapshot. And in order to initialize a slave we simply create a volume for it from the last snapshot of the master and launch the replication: no more rsync of the data is necessary. It#8217;s really nice to see how all the automation we#8217;ve built stays in place with the new Amazon capabilities and saves just as many headaches as before, it just gets turbocharged by the storage volumes!/p    pIn addition, the storage volumes enable slightly lower-end database offerings. Since the storage volumes are more durable than local instance storage a lot of the risk of losing it all if the instance dies goes away. It is now possible to run a single instance with the database data living on a storage volume and to take frequent snapshots to get backups onto S3. Should the instance die, it is very simple to launch a fresh one using the same storage volume. Typically it would take only a few minutes for the new instance to come up and take off where the old one stopped! Of course this set-up has more downtime when compared to the redundant database set-up, and one has to be really careful in setting everything up to minimize the time it takes to mount the volume and to ensure a successful database recovery./p    pJust as the storage volumes enable the reliable use of single-instance databases they also enable single-tenant appliances in EC2. It is now possible to host the data for a single-tenant virtual appliance on a storage volume and mount it on an instance. What#8217;s really cool is the decoupling of the data from the instance. It means that you can start a customer on a small instance and if they outgrow it, you can migrate them almost seamlessly to a large and later an x-large instance, all using the same storage volume. Beyond an x-large a couple of interesting options are possible to increase performance further, such as striping multiple storage volumes. EC2 really brings virtual appliances to the next level!/p    pThe S3 snapshots enable some completely different and very intriguing usage scenarios. Suppose you#8217;re doing some DNA matching against a Genome data set on 1000 instances. In addition to firing-up 1000 instances on a whim you can, also on a whim, clone a nicely prepared snapshot of the data set 1000-times to create 1000 volumes, one for each instance. BANG! This way they can all independently crawl over the data set. This type of massive (essentially read-only) cloning really opens-up new possibilities in running such large computations in a cost effective manner./p    h5Summing it up/h5    pI#8217;ll stop here, but clearly the cloud has just squared in size! Two years ago, when I started on EC2 there were only small instances available and the sentiment was that in order to get the horizontal scalability and pricing of the cloud you had to accept inferior features. In the meantime we#8217;ve gotten multiple instance sizes plus recently the remappable IP addresses and availability zones. That already indicated that computing in the cloud would soon surpass computing in traditional colos or in your own datacenter not just in scale and price, but also in feature set. With the addition of the storage volumes with all the cool snapshot features it#8217;s now a emfait accomplit/em: the cloud adopters will have much more computing horsepower and flexibility at their fingertips than those who are still racking their own machines. It#8217;s going to be like agile software development: if you want to survive as an internet/web service you will have to compute in the cloud or your competitors will leave you in the dust by being able to deploy faster, better, and cheaper./p    pstrongUpdate:/strong Werner Vogels, Amazon#8217;s CTO also a href=&#8221;http://www.allthingsdistributed.com/2008/04/persistent_storage_for_amazon.html&#8221;blogs about the storage volumes/a in a href=&#8221;http://www.allthingsdistributed.com/&#8221;all-things-distributed/a with a little more background perspective. The Amazon folks are getting pretty coordinated with news appearing at the same time on their blogs and the forums. Maybe I missed it, but I don#8217;t think they even press release this stuff#8230;/p /blockquote  a href=&#8221;http://www.allthingsdistributed.com/2008/04/persistent_storage_for_amazon.html&#8221;Persistent Storage for Amazon EC2 - All Things Distributed/a  blockquote   pI would like to introduce to you the newest feature of Amazon EC2: Persistent local storage. This has been very high on the request list of EC2 customers and I believe that combined with the a href=&#8221;http://www.allthingsdistributed.com/2008/03/on_the_road_to_highly_availabl.html&#8221;Availability Zones and Elastic IP Address/a features released earlier this month this makes EC2 the ideal environment for building highly scalable and reliable applications. /p    pSignificant innovation has gone into this feature: Instead of restricting developers to the use of a particular (distributed) file-system we once again decided to look at what is the most fundamental building block and how we could offer that in the most scalable and reliable manner. /p    pPersistent storage for Amazon EC2 will be offered in the form of storage volumes which you can mount into your EC2 instance as a raw block storage device. It basically looks like an unformatted hard disk. Once you have the volume mounted for the first time you can format it with any file system you want or if you have advanced applications such as high-end database engines, you could use it directly. /p    pDevelopers can create any number of volumes they want, in size ranging from 1 GB to 1TB. This volume will be created within a specified Availability Zone and will be accessible by your EC2 instances running in that Availability Zone. As to be expected with a volume abstraction only one instance can have the volume mounted at any given time. Volumes can migrate and be reattached to other instances if necessary for failure handling or application migration reasons. /p    pThe consistency of data written to this device is similar to that of other local and network-attached devices; it is under control of the developer when and how to force flush data to disk if you want to bypass the traditional lazy-writer functionality in the operating systems file-cache. Because of the session oriented model for access to the volume you do not need to worry about a href=&#8221;http://www.allthingsdistributed.com/2007/12/eventually_consistent.html&#8221;eventual consistency issues/a. /p    pbSnapshots/b/p    pimg height=&#8221;411&#8243; alt=&#8221;abstract-disk.jpg&#8221; src=&#8221;http://www.allthingsdistributed.com/images/abstract-disk.jpg&#8221; width=&#8221;292&#8243; / If we would have stopped here that would have already been quite a solid service for developers to use. We realized we needed to do more to make sure that developers could build truly geo-scalable applications. For that we introduced snapshot functionality: you ask the EC2 to make a isnapshot/i of your volume and store it into Amazon S3. You can use this for long term backup purposes, for use in rollback strategies, but also for (world-wide) volume re-creation purposes. /p    pWhen you create a volume you can ask it to be created from a particular snapshot. And because this snapshot is stored in S3, which is accessible in all Availability Zones, your new volume can be created in any zone, not just the one where the snapshot originated from. /p    pThe snapshot is extremely powerful technology and allows for building highly fault-tolerant applications operating world-wide. Combine these snapshots with Availability Zones and Elastic IPs and you have all the tools to manage and migrate even the most complex of applications. /p    pAnd the great thing is it that it is all done with using standard technologies such that you can use this with any kind of application, middleware or any infrastructure software, whether it is legacy or brand new. /p    pbEarly access/b/p    pThis new functionality is already being used privately by a handful of customers, and will be publically available later this year. We are talking about this service at this early stage because we believe this will help many of our EC2 customers with setting their development priorities for this year. /p /blockquote a href=&#8221;http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters/&#8221;Why Amazon#8217;s Elastic Block Store Matters #171; RightScale Blog/a   blockquote   pOn the technical side, Amazon#8217;s EBS service may look like #8220;just#8221; another great new feature of the Elastic Compute Cloud, but on the business side it enables a whole slew of new customers. I won#8217;t pretend that I understand all the new uses, but I can talk about those we see and are supporting./p    pFirst a couple of words about what EBS is. In short it#8217;s a SAN (Storage Area Network) in the cloud. You can allocate a disk volume of 1GB to 1TB in size from what is now an endless SAN in the cloud and attach it to an instance of yours running in EC2. The volume is stored on redundant disks (i.e. with some form of RAID) and has a lifetime separate from any instance on which it is mounted, so you can unmount it and later remount it on another instance. You can also perform a snapshot backup of a volume to S3, where it is stored with the redundancy and durability of all objects on S3. Moreover, successive snapshots are incremental providing a very powerful and efficient incremental backup capability for volumes./p    pAll this and much more is explained in detail in a href=&#8221;http://blog.rightscale.com/2008/08/20/amazon-ebs-explained&#8221;my other post/a and there#8217;s yet more detailed a href=&#8221;http://wiki.rightscale.com/2._References/Persistent_Storage&#8221;EBS information on our support site/a. The official EBS announcement is on the a href=&#8221;http://www.amazon.com/ec2&#8243;EC2 detail page/a, Werner Vogels a href=&#8221;http://www.allthingsdistributed.com/2008/08/amazon_ebs_elastic_block_store.html&#8221;provides some background/a, and a href=&#8221;http://aws.typepad.com/aws/2008/08/amazon-elastic.html&#8221;Jeff Barr#8217;s blog entry/a has links to many other related announcements./p    pThe RightScale dashboard supports all the features of EBS and offers a number of additional goodies such as configuring volumes to automatically be attached to servers when these launch and keeping track of the ancestry of a volume or snapshot./p    pWhat does EBS enable? In short: traditional processing on large datasets and reliable storage for many servers. Let#8217;s look at these two areas one-by-one./p    h5Large datasets/h5    pAmazon Web Services are designed for scale. EC2, S3, SQS, and SDB are ideally suited for building large systems that process huge data volumes. The catch has been that they are geared towards modern service oriented systems that can use storage accessed via HTTP PUTs and GETs (Amazon S3), can work using a non-relational database like Amazon SDB, and thrive on large numbers of simple servers (EC2). Users that have more traditional applications, such as relational databases, that require large datasets stored in a file system with a POSIX interface have had difficulties in meeting all their requirements for operating in AWS. While an EC2 X-large instance comes with about 1.4TB of local disk it is rather difficult to actually use this disk space in a production system. Populating the disk with data at boot time can take hours and backups, replication and restoring the data in case of an instance failure are all sore points. For up to 100GB the timescales are all workable, but beyond that it gets difficult./p    pWith EBS the processing of large datasets contained within a file system becomes easily accessible. First of all, volumes can be up to 1TB in size and beyond that it is possible to mount multiple volumes on the same instance such that file systems of 10TB are practical. The volumes can further be backed-up to S3 using the snapshots and they can be replicated by creating new volumes from the snapshots. What is particularly nice is that a volume can be created in any availability zone (think datacenter) of a region from a snapshot, so copying a large volume across datacenters can be off-loaded to EBS and is done very efficiently./p    h5Many virtual appliance servers/h5    pEBS also really enables SaaS vendors that use a single-tenant #8220;virtual appliance#8221; model. Many software vendors have approached us with use-cases where they would like to run individual servers on behalf of their customers. Often these servers are co-managed between customer and software vendor or have other properties that make the service inappropriate for multi-tenant SaaS implementation. In these use-cases the end-customer is storing important data on these servers and requires a robust data safeguarding architecture, in particular for database storage. While we today have a very effective mysql replication and backup solution, it is really geared at multi-server set-ups and doesn#8217;t fit the price and complexity budget of cookie-cutter single-server virtual appliances. For those use-cases EBS brings the desired performance and reliability and drops the complexity and price./p    pWith EBS the canonical reliable single-server virtual appliance can be implemented with the following architecture: an EC2 instance whose type is chosen for the cpu and memory required, an EBS volume sized appropriately for the data set, a revolving set of frequent snapshots providing disaster recovery backups, and periodic application-level #8220;export#8221; of backups to S3 for archiving and off-cloud backups. In case of a total failure of the EC2 instance and the EBS volume (e.g. datacenter fire) a new instance and volume can be allocated in another availability zone from the last revolving snapshot./p    pWhen it comes time to upgrade the virtual appliance to a new software version it becomes relatively easy for the software vendor to spin-up a second instance and volume with the upgraded software for important customers so they can test-drive the new version on their data and train their internal users before committing to the upgrade./p /blockquote http://www.typepad.com/t/trackback/495065/32648054 http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters/trackback/  http://blog.rightscale.com/2008/04/13/amazon-takes-ec2-to-the-next-level-with-persistent-storage-volumes/trackback/ http://mt.vogels.net/mt-tb.cgi/118</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=50</wfw:commentRss>
		</item>
		<item>
		<title>Amazon takes EC2 to the next level with persistent storage volumes</title>
		<link>http://rawwell.site50.net/?p=48</link>
		<comments>http://rawwell.site50.net/?p=48#comments</comments>
		<pubDate>Sun, 09 Nov 2008 05:48:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://rawwell.site50.net/?p=48</guid>
		<description><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.n6fed.th8.us+Amazon+takes+EC2+to+the+next+level+with+persistent+storage+volumes" title="Post to Twitter (www.n6fed.th8.us)"></a>a href=&#8221;http://blog.rightscale.com/2008/04/13/amazon-takes-ec2-to-the-next-level-with-persistent-storage-volumes/&#8221;Amazon takes EC2 to the next level with persistent storage volumes « RightScale Blog/a blockquote   pThe Amazon folks have gone public today with the next EC2 feature: persistent storage. The official information is found in a href=&#8221;http://aws.typepad.com/aws/2008/04/block-to-the-fu.html&#8221;Jeff Barr#8217;s blog entry/a and in a href=&#8221;http://developer.amazonwebservices.com/connect/thread.jspa?threadID=21082amp;tstart=0&#8243;Matt#8217;s forum post/a. Calling the persistent storage a #8220;feature#8221; [...]]]></description>
			<content:encoded><![CDATA[<a class="tweet-this" href="http://twitter.com/home/?status=www.n6fed.th8.us+Amazon+takes+EC2+to+the+next+level+with+persistent+storage+volumes" title="Post to Twitter (www.n6fed.th8.us)"></a><p>a href=&#8221;http://blog.rightscale.com/2008/04/13/amazon-takes-ec2-to-the-next-level-with-persistent-storage-volumes/&#8221;Amazon takes EC2 to the next level with persistent storage volumes « RightScale Blog/a blockquote   pThe Amazon folks have gone public today with the next EC2 feature: persistent storage. The official information is found in a href=&#8221;http://aws.typepad.com/aws/2008/04/block-to-the-fu.html&#8221;Jeff Barr#8217;s blog entry/a and in a href=&#8221;http://developer.amazonwebservices.com/connect/thread.jspa?threadID=21082amp;tstart=0&#8243;Matt#8217;s forum post/a. Calling the persistent storage a #8220;feature#8221; is actually quite an understatement, it really revolutionizes EC2 and enables usage patterns that any big-iron SAN user would die for./p    h5The basics/h5    pWhat does this persistent storage look like? We#8217;ve been testing it for awhile and are thoroughly impressed. The Amazon folks are clearly still fine-tuning a lot of the details, but basically you can create storage volumes in the cloud next to the server instances you launch in the cloud. Think of having a really big SAN in the cloud in which you can create volumes of up to 1TB each with a single API call, or with a simple click in the RightScale UI (yes, of course we#8217;ll have nice support for the storage volumes on our site coupled with some neat automation and an array of pre-packaged solutions). You can mount one or multiple volumes on an instance and they appear just like the other local drives, so you can format them as you like, set-up striping and do other useful things./p    pThe feature that really makes the storage volumes sizzle is the ability to snapshot them to S3 and then create new volumes from the snapshots. The snapshots are great for durability: once a snapshot is taken it is stored in S3 with all the reliability attributes of S3, namely redundant storage in multiple availability zones. This essentially solves the whole backup issue with one simple API call or click in the RightScale UI. You can also easily restore a snapshot by creating a fresh volume from it. This feature is useful beyond just restoring a backup: you may restore to another instance where you now have a clone of the data and can do whatever you want to it. Wow!/p    h5The cool stuff/h5    pThere are so many great uses for the storage volumes that it#8217;s impossible to write them all up in a single blog post, and we obviously haven#8217;t thought of them all (or even close). The first usage scenario we looked into is running a database. Up to today the only setup for a mission critical database we recommend is using two instances with real-time database replication and frequent backups to S3. We#8217;ve now installed our a href=&#8221;http://www.rightscale.com/m/features.html&#8221;Manager for MySQL/a replicated set-up for many, many customers and it works very well. In short, we use MySQL replication for redundancy and frequent (like every 10 minutes) backups to S3 on the slave to guard against the unlikely event of simultaneous failure of both instances located in different availability zones./p    pWith the storage volumes the Manager for MySQL set-up works even better. Instead of having to tar-up the database files and upload them to S3 we can just take a snapshot. And in order to initialize a slave we simply create a volume for it from the last snapshot of the master and launch the replication: no more rsync of the data is necessary. It#8217;s really nice to see how all the automation we#8217;ve built stays in place with the new Amazon capabilities and saves just as many headaches as before, it just gets turbocharged by the storage volumes!/p    pIn addition, the storage volumes enable slightly lower-end database offerings. Since the storage volumes are more durable than local instance storage a lot of the risk of losing it all if the instance dies goes away. It is now possible to run a single instance with the database data living on a storage volume and to take frequent snapshots to get backups onto S3. Should the instance die, it is very simple to launch a fresh one using the same storage volume. Typically it would take only a few minutes for the new instance to come up and take off where the old one stopped! Of course this set-up has more downtime when compared to the redundant database set-up, and one has to be really careful in setting everything up to minimize the time it takes to mount the volume and to ensure a successful database recovery./p    pJust as the storage volumes enable the reliable use of single-instance databases they also enable single-tenant appliances in EC2. It is now possible to host the data for a single-tenant virtual appliance on a storage volume and mount it on an instance. What#8217;s really cool is the decoupling of the data from the instance. It means that you can start a customer on a small instance and if they outgrow it, you can migrate them almost seamlessly to a large and later an x-large instance, all using the same storage volume. Beyond an x-large a couple of interesting options are possible to increase performance further, such as striping multiple storage volumes. EC2 really brings virtual appliances to the next level!/p    pThe S3 snapshots enable some completely different and very intriguing usage scenarios. Suppose you#8217;re doing some DNA matching against a Genome data set on 1000 instances. In addition to firing-up 1000 instances on a whim you can, also on a whim, clone a nicely prepared snapshot of the data set 1000-times to create 1000 volumes, one for each instance. BANG! This way they can all independently crawl over the data set. This type of massive (essentially read-only) cloning really opens-up new possibilities in running such large computations in a cost effective manner./p    h5Summing it up/h5    pI#8217;ll stop here, but clearly the cloud has just squared in size! Two years ago, when I started on EC2 there were only small instances available and the sentiment was that in order to get the horizontal scalability and pricing of the cloud you had to accept inferior features. In the meantime we#8217;ve gotten multiple instance sizes plus recently the remappable IP addresses and availability zones. That already indicated that computing in the cloud would soon surpass computing in traditional colos or in your own datacenter not just in scale and price, but also in feature set. With the addition of the storage volumes with all the cool snapshot features it#8217;s now a emfait accomplit/em: the cloud adopters will have much more computing horsepower and flexibility at their fingertips than those who are still racking their own machines. It#8217;s going to be like agile software development: if you want to survive as an internet/web service you will have to compute in the cloud or your competitors will leave you in the dust by being able to deploy faster, better, and cheaper./p    pstrongUpdate:/strong Werner Vogels, Amazon#8217;s CTO also a href=&#8221;http://www.allthingsdistributed.com/2008/04/persistent_storage_for_amazon.html&#8221;blogs about the storage volumes/a in a href=&#8221;http://www.allthingsdistributed.com/&#8221;all-things-distributed/a with a little more background perspective. The Amazon folks are getting pretty coordinated with news appearing at the same time on their blogs and the forums. Maybe I missed it, but I don#8217;t think they even press release this stuff#8230;/p /blockquote  pa href=&#8221;http://www.brucemacvarish.com/2008/08/amazon-launches-elastic-block-store-as-a-storage-service-for-ec2.html&#8221;Bruce MacVarish Notes: Amazon Launches quot;Elastic Block Storequot; as a Storage Service for EC2/a /p  blockquote   pAmazon continues to lead the way to enable cloud computing based application and service businesses.#160; This represents an additional proof-point of my vision of the quot;future statequot; of enterprise software as:/p    p-Delivered OnDemand      br /-End-User Centric       br /-Social       br /-Device Agnostic       br /-Flow-based       br /-Voice / Visual / Analytics driven/p    pa href=&#8221;http://www.allthingsdistributed.com/2008/08/amazon_ebs_elastic_block_store.html&#8221;Werner Vogels summarizes some of the key points of the Amazon ESB launch/a./p    pquot;Today marks the launch of Amazon EBS (a href=&#8221;http://www.amazon.com/b/ref=sc_fe_c_1_3435361_1?ie=UTF8amp;node=689343011amp;no=3435361amp;me=A36L942TSJ2AJA&#8221;Elastic Block Store/a), the long awaited persistent storage service for EC2. Details can be found on the a href=&#8221;http://aws.amazon.com/ec2&#8243;EC2 detail page/a, the a href=&#8221;http://phx.corporate-ir.net/phoenix.zhtml?c=176060amp;p=irol-newsArticleamp;ID=1189249amp;highlight=&#8221;press release/a and Jeff Barr&#8217;s a href=&#8221;http://aws.typepad.com/aws/2008/08/amazon-elastic.html&#8221;posting over on the AWS evangelists blog/a. Also the folks at Rightscale have two detailed postings: a href=&#8221;http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters/&#8221;why Amazon EBS matters/aa href=&#8221;http://blog.rightscale.com/2008/08/20/amazon-ebs-explained/&#8221;Amazon EBS explained/a./p    pI a href=&#8221;http://www.allthingsdistributed.com/2008/04/persistent_storage_for_amazon.html&#8221;have written before/a about the basic features of Amazon EBS: /p    ul     liAmazon EBS will be offered in the form of storage volumes which you can mount into your EC2 instance as a raw block storage device. It basically looks like an unformatted hard disk. Once you have the volume mounted for the first time you can format it with any file system you want or if you have advanced applications such as high-end database engines, you could use it directly. /li      liDevelopers can create multiple volumes, in size ranging from 1 GB to 1TB. This volume will be created within a specified Availability Zone and will be accessible by your EC2 instances running in that Availability Zone. As to be expected with a volume abstraction only one instance can have the volume mounted at any given time. Volumes can migrate and be reattached to other instances if necessary for failure handling or application migration reasons. /li      liThe consistency of data written to this device is similar to that of other local and network-attached devices; it is under control of the developer when and how to force flush data to disk if you want to bypass the traditional lazy-writer functionality in the operating systems file-cache. Because of the session oriented model for access to the volume you doquot; /li   /ul /blockquote a href=&#8221;http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters/&#8221;Why Amazon#8217;s Elastic Block Store Matters #171; RightScale Blog/a   blockquote   pOn the technical side, Amazon#8217;s EBS service may look like #8220;just#8221; another great new feature of the Elastic Compute Cloud, but on the business side it enables a whole slew of new customers. I won#8217;t pretend that I understand all the new uses, but I can talk about those we see and are supporting./p    pFirst a couple of words about what EBS is. In short it#8217;s a SAN (Storage Area Network) in the cloud. You can allocate a disk volume of 1GB to 1TB in size from what is now an endless SAN in the cloud and attach it to an instance of yours running in EC2. The volume is stored on redundant disks (i.e. with some form of RAID) and has a lifetime separate from any instance on which it is mounted, so you can unmount it and later remount it on another instance. You can also perform a snapshot backup of a volume to S3, where it is stored with the redundancy and durability of all objects on S3. Moreover, successive snapshots are incremental providing a very powerful and efficient incremental backup capability for volumes./p    pAll this and much more is explained in detail in a href=&#8221;http://blog.rightscale.com/2008/08/20/amazon-ebs-explained&#8221;my other post/a and there#8217;s yet more detailed a href=&#8221;http://wiki.rightscale.com/2._References/Persistent_Storage&#8221;EBS information on our support site/a. The official EBS announcement is on the a href=&#8221;http://www.amazon.com/ec2&#8243;EC2 detail page/a, Werner Vogels a href=&#8221;http://www.allthingsdistributed.com/2008/08/amazon_ebs_elastic_block_store.html&#8221;provides some background/a, and a href=&#8221;http://aws.typepad.com/aws/2008/08/amazon-elastic.html&#8221;Jeff Barr#8217;s blog entry/a has links to many other related announcements./p    pThe RightScale dashboard supports all the features of EBS and offers a number of additional goodies such as configuring volumes to automatically be attached to servers when these launch and keeping track of the ancestry of a volume or snapshot./p    pWhat does EBS enable? In short: traditional processing on large datasets and reliable storage for many servers. Let#8217;s look at these two areas one-by-one./p    h5Large datasets/h5    pAmazon Web Services are designed for scale. EC2, S3, SQS, and SDB are ideally suited for building large systems that process huge data volumes. The catch has been that they are geared towards modern service oriented systems that can use storage accessed via HTTP PUTs and GETs (Amazon S3), can work using a non-relational database like Amazon SDB, and thrive on large numbers of simple servers (EC2). Users that have more traditional applications, such as relational databases, that require large datasets stored in a file system with a POSIX interface have had difficulties in meeting all their requirements for operating in AWS. While an EC2 X-large instance comes with about 1.4TB of local disk it is rather difficult to actually use this disk space in a production system. Populating the disk with data at boot time can take hours and backups, replication and restoring the data in case of an instance failure are all sore points. For up to 100GB the timescales are all workable, but beyond that it gets difficult./p    pWith EBS the processing of large datasets contained within a file system becomes easily accessible. First of all, volumes can be up to 1TB in size and beyond that it is possible to mount multiple volumes on the same instance such that file systems of 10TB are practical. The volumes can further be backed-up to S3 using the snapshots and they can be replicated by creating new volumes from the snapshots. What is particularly nice is that a volume can be created in any availability zone (think datacenter) of a region from a snapshot, so copying a large volume across datacenters can be off-loaded to EBS and is done very efficiently./p    h5Many virtual appliance servers/h5    pEBS also really enables SaaS vendors that use a single-tenant #8220;virtual appliance#8221; model. Many software vendors have approached us with use-cases where they would like to run individual servers on behalf of their customers. Often these servers are co-managed between customer and software vendor or have other properties that make the service inappropriate for multi-tenant SaaS implementation. In these use-cases the end-customer is storing important data on these servers and requires a robust data safeguarding architecture, in particular for database storage. While we today have a very effective mysql replication and backup solution, it is really geared at multi-server set-ups and doesn#8217;t fit the price and complexity budget of cookie-cutter single-server virtual appliances. For those use-cases EBS brings the desired performance and reliability and drops the complexity and price./p    pWith EBS the canonical reliable single-server virtual appliance can be implemented with the following architecture: an EC2 instance whose type is chosen for the cpu and memory required, an EBS volume sized appropriately for the data set, a revolving set of frequent snapshots providing disaster recovery backups, and periodic application-level #8220;export#8221; of backups to S3 for archiving and off-cloud backups. In case of a total failure of the EC2 instance and the EBS volume (e.g. datacenter fire) a new instance and volume can be allocated in another availability zone from the last revolving snapshot./p    pWhen it comes time to upgrade the virtual appliance to a new software version it becomes relatively easy for the software vendor to spin-up a second instance and volume with the upgraded software for important customers so they can test-drive the new version on their data and train their internal users before committing to the upgrade./p /blockquote http://www.typepad.com/t/trackback/495065/32648054 http://blog.rightscale.com/2008/08/20/why-amazon-ebs-matters/trackback/</p>
]]></content:encoded>
			<wfw:commentRss>http://rawwell.site50.net/?feed=rss2&amp;p=48</wfw:commentRss>
		</item>
	</channel>
</rss>

<!-- Dynamic Page Served (once) in 2.381 seconds -->
