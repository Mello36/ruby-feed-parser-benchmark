<?xml version='1.0' encoding='UTF-8'?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-7510086047929701960</id><updated>2008-11-21T17:12:58.868-08:00</updated><title type='text'>Open Source Operations</title><subtitle type='html'>Success is not writing software, it's running it.</subtitle><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/'/><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://opensourceconsulting.com/blog/atom.xml'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>14</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-1624333476248384417</id><published>2008-11-21T16:29:00.000-08:00</published><updated>2008-11-21T16:30:45.671-08:00</updated><title type='text'>tools: tree_perms.pl</title><content type='html'>&lt;span style="font-family: courier new;"&gt;#!/usr/bin/perl&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;##############################&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;##########&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;# Fri Nov 21 15:36:39 2008&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;# A util I've always wanted! when you have a perms problem in unix you&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;# need to know the perms on each level above the file. AFAIK there's&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;# no way to get them other than typing ls for each element of the&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;# path. This cuts that process down.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;while ( my $_ = shift @ARGV) {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    my @broken_down_path;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    my @path_list;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    my %ls_line;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    chomp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    # get the path elemets so we can see the perms at each level.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    @broken_down_path = split q{/},  "$_" ;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    # the first element from the split is nul, pulling it out and&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    # putting a 'slash' in so I get the entire tree&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    shift @path_list;  unshift @path_list, qq{/};&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    for (0..$#broken_down_path) {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        my  $rebuild_path_element;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        # as we go thru the array we building up an list that makes up the path&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        $rebuild_path_element =  join q{/}, @broken_down_path[0..$_];&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        push @path_list, $rebuild_path_element;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    # &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    for my $path (@path_list) {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        # get the output of ls -ld on every level of the path, story in a hash of arrays&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        push @{$ls_line{$path}}, split q{ }, qx{/bin/ls -ld $path} ;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    # rev sort the keys so we get the file at the top the dirs underneith.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    for my $path (reverse sort keys %ls_line) {&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        # make sure $path is not null. &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        $path or next ;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        # just the perms owner and group&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        print join qq{\t}, @{$ls_line{$path}}[0,2,3];&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        # put in the path&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;        print "\t$path\n" ;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    # if there are more to go, print a space.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;    @ARGV ?  print "\n" : '';&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;} # end for (@ARGV)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;=pod &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;sample usage and output. Look at permissions at all tree levels to&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;figure out while a user can't read a file or dir.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;tony-ws:bin&gt;   tree_perms.pl /home/tony/work/getactive/kickstart_configs/post_install_scripts/_base/service_control.bash /home/tony/bin/At.pm &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;-rw-------      tony    None    /home/tony/work/getactive/kickstart_configs/post_install_scripts/_base/service_control.bash&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwx------+     tony    None    /home/tony/work/getactive/kickstart_configs/post_install_scripts/_base&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwx------+     tony    None    /home/tony/work/getactive/kickstart_configs/post_install_scripts&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwx------+     tony    None    /home/tony/work/getactive/kickstart_configs&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwx------+     tony    None    /home/tony/work/getactive&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwx------+     tony    None    /home/tony/work&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwxrwxrwx+     tony    None    /home/tony&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwxrwxrwx+     tony    None    /home&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwxrwx---+     tony    Users   /&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;-rw-------      tony    None    /home/tony/bin/At.pm&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwxr-xr-x+     tony    None    /home/tony/bin&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwxrwxrwx+     tony    None    /home/tony&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwxrwxrwx+     tony    None    /home&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;drwxrwx---+     tony    Users   /&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;=cut&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/1624333476248384417/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=1624333476248384417' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/1624333476248384417'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/1624333476248384417'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/11/tools-treepermspl.html' title='tools: tree_perms.pl'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-759298943036577098</id><published>2008-10-12T17:21:00.000-07:00</published><updated>2008-10-19T13:54:30.296-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IT operations management'/><category scheme='http://www.blogger.com/atom/ns#' term='runnig unix linux operations'/><title type='text'>Management: The quick and dirty guide to running computer operations</title><content type='html'>&lt;ol&gt;&lt;li&gt;Anything that is not automated has no future. It will die or kill you.&lt;/li&gt;&lt;li&gt; People can only do 3 things at once, really. Beyond that energy is spread too thin and everything starts to wind down.&lt;/li&gt;&lt;li&gt; Fire heroes. They have a perverse incentive to create problems.&lt;/li&gt;&lt;li&gt; There is a straight line correlation between the number of steps in the process and it's error rate.&lt;/li&gt;&lt;li&gt; Anything without an owner will be blamed. If you're the boss - you'll be blamed.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Computers can only do what their told - if they're not doing the right thing, its because of a person.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;The last change broke it.&lt;/li&gt;&lt;li&gt;The answer is always in the log file (or the output of trace, strace, ktrace, etc.)&lt;/li&gt;&lt;li&gt;No one reads docs. It's better to automate procedures and only hire people who are able to read code.&lt;/li&gt;&lt;li&gt;Success is not writing software, its running it.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Use the &lt;a href="http://en.wikipedia.org/wiki/Scientific_method"&gt;scientific method&lt;/a&gt; as your published troubleshooting method.&lt;/li&gt;&lt;li&gt;Pay on-call differentials.&lt;/li&gt;&lt;li&gt;Have a rigorous hiring procedure.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;A Sr. Admin spends his day automating away work or training someone else how to do it. Anything else is mid-level at best.&lt;/li&gt;&lt;li&gt;Put all your admins on a development plan that has them automating work.&lt;br /&gt;&lt;/li&gt;&lt;/ol&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/759298943036577098/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=759298943036577098' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/759298943036577098'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/759298943036577098'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/10/management-idiots-guide-to-running.html' title='Management: The quick and dirty guide to running computer operations'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-5574096295294065411</id><published>2008-09-28T19:35:00.000-07:00</published><updated>2008-09-28T19:49:08.875-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='commandline productivity'/><category scheme='http://www.blogger.com/atom/ns#' term='bash tips'/><category scheme='http://www.blogger.com/atom/ns#' term='linux'/><title type='text'>Basic Admin: bash - the 'rm' habit</title><content type='html'>No matter how good an admin you are, you'll eventually delete something by accident.  I don't like 'rm -i',  it's too much.  I use the trick of typing '#' before the rm command. Tab competion still works but if I mess up and hit tab-enter (like I do a lot) the '#' saves me. When I've got the line looking like I want I 'ctrl-a' to beginning and delete the '#' and execute the line.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-tab-span" style="white-space:pre"&gt; &lt;/span&gt;&lt;span class="Apple-style-span" style="font-family: 'courier new';"&gt;# rm -rf  /etc/sysconfig/network-hold&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Once I got used to it, it became reflexive. It adds a couple of extra characters, but it doesn't break my admin flow. &lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/5574096295294065411/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=5574096295294065411' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/5574096295294065411'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/5574096295294065411'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/09/basic-admin-bash-rm-habit.html' title='Basic Admin: bash - the &apos;rm&apos; habit'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-906405295397743829</id><published>2008-09-06T13:28:00.000-07:00</published><updated>2008-09-26T20:30:42.928-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='true X-mouse'/><category scheme='http://www.blogger.com/atom/ns#' term='cygwin mysql'/><category scheme='http://www.blogger.com/atom/ns#' term='cygwin'/><category scheme='http://www.blogger.com/atom/ns#' term='X11'/><title type='text'>Tools: Win XP and Cygwin desktop</title><content type='html'>&lt;div&gt;&lt;div&gt;It drives me crazy to watch an admin figure out how to login to a box with putty. I believe that you can't manage Unix systems without Unix tools. I switched to Cygwin years ago, except for /dev/random it's indistingusiable from a workstation. I can do anything I'd do on a Unix box, including installing perl Expect which requires compiling and a tty. It'll even compile MySQL from source and run it 100% Unix style. It's seems to have some preformance issues, but you can develop and test with it.  &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;I love having all my tools on a single box. On the Windows side I use &lt;a href="http://fy.chalmers.se/~appro/nt/TXMouse/"&gt;True X-Mouse.&lt;/a&gt; It has real sloppy focus and seamless highlight/middle-mouse button for cut-and-paste. &lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Under Cygwin I run the light and fast 'fvwm.'  Here are the&lt;a href="http://opensourceconsulting.com/blog/cygwin_X11_install.pdf"&gt; instructions&lt;/a&gt; and a &lt;a href="http://opensourceconsulting.com/blog/OSC_Cygwin_X11setup.tar"&gt;tar &lt;/a&gt;file for doing a Cygwin X11 install from scratch.&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/906405295397743829/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=906405295397743829' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/906405295397743829'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/906405295397743829'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/09/tools-win-xp-and-cygwin-desktop.html' title='Tools: Win XP and Cygwin desktop'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-9186031806266084153</id><published>2008-09-06T13:01:00.000-07:00</published><updated>2008-09-06T13:13:30.571-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='shell trick'/><category scheme='http://www.blogger.com/atom/ns#' term='CUT_BUFFER0'/><category scheme='http://www.blogger.com/atom/ns#' term='X11'/><title type='text'>Tools: dump_cut_buffer</title><content type='html'>&lt;div&gt;Some history and a cool command. Was originally used to print the X cut_buffer0 to lpr. Most of what it does is better done with a pipe,  but every once in while it's the exact thing you need. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Works under Cygwin X11.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;#!/bin/sh&lt;br /&gt;# return selected text. Mark Martin. cetia. france.&lt;br /&gt;# xprop returned format is (eg) CUT_BUFFER0 = "echo \"cetia\\\"\n"&lt;br /&gt;# get the \" and \\ and \n undone.  sadly sed wont take long lines.&lt;br /&gt;# sed wont read input not ending in newline, so need to chop off final newline&lt;br /&gt;# use bell as newline marker.&lt;br /&gt;# path added for xprop Frank Summers 1-31-91&lt;br /&gt;&lt;br /&gt;# bell=^G&lt;br /&gt;# bell=`echo "\07"`&lt;br /&gt;&lt;br /&gt;#   xprop -root -notype CUT_BUFFER0 |&lt;br /&gt;#   sed '1s/[^=]*= "//&lt;br /&gt;#         s/\\n/'"$bell"'/g&lt;br /&gt;#         s/\\"/"/g&lt;br /&gt;#         s/\\\\/\\/g&lt;br /&gt;#         $s/"$//' |&lt;br /&gt;#   tr -d '\012' |&lt;br /&gt;# tr $bell '\012'|&lt;br /&gt;# lp&lt;br /&gt;&lt;br /&gt;# Wed Mar 22 21:42:45 2000&lt;br /&gt;# very old magic.&lt;br /&gt;# Above is the original&lt;br /&gt;#  I got this from from an engineer at the Motorola Computer Group.&lt;br /&gt;# i have done a minor rework so it is a bit cleaner in perl.&lt;br /&gt;&lt;br /&gt;# Please note this is one long pipeline with comments in between&lt;br /&gt;# Tony Hansmann (t o n y replacewith-at-sign open source consulting com)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;&lt;br /&gt;xprop -root -notype CUT_BUFFER0|&lt;br /&gt;perl -pe 's!^CUT_\w+\s=\s\"!!x; # remove CUT_BUFFER0 = " part&lt;br /&gt;s!\\n!\n!gx; # make newlines appear as such&lt;br /&gt;s!\\"!\"!gx; # make double-quotes appear as such&lt;br /&gt;s!\\\\!\\!gx; # make back-slashs appear as such&lt;br /&gt;s!\\t!\t!gx; # make tabs appear as such&lt;br /&gt;s!\"$!!x;'&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/9186031806266084153/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=9186031806266084153' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/9186031806266084153'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/9186031806266084153'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/09/tools-dumpcutbuffer.html' title='Tools: dump_cut_buffer'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-578950664736776743</id><published>2008-09-06T12:53:00.000-07:00</published><updated>2008-09-06T13:12:46.261-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='commandline productivity'/><category scheme='http://www.blogger.com/atom/ns#' term='llll'/><category scheme='http://www.blogger.com/atom/ns#' term='lll'/><category scheme='http://www.blogger.com/atom/ns#' term='bash tricks'/><title type='text'>Tools: bash tricks: The ells</title><content type='html'>&lt;div&gt;I love writing shell commands and functions. Everyone does something with 'll' mine is:&lt;br /&gt;&lt;/div&gt;&lt;div&gt;        alias ll='ls -lart' # because I want to see the newest file last.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Lots of times I also want the full path of a file. I could just type&lt;/div&gt;&lt;div&gt;it, but I make a lot of errors when I type long things. A long time&lt;/div&gt;&lt;div&gt;ago I decided cut-and-paste are a dyslexsics best friend. Here are a&lt;/div&gt;&lt;div&gt;couple of helper tools:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;  'lll' gets me a full path&lt;/div&gt;&lt;div&gt;  'llll' gets me a path suitable for use in scp.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I do this a lot:&lt;/div&gt;&lt;div&gt;        tony-ws:log&gt; llll setup.log&lt;/div&gt;&lt;div&gt;        tony-ws:/var/log/setup.log&lt;/div&gt;&lt;div&gt;On another box:&lt;/div&gt;&lt;div&gt;        betlong:log&gt; scp tony-ws:/var/log/setup.log . &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;#quick demo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;for i in lll llll &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt; do echo "this is what $i does: "&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    $i hacked-footertracking.html foo.*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt; echo&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt; done&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;this is what lll does: &lt;/div&gt;&lt;div&gt;/home/tony/tmp/hacked-footertracking.html&lt;/div&gt;&lt;div&gt;/home/tony/tmp/foo.idx&lt;/div&gt;&lt;div&gt;/home/tony/tmp/foo.pl&lt;/div&gt;&lt;div&gt;/home/tony/tmp/foo.pl~&lt;/div&gt;&lt;div&gt;/home/tony/tmp/foo.sh&lt;/div&gt;&lt;div&gt;/home/tony/tmp/foo.sh~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;this is what llll does: &lt;/div&gt;&lt;div&gt;tony-ws:/home/tony/tmp/hacked-footertracking.html&lt;/div&gt;&lt;div&gt;tony-ws:/home/tony/tmp/foo.idx&lt;/div&gt;&lt;div&gt;tony-ws:/home/tony/tmp/foo.pl&lt;/div&gt;&lt;div&gt;tony-ws:/home/tony/tmp/foo.pl~&lt;/div&gt;&lt;div&gt;tony-ws:/home/tony/tmp/foo.sh&lt;/div&gt;&lt;div&gt;tony-ws:/home/tony/tmp/foo.sh~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;############&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;# often want full path to file(s), this gets it for me&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: 'courier new';"&gt;# Tony Hansmann (t o n y replacewith-at-sign open source consulting com)&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;lll () &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;{ &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    if [ ! -z "$*" ]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        then&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        for i in $*;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;          do&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;            if (echo $i |egrep -q "^/|\.\./")&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;                then&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;                ls $i&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;            else&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;                \ls `pwd`/$i;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;            fi&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        done&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    else&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        pwd;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    fi&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;##########&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;# often need to have a file or dir name in scp format&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;# box:/full/path/to/file, this gets it for me&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: 'courier new';"&gt;# Tony Hansmann (t o n y replacewith-at-sign open source consulting com)&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: 'courier new'; "&gt;llll () { &lt;/span&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;  if [ ! -z "$*" ]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;  then&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    if [ ! -z "$*" ]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    then&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;      for i in $*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;      do&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        if (echo $i |egrep -q "^/|\.\./")&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        then&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;          echo $(hostname):$(\ls $i);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        else&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;          echo $(hostname):$(\ls `pwd`/$i);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;        fi&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;      done&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    fi&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;  else&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;    echo $(hostname):`pwd`;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;  fi&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"  style="font-family:'courier new';"&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/578950664736776743/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=578950664736776743' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/578950664736776743'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/578950664736776743'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/09/bash-tricks-ells.html' title='Tools: bash tricks: The ells'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-2165929076614685586</id><published>2008-09-06T11:11:00.000-07:00</published><updated>2008-10-12T17:17:55.173-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='hiring'/><category scheme='http://www.blogger.com/atom/ns#' term='opeations linux unix staff management'/><category scheme='http://www.blogger.com/atom/ns#' term='linux unix'/><category scheme='http://www.blogger.com/atom/ns#' term='executives techniques'/><title type='text'>Management: If you don't program, you're not a Senior Unix Administrator</title><content type='html'>&lt;p class="MsoNoSpacing"&gt;I'd never hire a developer who recommends that a roomful of temps keep a list of websites and send email to subscribers when they're updated. In the same way, I'd never hire an admin who thinks its ok to by-hand work.&lt;br /&gt;&lt;/p&gt;&lt;p class="MsoNoSpacing"&gt;Admin's, like programmers are paid for their intellectual output, however at at most companies it is treated as a throw-away. There is no insistence on system autobuilds, script repositories, deep monitoring taylored for custom applications, or even the ability to program!&lt;br /&gt;&lt;/p&gt;&lt;p class="MsoNoSpacing"&gt;The question of programming is so important that I give interviewees openings to talk about how they solved problems with a script or what language they like best or how they write command-line aliases for anything they have to do more than 3 times. I'll also ask for code samples, or have them comment some code.&lt;br /&gt;&lt;/p&gt;&lt;p class="MsoNoSpacing"&gt;It's critical that ops staff think about  systems from a developers point of view. If I don't get the strong feeling they love to automate away work they are not eligable for a Sr. Admin position.&lt;br /&gt;&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/2165929076614685586/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=2165929076614685586' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/2165929076614685586'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/2165929076614685586'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/09/management-if-you-dont-program-youre.html' title='Management: If you don&apos;t program, you&apos;re not a Senior Unix Administrator'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-8247720068527238994</id><published>2008-09-06T11:08:00.000-07:00</published><updated>2008-09-26T20:43:00.532-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='linux hiring'/><category scheme='http://www.blogger.com/atom/ns#' term='unix hiring'/><category scheme='http://www.blogger.com/atom/ns#' term='technical screening'/><title type='text'>Management: Tech Screen for UNIX/Linux operations staff</title><content type='html'>&lt;span class="Apple-style-span"  style=" ;font-family:'Times New Roman';"&gt;&lt;div style="border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 3px; padding-right: 3px; padding-bottom: 3px; padding-left: 3px; width: auto; font: normal normal normal 100%/normal Georgia, serif; text-align: left; "&gt;&lt;div&gt;I've worked with too many people who had a great interview, but couldn't do basic admin work. When we looked at how it happened the answer was always the same, no one asked basic questions.&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p class="MsoNoSpacing"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p class="MsoNoSpacing"&gt;I start a tech screen from this list, branching off of it to follow veins of knowledge and tease out specializations. This process can take an hour or more, but it's well worth it. I use it on 20 year veterans and newbies exactly the same way. Veterans appreciate the fact that you’re committed to hiring to people who can do their jobs and novices like a company that helps them plot a route through a career as complex as Unix operations. &lt;br /&gt;&lt;/p&gt;&lt;p class="MsoNoSpacing"&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;I explain that the list is like signposts. If I hear the answer I'm looking for, we'll just go on, no need for complete sentences. Likewise, if they know nothing about the topic I don't &lt;span class="blsp-spelling-corrected" id="SPELLING_ERROR_0"&gt;torture&lt;/span&gt; them with a bunch of follow-on questions. Aside from the answers, I'm also looking for how they deal with dumb or impossible questions. This gives me an idea of how they'll be with coworkers and customers.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;General&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt; Describe your problem solving method.&lt;/div&gt;&lt;div&gt; Do you use command line editing?  What style?&lt;/div&gt;&lt;div&gt; What is favorite technical book or manual?&lt;/div&gt;&lt;div&gt; Why do you do this work, and how did you get started?&lt;/div&gt;&lt;div&gt; What are some of your beliefs about &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_1"&gt;sysadm&lt;/span&gt;.&lt;/div&gt;&lt;div&gt; Do you want to be a great admin? How are you pursuing that goal?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Hardware&lt;/span&gt;&lt;/div&gt;&lt;div&gt; Are you a hardware person?&lt;/div&gt;&lt;div&gt; What are interrupt vectors?  How do you know which ones are in&lt;/div&gt;&lt;div&gt; use?&lt;/div&gt;&lt;div&gt; What is SCSI?  Termination?&lt;/div&gt;&lt;div&gt; What is an Ethernet address?&lt;/div&gt;&lt;div&gt; Tell me everything you know about RAID, SAN attached Storage, &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_2"&gt;NAS&lt;/span&gt;, etc.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;General Sysadmin&lt;/span&gt;&lt;/div&gt;&lt;div&gt; Where are the system logs and error messages generally stored?&lt;/div&gt;&lt;div&gt; What command would you use to get a general idea of current&lt;/div&gt;&lt;div&gt; system performance?&lt;/div&gt;&lt;div&gt; How do you determine which processes are using the most CPU&lt;/div&gt;&lt;div&gt; time?&lt;/div&gt;&lt;div&gt; How do you terminate a process that won't respond to user&lt;/div&gt;&lt;div&gt; input?&lt;/div&gt;&lt;div&gt; What is &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_3"&gt;emacs&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What is a daemon?&lt;/div&gt;&lt;div&gt; What is &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_4"&gt;cron&lt;/span&gt;? What files control the operation of &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_5"&gt;cron&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; Detail some problems you have seen with &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_6"&gt;cron&lt;/span&gt;.&lt;/div&gt;&lt;div&gt; What’s the most common way to accidentally overwrite the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_7"&gt;crontab&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What is the best policy for editing the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_8"&gt;crontab&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What are zombie processes and what system resources do they&lt;/div&gt;&lt;div&gt; use?&lt;/div&gt;&lt;div&gt; What is x/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_9"&gt;inetd&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What files control the behavior of x/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_10"&gt;inetd&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What is the crash utility used for?&lt;/div&gt;&lt;div&gt; Generally what is a daemon doing at the system level when you &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_11"&gt;SIGHUP&lt;/span&gt; it?&lt;/div&gt;&lt;div&gt; Giving the changing regulatory and security landscape where to do see  &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_12"&gt;sysadm&lt;/span&gt; in 5 years?&lt;/div&gt;&lt;div&gt; Given a 120 gig disk, how would you slice it? 80 gig? 20 gig?&lt;/div&gt;&lt;div&gt; What are some of UNIX/Linux’s major strengths?&lt;/div&gt;&lt;div&gt; What are some of UNIX/Linux’s major weaknesses?&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;General Networking&lt;/span&gt;&lt;/div&gt;&lt;div&gt; What are some of the common networking protocols?&lt;/div&gt;&lt;div&gt; What is a gateway?&lt;/div&gt;&lt;div&gt; What is a routing table?&lt;/div&gt;&lt;div&gt; How do you examine the routing table on a UNIX server?&lt;/div&gt;&lt;div&gt; What is an &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_13"&gt;arp&lt;/span&gt; table?&lt;/div&gt;&lt;div&gt; How do you examine the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_14"&gt;arp&lt;/span&gt; table on a UNIX server?&lt;/div&gt;&lt;div&gt; What is &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_15"&gt;PPP&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What files control the behavior of &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_16"&gt;pppd&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What command is used to configure network interfaces in UNIX?&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_17"&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;DNS&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt; How familiar are you with &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_18"&gt;DNS&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What are the basic record types in a &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_19"&gt;DNS&lt;/span&gt; forward file?&lt;/div&gt;&lt;div&gt; How would you find a domain's mail exchanger?&lt;/div&gt;&lt;div&gt; Describe the general format of an A-record.&lt;/div&gt;&lt;div&gt; Describe the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_20"&gt;failover&lt;/span&gt; process for a &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_21"&gt;lookup&lt;/span&gt;.&lt;/div&gt;&lt;div&gt; Describe the operation of a "slave" server.&lt;/div&gt;&lt;div&gt; You want to get a new domain assigned, what do you from start to finish.&lt;/div&gt;&lt;div&gt; How do you accept and properly reply to &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_22"&gt;CIDR&lt;/span&gt; delegations.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Mail Transport Agents (&lt;/span&gt;&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_23"&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;MTAs&lt;/span&gt;&lt;/span&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div&gt; What is the most common &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_24"&gt;MTA&lt;/span&gt; currently used?&lt;/div&gt;&lt;div&gt; How do you check the status of the mail queue?&lt;/div&gt;&lt;div&gt; What might indicate a mail delivery problem?&lt;/div&gt;&lt;div&gt; What socket or port do &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_25"&gt;MTA's&lt;/span&gt; typically listen on?&lt;/div&gt;&lt;div&gt; How would you find out what socket or port a particular&lt;/div&gt;&lt;div&gt; machine's &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_26"&gt;MTA&lt;/span&gt; is listening on?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;X Windows&lt;/span&gt;&lt;/div&gt;&lt;div&gt; What is the primary environment variable for X?&lt;/div&gt;&lt;div&gt; What does the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_27"&gt;xhost&lt;/span&gt; command do?&lt;/div&gt;&lt;div&gt; What files control the behavior of X after a user &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_28"&gt;login&lt;/span&gt;?&lt;/div&gt;&lt;div&gt; What files control the behavior of the X server prior to user&lt;/div&gt;&lt;div&gt; &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_29"&gt;login&lt;/span&gt;?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Shells&lt;/span&gt;&lt;/div&gt;&lt;div&gt; What is your favorite shell?  Why?&lt;/div&gt;&lt;div&gt; How would determine which file is the newest file in a very&lt;/div&gt;&lt;div&gt; large directory list?&lt;/div&gt;&lt;div&gt; How would you search a particular file for a match against at&lt;/div&gt;&lt;div&gt; least one of a group of patterns?&lt;/div&gt;&lt;div&gt; What are the file descriptors standard in, standard out, and&lt;/div&gt;&lt;div&gt; standard error?&lt;/div&gt;&lt;div&gt; How would you search all of the files in a directory for text&lt;/div&gt;&lt;div&gt; matching a particular pattern?&lt;/div&gt;&lt;div&gt; What does the pipe operator do?&lt;/div&gt;&lt;div&gt; How do you determine the amount of free disk space on the&lt;/div&gt;&lt;div&gt; systems?&lt;/div&gt;&lt;div&gt; How do you determine which &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_30"&gt;filesystems&lt;/span&gt; are mounted?&lt;/div&gt;&lt;div&gt; Describe some of the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_31"&gt;Korn&lt;/span&gt; shell's job control features.&lt;/div&gt;&lt;div&gt; What is the pipe limit on the command line?&lt;/div&gt;&lt;div&gt; What is "$?" ?&lt;/div&gt;&lt;div&gt; What value should be stored in $? after the successful&lt;/div&gt;&lt;div&gt; execution of a shell command?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Shell Programming&lt;/span&gt;&lt;/div&gt;&lt;div&gt; What shell languages are you familiar with?&lt;/div&gt;&lt;div&gt; &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_32"&gt;Bash&lt;/span&gt; Shell -&lt;/div&gt;&lt;div&gt;  What is the "file" command used for?&lt;/div&gt;&lt;div&gt;  Name as many of the ba&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_33"&gt;sh&lt;/span&gt; control flow statements as you&lt;/div&gt;&lt;div&gt;  can.&lt;/div&gt;&lt;div&gt;  Name as many of the ba&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_34"&gt;sh&lt;/span&gt; logical operators as you know,&lt;/div&gt;&lt;div&gt;  and describe what they are.&lt;/div&gt;&lt;div&gt; Perl -&lt;/div&gt;&lt;div&gt;  How do you print "Hello World!" on standard out?&lt;/div&gt;&lt;div&gt;  What does split do?&lt;/div&gt;&lt;div&gt;  How do you iterate over text or standard in?&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt; Perl Expect&lt;/span&gt;&lt;/div&gt;&lt;div&gt;  What are the fundamental commands for automating&lt;/div&gt;&lt;div&gt;   interaction via Expect?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Situations&lt;/span&gt;&lt;/div&gt;&lt;div&gt; How do you open multiple files in vi?&lt;/div&gt;&lt;div&gt; How do you search through a man page?&lt;/div&gt;&lt;div&gt; A non-technical user enters your work area and frantically&lt;/div&gt;&lt;div&gt; asks, "Who has root here?"&lt;/div&gt;&lt;div&gt; How do you respond? &lt;/div&gt;&lt;div&gt; You are assigned the task of changing the root password on 600&lt;/div&gt;&lt;div&gt; machines every month.  How do you do it?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/8247720068527238994/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=8247720068527238994' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/8247720068527238994'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/8247720068527238994'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/09/management-tech-screen-for-unixlinux.html' title='Management: Tech Screen for UNIX/Linux operations staff'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-2233459726994280525</id><published>2008-09-05T18:31:00.000-07:00</published><updated>2008-09-28T21:12:15.092-07:00</updated><title type='text'>Basic knowledge: The Art of Unix Programming</title><content type='html'>There are a few books that crystalize why UNIX is so powerful and compelling. Eric S. Raymond's &lt;a href="http://www.faqs.org/docs/artu/"&gt;The Art of Unix Programming&lt;/a&gt; is one of the best. Once in a while the prose is awkward, but the concepts! &lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;No matter what your background or field &lt;a href="http://www.faqs.org/docs/artu/ch01s06.html"&gt;The Basics of the Unix Philosophy&lt;/a&gt; chapter is pure joy.  If you are in any way associated with UNIX or Linux this is 40 minutes of reading that will pay off forever. When I'm stuck or having a bad day with clients, I pull it up to remind myself it all does make sense.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;-Tony&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/2233459726994280525/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=2233459726994280525' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/2233459726994280525'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/2233459726994280525'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/09/basic-knowledge-art-of-unix-programming.html' title='Basic knowledge: The Art of Unix Programming'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-8864057007275812574</id><published>2008-08-11T16:57:00.000-07:00</published><updated>2008-11-19T10:19:54.436-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='staff management'/><category scheme='http://www.blogger.com/atom/ns#' term='server farm'/><category scheme='http://www.blogger.com/atom/ns#' term='linux'/><category scheme='http://www.blogger.com/atom/ns#' term='operations'/><category scheme='http://www.blogger.com/atom/ns#' term='unix'/><category scheme='http://www.blogger.com/atom/ns#' term='executive techniques'/><title type='text'>Management: Hiring guidelines for A players</title><content type='html'>&lt;p&gt;It's challenging to hire a great ops person. How do you judge in an interview?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;If I want an A player, I ask hard questions, set high expectations and request their commitment to the teams needs. Even then I make mistakes, but at least I have their commitment. I can work with that if their performance has to be brought up.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;Here's who I have in mind when I'm interviewing:&lt;br /&gt;&lt;br /&gt;&lt;ol style="margin-top: 0in;" start="1" type="1"&gt;&lt;li&gt;They      know they can't win the first time, they'll keep trying.&lt;/li&gt;&lt;li&gt;They      are not looking to change careers or directions – they should have been      customer service oriented technical people for last 7 years at least. &lt;/li&gt;&lt;li&gt;They      hate work and dedicate themselves to eliminating it. &lt;/li&gt;&lt;li&gt;They      love people.&lt;/li&gt;&lt;li&gt;They      are students of their work.&lt;/li&gt;&lt;li&gt;They      are disciplined and self-motivated&lt;/li&gt;&lt;li&gt;They      accept work – this is an all-day every-day job. We have a "No Slashdot"      policy. &lt;/li&gt;&lt;ol style="margin-top: 0in;" start="1" type="a"&gt;&lt;li&gt;If       you don't have something else to do you are required to ask the NOC if       you can help with a problem or same day ticket&lt;/li&gt;&lt;li&gt;Do       customer follow up mails. &lt;/li&gt;&lt;li&gt;Eliminate       work for someone &lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;  &lt;p style="margin-left: 1.5in; text-indent: -1.5in;"&gt;&lt;span&gt;&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;                              &lt;wbr&gt;                              &lt;wbr&gt;  &lt;/span&gt;i.&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;      &lt;/span&gt;&lt;/span&gt;Write a script&lt;/p&gt;  &lt;p style="margin-left: 1.5in; text-indent: -1.5in;"&gt;&lt;span&gt;&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;                              &lt;wbr&gt;                              &lt;/span&gt;ii.&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;      &lt;/span&gt;&lt;/span&gt;Write a tool that lets business users see data they've never seen&lt;/p&gt;  &lt;ol style="margin-top: 0in;" start="7" type="1"&gt;&lt;ol style="margin-top: 0in;" start="4" type="a"&gt;&lt;li&gt;"Widen       the Moat" so we can make gains against downtime.&lt;/li&gt;&lt;li&gt;Attempt       to reduce the complexity of something to the appliance level.&lt;/li&gt;&lt;li&gt;Read       customer service and management books. &lt;/li&gt;&lt;li&gt;Make       (or review) a list of people you owe things.&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;  &lt;p style="margin-left: 1.5in; text-indent: -1.5in;"&gt;&lt;span&gt;&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;                              &lt;wbr&gt;                              &lt;wbr&gt;  &lt;/span&gt;i.&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;      &lt;/span&gt;&lt;/span&gt;Ask them if they are getting what they need.&lt;/p&gt;  &lt;p style="margin-left: 1.5in; text-indent: -1.5in;"&gt;&lt;span&gt;&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;                              &lt;wbr&gt;                              &lt;/span&gt;ii.&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;      &lt;/span&gt;&lt;/span&gt;Ask them how you'll know when they have exactly what they need.&lt;/p&gt;  &lt;p style="margin-left: 1.5in; text-indent: -1.5in;"&gt;&lt;span&gt;&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;                              &lt;wbr&gt;                            &lt;/span&gt;iii.&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;      &lt;/span&gt;&lt;/span&gt;If there is no clear way to deliver what they want – tell them so.&lt;/p&gt;  &lt;p style="margin-left: 1.5in; text-indent: -1.5in;"&gt;&lt;span&gt;&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;                              &lt;wbr&gt;                            &lt;/span&gt;iv.&lt;span style="font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; font-size-adjust: none; font-stretch: normal;font-size:7;" &gt;      &lt;/span&gt;&lt;/span&gt;If you are going to drop their concern – let them know.&lt;/p&gt;  &lt;ol style="margin-top: 0in;" start="8" type="a"&gt;&lt;li&gt;Put       goals, meeting and other important work things on the calendar for the       next month, quarter and year.&lt;/li&gt;&lt;li&gt;Invent       drills to make sure we are where are where we should be in emergency       response and disaster recovery.&lt;/li&gt;&lt;li&gt;Write       a new monitor and figure out how to make it supportable forever.&lt;/li&gt;&lt;/ol&gt;&lt;ol style="margin-top: 0in;" start="7" type="1"&gt;&lt;li&gt;Bad      uses of time:&lt;/li&gt;&lt;ol style="margin-top: 0in;" start="1" type="a"&gt;&lt;li&gt;Changing       the degree of transparency of you xterms for 100&lt;sup&gt;th&lt;/sup&gt; time.&lt;/li&gt;&lt;li&gt;Second       guessing management any more than one level above you. &lt;/li&gt;&lt;li&gt;Pretending       you can't affect the direction of the management one level above you.       &lt;/li&gt;&lt;li&gt;Internet       reading – even if it's "background" research on technical things (digg,       Slashdot, boing-boing, etc have nothing to do with what we do).&lt;/li&gt;&lt;li&gt;Writing       documentation no one but you can interpret. &lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/8864057007275812574/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=8864057007275812574' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/8864057007275812574'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/8864057007275812574'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/08/management-hiring-guidelines-for.html' title='Management: Hiring guidelines for A players'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-5735861441064770790</id><published>2008-08-11T13:28:00.000-07:00</published><updated>2008-08-11T16:53:19.488-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='opeations linux unix staff management executives techniques server farm'/><title type='text'>Why I'm here</title><content type='html'>&lt;p class="MsoNoSpacing"&gt;I started this blog because I work in a niche area of a niche area of technology - the commercial application of UNIX/Linux compute farms. I was frustrated that what is obvious to me about how to run operations is difficult to communicate to my clients, who are often in operational breakdown. &lt;/p&gt;    &lt;p class="MsoNoSpacing"&gt;&lt;o:p&gt;&lt;/o:p&gt;Because I’m a consultant, I deal with two audiences, the executive who hired me, and the operations staff who I work with. &lt;/p&gt;    &lt;p class="MsoNoSpacing"&gt;From the executive side, I make the case that operations is the critical part of their business. My favorite way to say it is: Success is not writing software, it’s running it. They agree, but are often not positioning operations to succeed. &lt;/p&gt;    &lt;p class="MsoNoSpacing"&gt;From the staff side, I make the case that capturing everything they do in scripts and a diary will pay off a hundred fold. They agree, but often don’t want to foul up the carefully crafted way they do things. &lt;/p&gt;    &lt;p class="MsoNoSpacing"&gt;This blog is for both of you. I have year’s worth of tech tricks, short-cuts and solutions for people who live on the command-line. For managers and executives I have 25+ UNIX shops worth of things that never work. &lt;/p&gt;    &lt;p class="MsoNoSpacing"&gt;It’s my intention to provide you information and techniques that will make a difference for your career or business. &lt;/p&gt;  -Tony</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/5735861441064770790/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=5735861441064770790' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/5735861441064770790'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/5735861441064770790'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/08/why-im-here.html' title='Why I&apos;m here'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-8532575217059325247</id><published>2008-08-07T17:00:00.000-07:00</published><updated>2008-08-07T17:09:36.256-07:00</updated><title type='text'>Tools: extending gsh into gcp</title><content type='html'>&lt;span style="font-family:courier new;"&gt;&lt;span style="font-family: arial;"&gt;The gsh package comes with 'ghosts', a command that generates a list of machines in the class you specify - but nothing else. Using it you can create a "scp to class" command. Just for conventions sake I call it 'gcp'. &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: arial;"&gt;Usage:&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: arial;"&gt;    gcp &lt;class&gt; &lt;local_file_name&gt; &lt;file_name_on_remote_machines&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: arial;"&gt;Usage example:&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: arial;"&gt;    gcp SNPcluster /tmp/new_etc_hosts /etc/hosts&lt;/span&gt;&lt;/span&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;&lt;br /&gt;&lt;br /&gt;#!/bin/bash&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: courier new; font-weight: bold;"&gt;# get the path of ghosts so we can confirm we have ghosts on the #machine&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;GHOSTS=`type -p ghosts`&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;if [ -z $GHOSTS ]&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;then&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;  echo "$0 required 'ghosts' to work. Please install it and try again"&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;  echo "exiting"&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;  exit&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;else&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;  &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: courier new; font-weight: bold;"&gt;# make sure we have 3 arguments &lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;  if [ ! -z $1 -a ! -z $2 -a ! -z $3 ]; then&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;    for i in `ghosts $1`;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;    do&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;      echo scping to $2 to $i:/$3;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;      scp $2 $i:$3;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;    done;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;  else&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;    echo "need 3 arguments. $0 &lt;gsh&gt; &lt;file_to_scp&gt; &lt;destination&gt;";&lt;/destination&gt;&lt;/file_to_scp&gt;&lt;/gsh&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;  fi&lt;/span&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:courier new;" &gt;fi&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/8532575217059325247/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=8532575217059325247' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/8532575217059325247'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/8532575217059325247'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/08/tools-extending-gsh-into-gcp.html' title='Tools: extending gsh into gcp'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-4983501081696897019</id><published>2008-08-07T16:40:00.000-07:00</published><updated>2008-08-07T17:00:40.320-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gsh ssh server farm linux unix'/><title type='text'>Tools: gsh</title><content type='html'>The key to working with a large compute farm is to setup it up to run as single machine or a few classes of machine.&lt;br /&gt;&lt;dl class="body"&gt;&lt;dt class="post-head"&gt;'gsh' is a tool that lets you send a command to multiple machines:&lt;br /&gt;&lt;/dt&gt;&lt;dd class="post-body"&gt;    &lt;div class="image-wrapper"&gt;        &lt;/div&gt;  &lt;div class="content-wrapper"&gt;http://outflux.net/unix/software/gsh/download/gsh-1.0.2.tar.gz&lt;br /&gt;&lt;/div&gt;&lt;/dd&gt;&lt;/dl&gt;Here's the gsh command line to setup the nagios clients on a class of machines at the same time (see nagios client post):&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;font-family:times new roman;" &gt;gsh cluster+cf01 "ln -s /bin/bash /bin/rbash ; mkdir -p /usr/local/nagios/libexec ; useradd  -d /usr/local/nagios/libexec  -s /bin/rbash  nagios ; chown root.nagios /usr/local/nagios/libexec ;chmod 750 /usr/local/nagios/libexec"&lt;/span&gt;&lt;br /&gt; &lt;p class="MsoNoSpacing"&gt;To use gsh effectively you need to use ssh-agent or open ssh keys. I use ssh-agent and am comfortable with its security implications. If your site doesn't allow any kind of auto-login process you'll be stuck entering each passwd, however gsh assures exactly the same command is executed on each machine.&lt;br /&gt;&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/4983501081696897019/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=4983501081696897019' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/4983501081696897019'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/4983501081696897019'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/08/tools-gsh.html' title='Tools: gsh'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7510086047929701960.post-6892714487400563536</id><published>2008-08-06T13:16:00.000-07:00</published><updated>2008-09-06T13:17:11.768-07:00</updated><title type='text'>Setup: Nagios Clients</title><content type='html'>&lt;dl class="body"&gt;&lt;dt style="font-weight: bold;" class="post-head"&gt;Setting up more secure Nagios clients&lt;/dt&gt;&lt;dd class="post-body last"&gt;    &lt;div class="image-wrapper"&gt;        &lt;/div&gt;  &lt;div class="content-wrapper"&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;&lt;span style="font-family:Arial,Helvetica,sans-serif;"&gt;I'm often called in to organizations that have no monitoring. Setting up a Nagios server is pretty straight forward. But the prospect of installing dozens of nagios client setups by hand is not appealing.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family:Arial,Helvetica,sans-serif;"&gt; There are lots of ways to get plugin data from clients. My favorite is open-key ssh. I use /bin/rbash on the client to restrict what the shell can do and create a single custom key that is copies to each box (man ssh-keygen for details).&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family:Arial,Helvetica,sans-serif;"&gt;To use ssh on the Nagios server you have to write custom command entries, here's a sample for the commands.cfg file:&lt;/span&gt;&lt;br /&gt;--------------------------------------&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;define command{&lt;br /&gt;         command_name    ssh_check_procs&lt;br /&gt;         # the command doesn't have a path because the clients&lt;br /&gt;         # use a restricted bash that is not allowed to use&lt;br /&gt;         # slashs in the commandline&lt;br /&gt;     command_line   ssh -2i /usr/local/nagios/keys/id_client_nagios \ $HOSTADDRESS$ check_procs'&lt;br /&gt;         }&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;---------------------------------------&lt;br /&gt;&lt;br /&gt; #Here's the shell recipe I use to get them going.&lt;br /&gt; # As root!&lt;br /&gt; &lt;/span&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;# Setup the Client environment on machines to be monitored.&lt;/span&gt;&lt;/div&gt;&lt;div class="content-wrapper"&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 51); font-family: 'courier new'; line-height: 20px; "&gt;&lt;span class="Apple-style-span" style="font-size: medium;"&gt;# Tony Hansmann (t o n y replacewith-at-sign open source #consulting com)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span style="font-family:Courier New,Courier,mono;"&gt;# use rbash for an added safety with an open SSH key&lt;br /&gt; ln -s /bin/bash /bin/rbash&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span style="font-family:Courier New,Courier,mono;"&gt;mkdir -p /usr/local/nagios/libexec&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span style="font-family:Courier New,Courier,mono;"&gt;useradd  -d /usr/local/nagios/libexec -c "nagios client user" -s     /bin/rbash  nagios&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;chown root.nagios /usr/local/nagios/libexec&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;chmod 750 /usr/local/nagios/libexec&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span style="font-family:Courier New,Courier,mono;"&gt;# add the id_client_nagios.pub from the nagios server to&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;# ~nagios/.ssh/authorized_keys file on each client.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;chown nagios .ssh .ssh/authorized_keys &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;# remove all dot files from client dir&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;find ~nagios -type f -name ".*" -print -maxdepth 1|xargs rm&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span style="font-family:Courier New,Courier,mono;"&gt;# rewrite the .bashrc (do not create any other dot files)&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;echo "PATH=\$HOME:/usr/bin" &gt; ~nagios/.bashrc&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;chown root.root ~nagios/.bashrc&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;chmod 755  ~nagios/.bashrc&lt;/span&gt;&lt;br /&gt;# make the interactive login the same config file.&lt;br /&gt;  &lt;span style="font-family:Courier New,Courier,mono;"&gt;ln -sf ~nagios/.bashrc ~nagios/.bash_profile&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;########## Back on the server now ##############&lt;br /&gt;  &lt;span style="font-family:Courier New,Courier,mono;"&gt;# As root scp the server's ~nagios/libexec/* to client:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family:Courier New,Courier,mono;"&gt;scp -r ~nagios/libexec/* root@client:/usr/local/nagios/libexec &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/div&gt;&lt;/dd&gt;&lt;/dl&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/6892714487400563536/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7510086047929701960&amp;postID=6892714487400563536' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/6892714487400563536'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7510086047929701960/posts/default/6892714487400563536'/><link rel='alternate' type='text/html' href='http://opensourceconsulting.com/blog/2008/08/setup-nagios-clients.html' title='Setup: Nagios Clients'/><author><name>Tony Hansmann</name><uri>http://www.blogger.com/profile/12975332707537953985</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry></feed>
