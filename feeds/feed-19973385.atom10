<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>Hack a Day</title>
	<atom:link href="http://hackaday.com/feed/" rel="self" type="application/rss+xml" />
	<link>http://hackaday.com</link>
	<description>Fresh hacks every day</description>
	<pubDate>Fri, 12 Dec 2008 15:18:11 +0000</pubDate>
	<generator>http://wordpress.org/?v=MU</generator>
	<language>en</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
			<item>
		<title>Disposable camera Nixie tube driver</title>
		<link>http://hackaday.com/2008/12/12/disposable-camera-nixie-tube-driver/</link>
		<comments>http://hackaday.com/2008/12/12/disposable-camera-nixie-tube-driver/#comments</comments>
		<pubDate>Fri, 12 Dec 2008 15:18:11 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[daily]]></category>

		<category><![CDATA[digital cameras hacks]]></category>

		<category><![CDATA[disposable camera]]></category>

		<category><![CDATA[high voltage]]></category>

		<category><![CDATA[nixie]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6921</guid>
		<description><![CDATA[
Disposable cameras are quite cheap, and include circuitry that produces very high voltages. Because of this, they have been harvested for many projects. We&#8217;ve seen them used for coil guns and large high voltage power supplies, even for fixing rechargeable batteries that won&#8217;t charge. The latest in the long list of uses is to create [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6922" title="nixie_camera" src="http://hackadaycom.files.wordpress.com/2008/12/nixie_camera.jpg?w=450&#038;h=325" alt="nixie_camera" width="450" height="325" /></p>
<p>Disposable cameras are quite cheap, and include circuitry that produces very high voltages. Because of this, they have been harvested for many projects. We&#8217;ve seen them used for <a href="http://hackaday.com/2007/03/21/make-a-small-coilgun-aka-coilosapien-update/">coil guns</a> and large <a href="http://hackaday.com/2008/11/10/easy-high-voltage-power-supply/">high voltage power supplies</a>, even for <a href="http://hackaday.com/2008/11/27/zap-new-life-into-ni-cads/">fixing rechargeable batteries that won&#8217;t charge</a>. The latest in the long list of uses is to create <a href="http://www.instructables.com/id/Disposibal_Camera_Nixie_Tube_Driver/">nixie tube drivers</a>. [the_don125] shows us how to use a single disposable camera to power 2 to 3 medium sized Nixie tubes. Be careful, as we said before, this project deals with high voltage.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6921/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6921/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6921/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6921/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6921/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6921/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6921/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6921/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6921/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6921/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6921&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/12/disposable-camera-nixie-tube-driver/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/nixie_camera.jpg" medium="image">
			<media:title type="html">nixie_camera</media:title>
		</media:content>
	</item>
		<item>
		<title>Baby twitters via kicks</title>
		<link>http://hackaday.com/2008/12/12/baby-twitters-via-kicks/</link>
		<comments>http://hackaday.com/2008/12/12/baby-twitters-via-kicks/#comments</comments>
		<pubDate>Fri, 12 Dec 2008 08:30:40 +0000</pubDate>
		<dc:creator>Eliot Phillips</dc:creator>
		
		<category><![CDATA[Medical hacks]]></category>

		<category><![CDATA[lifehacks]]></category>

		<category><![CDATA[wearable hacks]]></category>

		<category><![CDATA[arduino]]></category>

		<category><![CDATA[baby]]></category>

		<category><![CDATA[bluesmirf]]></category>

		<category><![CDATA[bluetooth]]></category>

		<category><![CDATA[boingboing]]></category>

		<category><![CDATA[fetus]]></category>

		<category><![CDATA[itp]]></category>

		<category><![CDATA[piezo]]></category>

		<category><![CDATA[pregnancy]]></category>

		<category><![CDATA[pregnant]]></category>

		<category><![CDATA[twitter]]></category>

		<category><![CDATA[twittering]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6918</guid>
		<description><![CDATA[
[Corey Menscher] built the Kickbee while attending ITP this Fall. It monitors his pregnant wife&#8217;s belly and updates Twitter, a microblogging service, every time the baby kicks. The device makes everyone aware of the baby&#8217;s movement, not just the expectant mother. It can also log the baby&#8217;s activity to monitor development. The sensors are piezos [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6919" title="twitter-1" src="http://hackadaycom.files.wordpress.com/2008/12/twitter-1.jpg?w=450&#038;h=340" alt="twitter-1" width="450" height="340" /></p>
<p>[Corey Menscher] built the <a title="portfolio.menscher.com" href="http://portfolio.menscher.com/itp/kickbee/">Kickbee</a> while attending ITP this Fall. It monitors his pregnant wife&#8217;s belly and <a title="Twitter / kickbee" href="http://twitter.com/kickbee">updates Twitter</a>, a microblogging service, every time the baby kicks. The device makes everyone aware of the baby&#8217;s movement, not just the expectant mother. It can also log the baby&#8217;s activity to monitor development. The sensors are piezos held in place with an elastic band. They&#8217;re connected to an <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=8824">Arduino Mini</a> which connects to a host computer using a <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=582">BlueSMIRF</a> bluetooth module. The host Mac does the logging and twittering.</p>
<p>This is one of the many projects on display at the <a title="ITP Winter Show 2008 Â» home" href="http://itp.nyu.edu/shows/winter2008/">ITP Winter Show</a>.</p>
<p>[Thanks, <a href="http://twitter.com/readiness/status/1052981318">@readiness</a> via <a title="Youngest Twitterer EVAR? - Boing Boing" href="http://www.boingboing.net/2008/12/11/youngest-twitterer-e.html">Boing Boing</a>]</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6918/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6918/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6918/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6918/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6918/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6918/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6918/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6918/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6918/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6918/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6918&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/12/baby-twitters-via-kicks/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">RobotSkirts</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/twitter-1.jpg" medium="image">
			<media:title type="html">twitter-1</media:title>
		</media:content>
	</item>
		<item>
		<title>How-to: Programmable logic devices (CPLD)</title>
		<link>http://hackaday.com/2008/12/11/how-to-programmable-logic-devices-cpld/</link>
		<comments>http://hackaday.com/2008/12/11/how-to-programmable-logic-devices-cpld/#comments</comments>
		<pubDate>Fri, 12 Dec 2008 02:41:20 +0000</pubDate>
		<dc:creator>Ian Lesnet</dc:creator>
		
		<category><![CDATA[how-to]]></category>

		<category><![CDATA[misc hacks]]></category>

		<category><![CDATA[tool hacks]]></category>

		<category><![CDATA[complex programmable logic device]]></category>

		<category><![CDATA[cpld]]></category>

		<category><![CDATA[electronics]]></category>

		<category><![CDATA[fpga]]></category>

		<category><![CDATA[logic]]></category>

		<category><![CDATA[programmable logic]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6790</guid>
		<description><![CDATA[
Complex programmable logic devices (CPLDs) contain the building blocks for hundreds of 7400-serries logic ICs. Complete circuits can be designed on a PC and then uploaded to a CPLD for instant implementation. A microcontroller connected to a CPLD is like a microcontroller paired with a reprogrammable circuit board and a fully stocked electronics store.
At first [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6845" title="cover-450" src="http://hackadaycom.files.wordpress.com/2008/12/cover-450.jpg?w=450&#038;h=257" alt="cover-450" width="450" height="257" /></p>
<p><a href="http://en.wikipedia.org/wiki/CPLD">Complex programmable logic devices</a> (CPLDs) contain the building blocks for hundreds of <a href="http://en.wikipedia.org/wiki/7400_series">7400-serries logic ICs</a>. Complete circuits can be designed on a PC and then uploaded to a CPLD for instant implementation. A microcontroller connected to a CPLD is like a microcontroller paired with a reprogrammable circuit board and a fully stocked electronics store.</p>
<p>At first we weren&#8217;t sure of the wide appeal and application of CPLDs in hobbyist projects, but we&#8217;ve been convinced. A custom logic device can eliminate days of reading datasheets, finding the <a href="http://en.wikipedia.org/wiki/7400_series#7400_series_subfamilies">ideal logic IC combination</a>, and then waiting for chips to arrive. Circuit boards are simpler with CPLDs because a single chip with programmable pin placement can replace <a href="http://en.wikipedia.org/wiki/List_of_7400_series_integrated_circuits">100s of individual logic ICs</a>. Circuit mistakes can be corrected by uploading a new design, rather than etching and stuffing a new circuit board. CPLDs are fast, with reaction times starting at 100MHz. Despite their extreme versatility, CPLDs are a mature technology with chips starting at $1.</p>
<p>We&#8217;ve got a home-etchable, self programming development board to get you started. Don&#8217;t worry, this board has a serial port interface for working with the CPLD, and doesn&#8217;t require a separate (usually parallel port) JTAG programmer.</p>
<p><span id="more-6790"></span><strong>Intro to CPLDs</strong></p>
<p><strong><img class="alignnone size-full wp-image-6840" title="bitclone-24fv1final" src="http://hackadaycom.files.wordpress.com/2008/12/bitclone-24fv1final.jpg?w=450&#038;h=191" alt="bitclone-24fv1final" width="450" height="191" /><br />
</strong></p>
<p><em>When to use a CPLD</em><strong><br />
</strong></p>
<p>Consider using a CPLD when a design calls for more than one 7400 series logic ICs. A CPLD will be cheaper, faster, and can be programmed with your ideal pin-out configuration for simpler PCBs.</p>
<p>Use a CPLD in tricky designs that might require several iterations. It&#8217;s easier to design a new circuit in software and upload it to the CPLD than it is to design, etch, and stuff a new circuit board.</p>
<p>For maximum speed and instant response, choose a CPLD. The difference in speed is amazing; CPLDs start at a 100MHz, while microcontrollers respond to interrupts at a few MHz. CPLD designs form circuits that react to external stimulus, reactions occur almost instantaneously. A microcontroller executes code to react to events, even interrupt routines have comparatively high latency.</p>
<p><em>CPLD vs FPGA</em></p>
<p><a href="http://en.wikipedia.org/wiki/Field-programmable_gate_array">FPGA</a>s are better known than CPLDs, but they share many characteristics. This analogy isn&#8217;t perfect, but we like it: where FPGAs are a reprogrammable processor core, a CPLD is a reprogrammable circuit board or breadboard. FPGAs replace microcontrollers, memory, and other components. CPLDs absorb logic ICs, and work well with a microcontroller.</p>
<p><em>Manufacturers</em></p>
<p><a href="http://www.altera.com/">Altera</a> and <a href="http://www.xilinx.com/">Xilinx</a>, the biggest CPLD manufacturers, are better known for their FPGAs. <a href="http://www.latticesemi.com/">Lattice Semiconductor</a> is another large CPLD manufacturer with less community following. <a href="http://www.atmel.com">Atmel</a> makes <a href="http://www.atmel.com/dyn/products/devices.asp?family_id=653">pin-compatible versions</a> of old industry-standard CPLDs.</p>
<p>If you plan to work at 5volts, your options are limited. Xilinx XC9500 CPLDs are still available as new old stock, but cost four times more than newer 3.3volt equivalents. Atmel&#8217;s <a href="http://www.atmel.com/dyn/products/product_card.asp?part_id=2123">ATF1502 series</a> works at 5volts, but they don&#8217;t offer a free development environment.</p>
<p>At 3.3volts there&#8217;s more options, but new CPLDs increasingly have a core that runs at 2.5volts, 1.8volts, or lower. The Altera <a href="http://www.altera.com/products/devices/cpld/max2/mx2-index.jsp">MAXII</a> and the Xilinx <a href="http://www.xilinx.com/products/xc9500xl/index.htm">XC9500XL</a> series are probably the most popular 3.3volt CPLDs. Xilinx also makes the <a href="http://www.xilinx.com/products/coolrunner2/">CoolrunnerII</a> CPLD, but it only comes in a TQFP package and requires a separate 1.8volt supply for the core.</p>
<p><em>Packages</em></p>
<p>Most manufacturers offer one or two CPLDs in a hobbyist friendly<a href="http://en.wikipedia.org/wiki/Plastic_leaded_chip_carrier"> PLCC 44 package</a>, though this is starting to disappear. PLCC is an SOIC-sized surface mount chip with pins on all four sides. PLCC44 sockets are commonly available in through-hole and SMD versions. Unfortunately, newer CPLD families are starting to eliminate the PLCC package and offer only 44 pin and larger TQFP chips, such as Xilinx&#8217;s CoolrunnerII.</p>
<p><em>Development environments</em></p>
<p>Most manufacturers offer a free development environment that supports design entry using simple schematics, as well as <a href="http://en.wikipedia.org/wiki/Verilog">Verilog</a> or <a href="http://en.wikipedia.org/wiki/VHDL">VHDL</a>. Many won&#8217;t support the latest FPGAs in the free version, but we only need the CPLD parts anyway. Altera has <a href="https://www.altera.com/support/software/download/sof-download_center.html">Quartus</a>, Xilinx has <a href="http://www.xilinx.com/products/design_resources/design_tool/index.htm">ISE</a>, and Lattice has <a href="http://www.latticesemi.com/dynamic/index.cfm?fuseaction=view_category&amp;document_type=65&amp;source=topnav">ispLever</a>. Atmel has <a href="http://www.atmel.com/dyn/products/tools_card.asp?tool_id=2756">ProChip Designer</a> for the ATF15xx series, but they only offer a 6month trial license &#8212; which they wouldn&#8217;t actually give us.</p>
<p><em>Programmers</em></p>
<p>The development board we present doesn&#8217;t need a separate JTAG programmer because the PIC microcontroller already programs the CPLD.Â  If you want an external programmer, the cheapest are the parallel port programmers: <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=8460">Parallel Cable III for Xilinx</a> and <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=8705">BytleBlaster for Altera</a>. Inexpensive clones, and schematics, are available at SparkFun.Â  The<a href="http://www.sparkfun.com/commerce/product_info.php?products_id=8278"> OpenOCD</a> is a generic USB JTAG programmer that will work with many CPLDs, FPGAs, and ARMs.</p>
<p><em>Our choice</em></p>
<p>We eventually settled on the Xilinx XC9500XL series because it had a cheap development kit we could use to <a href="http://hackaday.com/2008/12/01/bus-pirate-firmware-update-v0c-jtag-and-more/">test our JTAG programmer</a> prior to implementing an entire design.</p>
<p>TheÂ <a href="http://www.xilinx.com/products/devkits/DO-CPLD-DK-G.htm">DO-CPLD-DK</a> from <a href="http://www.digilentinc.com/Products/Detail.cfm?Prod=XC2XL&amp;Nav1=Products&amp;Nav2=Programmable">Digilent</a> includes a XC9572XL, a CoolrunnerII, and parallel port programmer. Nu Horizons has some <a href="https://webapps.nuhorizons.com/storefront/PartSearch.do;jsessionid=916F131647DF384D1C7D5D21956D5A63?PostAction=GO&amp;ItemsPerPage=25&amp;PartNumberHolder=&amp;Mode=initSearch&amp;Commodity=ALL&amp;InStockOnly=FALSE&amp;I6.y=0&amp;Manufacturer=ALLMFG&amp;InStockOnly1=N&amp;PartNumberSearch=DO-CPLD-DK&amp;pSearchType=CompanyPart&amp;PageNum=1&amp;PbFreeOnly1=N&amp;NextPage=1&amp;I6=go&amp;ResultsPerPage=10&amp;PbFreeOnly=FALSE&amp;I6.x=0&amp;prevSearchType=">old non-ROHS models for $40</a>, but due to sloppy variable type handling in their credit card processing scripts, we couldn&#8217;t complete an order online. We tried to do it over the phone but they refused to take such a small order on the phone, even during a website malfunction. In the end, it was cheaper to pay full price at Digikey (#<a href="http://search.digikey.com/scripts/DkSearch/dksus.dll?Detail?name=122-1512-ND">122-1512-ND</a>) after including New Horizon&#8217;s exorbitant shipping charges. We wouldn&#8217;t normally mention this, but with only two places to buy the board it&#8217;s probably worth noting our experience.</p>
<p><strong>CPLD development board</strong></p>
<p><strong><img class="alignnone size-full wp-image-6844" title="cct-crop-450" src="http://hackadaycom.files.wordpress.com/2008/12/cct-crop-450.jpg?w=450&#038;h=202" alt="cct-crop-450" width="450" height="202" /></strong></p>
<p><a href="http://hackadaycom.files.wordpress.com/2008/12/cct.png">Click here for a full size schematic image</a> (PNG). The circuit and PCB are designed using the freeware version of <a href="http://www.cadsoft.de">Cadsoft Eagle</a>. All the files for this project are included in the project archive linked at the end of the article.</p>
<p><em>Circuit</em></p>
<p>A PIC <a href="http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1335&amp;dDocName=en026374">24FJ64GA002</a> microcontroller (IC1) provides the user and programming interface to the CPLD. We use this $4 PIC in a lot of projects because the peripheral pin select feature makes board routing really easy. Check out our <a href="http://hackaday.com/2008/09/18/web-server-on-a-business-card-part-1/">introduction to the PIC24F</a> for more details. The PIC needs to communicate with a PC serial port, so we added an inexpensive MAX3232 RS232 transceiver. The serial interface should work with a USB-&gt;serial adapter.</p>
<p>Our choice of CPLD (IC3), a Xilinx <a href="http://www.xilinx.com/support/documentation/data_sheets/ds057.pdf">XC9572XL</a> (PDF), is connected between the PIC and several other components. We can create an endless variety of circuitry between the PIC and other chips using the reprogrammable logic inside the CPLD.<em> </em>The PIC will program the CPLD with code sent from a PC serial port, but we still brought the JTAG pins to a header for easy external debugging.</p>
<p>A <a href="http://www.maxim-ic.com/quick_view2.cfm/qv_pk/3491">DS1085 digital programmable oscillator</a> (IC4) generates clock frequencies between 8KHz and 133MHz, at 10KHz increments. This is very similar to the <a href="http://hackaday.com/2008/11/28/parts-133mhz-162khz-programmable-oscillator-ds1077/">DS1077 we covered earlier,</a> but it has even steps between all frequencies. The DS1085 requires a 5volt supply (VR2). The I2C interface also runs at 5volts, so we connected it to 5volt tolerant PIC pins. It&#8217;s possible to use the 3.3volt 66MHz 1085L instead, and remove the 5volt supply.</p>
<p>We used a cheap 3.3volt SOT223 voltage regulator (VR1) to power most of the circuit.Â  The 5volt supply (VR2) can be excluded if you use a slower 1085L 3.3volt oscillator.</p>
<p>CPLDs are commonly used as a memory controller, so we included 32K of SRAM (IC5) on the development board. A 3.3volt latch with 5volt tolerant inputs interface the memory inputs to a wide range of external voltages (IC6). The latch inputs are held low with a 1Mohm resistor network (RN1). We&#8217;ll discuss this section extensively in an upcoming article.</p>
<p><em>PCB</em></p>
<p>The board is a quasi one-sided design. We made several compromises so we could prototype this highly experimental PCB ourselves. We present the board &#8216;as is&#8217; for other die-hards that might want to etch this board at home. If you send the PCB to a board house, try to correct these issues prior to producing a &#8216;real&#8217; double-sided board.</p>
<p>One power pin of the CPLD is missing a decoupling capacitor entirely; there was no way to put a capacitor in that area. One CPLD decoupling capacitor, and the SRAM decoupling capacitor, are through-hole parts. Using these through-hole parts eliminated a few jumper wires.</p>
<p><img class="alignnone size-full wp-image-6839" title="backside-450" src="http://hackadaycom.files.wordpress.com/2008/12/backside-450.jpg?w=450&#038;h=257" alt="backside-450" width="450" height="257" /></p>
<p>The jumper wires on the back of the board are optimized for single-sided production, rather than good design practices. We faked a double-sided board by soldering the power bus on the back. A real double-sided board design should route the power bus to avoid crossing signal paths, and include the missing decoupling capacitors.</p>
<p>We used an surface mount PLCC chip socket, but a through-hole version is definitely a better idea. We though the SMD version would be easy to solder, but it turned out to be a nightmare. We really wanted the CPLD to be on the front of the board for the coolest possible presentation. A proper two-sided board with plated through-holes can have a through-hole socket on the front, but this wasn&#8217;t possible with our 1-sided prototype board.</p>
<p><em>Parts list</em></p>
<p><em><img class="alignnone size-full wp-image-6841" title="brd-450" src="http://hackadaycom.files.wordpress.com/2008/12/brd-450.png?w=450&#038;h=256" alt="brd-450" width="450" height="256" /></em></p>
<p><a href="http://hackadaycom.files.wordpress.com/2008/12/brd.png">Click here for a full size placement diagram</a> (PNG).<em><br />
</em></p>
<table border="0">
<tbody>
<tr>
<td><strong>Part</strong></td>
<td><strong>Value</strong></td>
</tr>
<tr>
<td>IC1</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=V%2fyyTCAHA4D%2fh5r3CRQDtA%3d%3d">PIC25FJ64GA002</a> (SOIC)</td>
</tr>
<tr>
<td>IC2</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?R=SN75C3232EDvirtualkey59500000virtualkey595-SN75C3232ED">MAX3232CSE</a> (SOIC-N)</td>
</tr>
<tr>
<td>IC3</td>
<td><a href="XC9572XL-10PCG44C">XC9572XL-10PCG44C</a> (PLCC)</td>
</tr>
<tr>
<td>&#8211;</td>
<td><a href="https://www.mouser.com/Search/ProductDetail.aspx?R=PLCC-44-AT-SMTvirtualkey64610000virtualkey737-PLCC-44-AT-SMT">PLCC44 socket</a>, SMD</td>
</tr>
<tr>
<td>IC4</td>
<td><a href="http://www.maxim-ic.com/quick_view2.cfm/qv_pk/3491">DS1085</a> or <a href="http://search.digikey.com/scripts/DkSearch/dksus.dll?Detail?name=DS1085LZ-25%2B-ND">DS1085L</a> (SOIC)</td>
</tr>
<tr>
<td>IC5</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=AI63Xxb%2f5RSO5sZcRck%2fyw%3d%3d">32Kx8, 3.3v, SRAM</a> (SOJ)</td>
</tr>
<tr>
<td>IC6</td>
<td><a href="https://www.mouser.com/Search/ProductDetail.aspx?R=74LVT573WMvirtualkey51210000virtualkey512-74LVT573WM">74LVT573D</a> (SOIC)</td>
</tr>
<tr>
<td>VR1</td>
<td>3.3v regulator, <a href="https://www.mouser.com/Search/ProductDetail.aspx?R=LD1117S33CTRvirtualkey51120000virtualkey511-LD1117S33C">LD1117S33</a> (SOT223)</td>
</tr>
<tr>
<td>VR2</td>
<td>5v regulator, <a href="https://www.mouser.com/Search/ProductDetail.aspx?R=LD1117S50TRvirtualkey51120000virtualkey511-LD1117S50">LD1117S50</a> (SOT223)</td>
</tr>
<tr>
<td>C1-11,13-17</td>
<td><a href="https://www.mouser.com/Search/ProductDetail.aspx?R=C0805C104M5RACTUvirtualkey64600000virtualkey80-C0805C104M5R">0.1uF decoupling capacitors</a> (0805)</td>
</tr>
<tr>
<td>C12</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=6ARB0lp6jlXWqZF4lhG52w%3d%3d">0.01uF capacitor</a> (0805)</td>
</tr>
<tr>
<td>C15,16</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=9AX3phJxokWIpR5WRGtIJw%3d%3d">0.1uF decoupling capacitors</a> (through-hole)</td>
</tr>
<tr>
<td>C18</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?R=293D106X96R3A2TE3virtualkey61320000virtualkey74-293D106X96R3A2TE3">10uF tantalum capacitor</a> (A)</td>
</tr>
<tr>
<td>R1,2</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=2BMLUTrrT4P7Xm58YbKmPg%3d%3d">390ohm resistor</a> (0805)</td>
</tr>
<tr>
<td>R3-5</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=jBethxrBxZb5NLDetw123g%3d%3d">2000ohm resistor</a> (0805)</td>
</tr>
<tr>
<td>RN1</td>
<td><a href="https://www.mouser.com/Search/ProductDetail.aspx?R=4609X-101-105LFvirtualkey65210000virtualkey652-4609X-1LF-1M">1Mohm resistor network</a> (9 pin)</td>
</tr>
<tr>
<td>LED1,2</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=7JStj%2fjQ2SElGv%2fp7IzKlg%3d%3d">LED</a> (0805)</td>
</tr>
<tr>
<td>X1</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=nAEW9fCjKd%2fyLNwP2ItddQ%3d%3d">db9 female serial port connector</a> *untested</td>
</tr>
<tr>
<td>J1</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=8xMK%2bwDsXhcfMNb/YnnwLQ==">2.1mm power jack</a></td>
</tr>
<tr>
<td>ICSP, JTAG, SV1</td>
<td><a href="http://www.mouser.com/Search/ProductDetail.aspx?R=4-103329-0virtualkey57100000virtualkey571-41033290">0.1&#8243; pin header, right angle</a></td>
</tr>
<tr>
<td>S1</td>
<td><a href="https://www.mouser.com/Search/ProductDetail.aspx?R=101-0164-EVvirtualkey12040000virtualkey101-0164-EV">Tactile switch</a> (DTSM-6)</td>
</tr>
</tbody>
</table>
<p><em>Firmware</em></p>
<p>The firmware is written in C using the free demonstration version of the <a href="http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1406&amp;dDocName=en010065">PIC C30 compiler</a>. Learn all about working with this PIC in our <a href="http://hackaday.com/2008/09/18/web-server-on-a-business-card-part-1/">introduction to the PIC 24F series</a>. The firmware is included in the project archive at the end of the article.</p>
<p>We wanted a super easy way to interact with the hardware on the board without endless compile-program-test cycles. We made a custom version of the <a href="http://hackaday.com/2008/11/19/how-to-the-bus-pirate-universal-serial-interface/">Bus Pirate firmware</a> thatÂ  provides a simple ASCII terminal interface to the DS1085 clock chip (I2C), the CPLD programing interface (JTAG), and a 3 wire (SPI) interface to the CPLD. Check out the Bus Pirate tutorial for background on the simple syntax used with the firmware.</p>
<p>The original Bus Pirate firmware handles several protocols that share the same pins. For the CPLD version, we changed the pin assignments to fit the connections on the development board. We also removed unused modules and options.</p>
<p><strong>CPLD blinky LED examples</strong></p>
<p>We prepared several designs in Xilinx&#8217;s ISE development environment. The schematics, pin placement files, and compiled designs (XSVF) are included in the project archive linked at the end of the article.Â  A full explanation of ISE is beyond the scope of this article; we found the help files sufficiently useful to make these examples.</p>
<p><em><img class="alignnone size-full wp-image-6855" title="ex1" src="http://hackadaycom.files.wordpress.com/2008/12/ex1.png?w=450&#038;h=222" alt="ex1" width="450" height="222" /><br />
</em></p>
<p>The first design simply lights the LED connected to pin 8 of the CPLD.</p>
<p><em>Prepare the XSVF file</em></p>
<p>XSVF is a compressed JTAG programming format, as described by Xilinx in <a href="http://www.xilinx.com/support/documentation/application_notes/xapp058.pdf">this application note</a> (PDF). XSVF isn&#8217;t limited to programming Xilinx devices, and can be prepared for any chip that provides a common <a href="http://en.wikipedia.org/wiki/Boundary_scan_description_language">BSDL</a> JTAG definition file.</p>
<p>Open the iMPACT programming tool from the ISE Design Suite project panel under <em>Configure target device-&gt;iMPACT</em>.</p>
<ul>
<li> Choose the option to <em>create a boundary scan file</em>,Â  and set the type to XSVF.</li>
<li>Give the XSVF output a file name and then add a compiled CPLD image (ex1.jed) when prompted to add a device.</li>
<li>You should see a JTAG chain that contains a single device.</li>
</ul>
<p><img class="alignnone size-full wp-image-6856" title="boundaryscan" src="http://hackadaycom.files.wordpress.com/2008/12/boundaryscan.png?w=365&#038;h=174" alt="boundaryscan" width="365" height="174" /></p>
<p>Click on the device and choose program; iMPACT will record the programming sequences to an XSVF file.</p>
<p>With XSVF file in hand, it&#8217;s time to open up a terminal and program the CPLD. We like <a href="http://www.ayera.com/teraterm/">Tera Term</a> and <a href="http://www.hw-group.com/products/hercules/index_en.html">Hercules</a> on Windows. You <em>must</em> enable XON/XOFF flow control in the client to use the JTAG interface. The default PC side setting for the development board terminal is 115200bps, 8N1.</p>
<blockquote><p>HiZ&gt;m <strong>&lt;&#8211;select mode</strong><br />
1. HiZ<br />
2. I2C<br />
3. JTAG<br />
4. RAW3WIRE<br />
MODE&gt;3 <strong>&lt;&#8211;JTAG</strong><br />
900 MODE SET<br />
602 JTAG READY<br />
JTAG&gt;(2) <strong>&lt;&#8211;probe JTAG chain macro<br />
</strong> xxx JTAG INIT CHAIN<br />
xxx JTAGSM: RESET<br />
xxx JTAGSM: RESET-&gt;IDLE<br />
xxx JTAGSM: IDLE-&gt;Instruction Register (DELAYED ONE BIT FOR TMS)<br />
xxx JTAGSM: IR-&gt;IDLE<br />
xxx JTAGSM: IDLE-&gt;Data Register<br />
xxx JTAGSM: DR-&gt;IDLE<br />
xxx JTAGSM: RESET<br />
xxx JTAGSM: RESET-&gt;IDLE<br />
xxx JTAGSM: IDLE-&gt;Data Register<br />
xxx JTAG CHAIN REPORT:<br />
0&#215;01 DEVICE(S)<br />
#0&#215;01 : 0xC9 0&#215;02 0&#215;06 0&#215;9A <strong>&lt;&#8211;XC9572XL responds</strong><br />
xxx JTAGSM: DR-&gt;IDLE<br />
JTAG&gt;</p></blockquote>
<p>In the terminal we enter the mode menu (m), and choose JTAG (3). Macro 2 probes the JTAG chain, in our case this is just the CPLD.Â  The chain report tells us that the chip is connected and responding. <a href="http://hackaday.com/2008/12/01/bus-pirate-firmware-update-v0c-jtag-and-more/">Read more about the JTAG interface</a>.</p>
<p><img class="alignnone size-full wp-image-6857" title="up" src="http://hackadaycom.files.wordpress.com/2008/12/up.png?w=451&#038;h=265" alt="up" width="451" height="265" /></p>
<p>Now we can run the XSVF programmer, macro (3), and upload the XSVF file from the terminal <em>in binary mode</em>. The first example just lights the LED on pin 8. If the LED lights, we can verify that programming was successful. If your LED doesn&#8217;t light, don&#8217;t despair; sometimes the JTAG programmer sticks and a reset macro (1) will get the chip going.</p>
<p><img class="alignnone size-full wp-image-6867" title="ex1a" src="http://hackadaycom.files.wordpress.com/2008/12/ex1a.jpg?w=450&#038;h=285" alt="ex1a" width="450" height="285" /></p>
<p>LED at full brightness.</p>
<p><em>74LS32/4071 OR gate, blink at half rate (/2)<br />
</em></p>
<p><img class="alignnone size-full wp-image-6862" title="ex21" src="http://hackadaycom.files.wordpress.com/2008/12/ex21.png?w=450&#038;h=128" alt="ex21" width="450" height="128" /></p>
<p>A major component of the CPLD development board is the 1085(L) frequency synthesizer connected to pin 7 of the CPLD. The next example uses a <a href="http://en.wikipedia.org/wiki/OR_gate">logic OR gate</a>, like a <a href="http://en.wikipedia.org/wiki/OR_gate#Hardware_description_and_pinout">74LS32 or 4071</a> IC, to blink the LED whenever the clock signal is high. At even the slowest clock rate the blinking will be too fast to see, but we should get a nice PWM dimming effect compared to the first example.</p>
<blockquote><p>JTAG&gt;m <strong>&lt;&#8211;select mode</strong><br />
1. HiZ<br />
2. I2C<br />
3. JTAG<br />
4. RAW3WIRE<br />
MODE&gt;2 <strong>&lt;&#8211;I2C interface to DS1085</strong><br />
900 MODE SET<br />
202 I2C READY<br />
I2C&gt;(1) <strong>&lt;&#8211;address search macro</strong><br />
xxx Searching 7bit I2C address space.<br />
Found devices at:<br />
0xB0 0xB1<strong> &lt;&#8211;found the DS1085 address</strong><br />
I2C&gt;</p></blockquote>
<p>Program the CPLD as before, and then switch to I2C mode to access the DS1085 clock. We could look up the device address in the datasheet, but we save a few seconds by running the address search macro; the report tells us the chip answers to 0xb0 (write) and 0xb1 (read).</p>
<blockquote><p>I2C&gt;{0xb0 0&#215;02 0b00011111 0b10000000}<strong>&lt;&#8211;max prescaler</strong><br />
210 I2C START CONDITION<br />
220 I2C WRITE: 0xB0 GOT ACK: YES<br />
220 I2C WRITE: 0&#215;02 GOT ACK: YES<br />
220 I2C WRITE: 0&#215;1F GOT ACK: YES<br />
220 I2C WRITE: 0&#215;80 GOT ACK: YES<br />
240 I2C STOP CONDITION<br />
I2C&gt;{0xb0 1 0b11111111 0b11000000}<strong>&lt;&#8211;max divider</strong><br />
210 I2C START CONDITION<br />
220 I2C WRITE: 0xB0 GOT ACK: YES<br />
220 I2C WRITE: 0&#215;01 GOT ACK: YES<br />
220 I2C WRITE: 0xFF GOT ACK: YES<br />
220 I2C WRITE: 0xC0 GOT ACK: YES<br />
240 I2C STOP CONDITION<br />
I2C&gt;</p></blockquote>
<p>The DS1085 is almost exactly like the <a href="http://hackaday.com/2008/11/28/parts-133mhz-162khz-programmable-oscillator-ds1077/">DS1077 we covered earlier</a>, but has a DAC controlled oscillator for even steps between all frequencies. We programmed the clock to the slowest frequency using the commands shown above. The LED is dimmed by the pulse-width modulation effect of the clock signal.</p>
<p><img class="alignnone size-full wp-image-6868" title="ex2a" src="http://hackadaycom.files.wordpress.com/2008/12/ex2a.jpg?w=450&#038;h=285" alt="ex2a" width="450" height="285" /></p>
<p>LED at half brightness.</p>
<p><em>74F269 16bit synchronous counter, blink slowly (/</em>65535<em>)</em></p>
<p><img class="alignnone size-full wp-image-6865" title="ex3" src="http://hackadaycom.files.wordpress.com/2008/12/ex3.png?w=449&#038;h=282" alt="ex3" width="449" height="282" /></p>
<p>We just programmed the CPLD with a logic OR gate similar to a 74LS32. Now, we&#8217;re going to reprogram the chip with a 16bit counter like two cascaded <a href="http://www.mouser.com/Search/ProductDetail.aspx?qs=lp01TYqEl4mFnzVVG95LCg%3d%3d">74F269s</a>.Â  At $1.15 each, two 74F269 Ics are more expensive than the XC9572XL CPLD. A 16bit counter rolls over once per 65535 ticks, so a LED attached to the last bit will toggle once every 65535/2 ticks.</p>
<p>Now we can see the cool part of CPLDs. The CPLD is like a programmable breadboard; we just popped out the 74LS32 and put in a 74F269, without buying parts, reading datasheets, etching, wiring, etc. A microcontroller connected to a CPLD can reconfigure its own circuit board to fix errors, add features, or re-purpose it for entirely different applications.</p>
<p>We upload the new design as before, but now the clock is divided by 65535 and the LED toggles about once per second.</p>
<p><span style="text-align:center; display: block;"><a href="http://hackaday.com/2008/12/11/how-to-programmable-logic-devices-cpld/"><img src="http://img.youtube.com/vi/wNfJKHV0ylg/2.jpg" alt="" /></a></span></p>
<p><strong>Taking it further</strong><br />
Next time we&#8217;ll look at discrete 7400-series logic chips, and implement a ton of them in the CPLD to make a high-speed bus sniffer and logic analyzer.</p>
<p><strong>Download:</strong> <a href="http://blog.mahalo.com/hackaday/howto/bitclone.v1.zip">bitclone.v1.zip</a></p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6790/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6790/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6790/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6790/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6790/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6790/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6790/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6790/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6790/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6790/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6790&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/11/how-to-programmable-logic-devices-cpld/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Ian Lesnet</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/cover-450.jpg" medium="image">
			<media:title type="html">cover-450</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/bitclone-24fv1final.jpg" medium="image">
			<media:title type="html">bitclone-24fv1final</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/cct-crop-450.jpg" medium="image">
			<media:title type="html">cct-crop-450</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/backside-450.jpg" medium="image">
			<media:title type="html">backside-450</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/brd-450.png" medium="image">
			<media:title type="html">brd-450</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/ex1.png" medium="image">
			<media:title type="html">ex1</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/boundaryscan.png" medium="image">
			<media:title type="html">boundaryscan</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/up.png" medium="image">
			<media:title type="html">up</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/ex1a.jpg" medium="image">
			<media:title type="html">ex1a</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/ex21.png" medium="image">
			<media:title type="html">ex21</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/ex2a.jpg" medium="image">
			<media:title type="html">ex2a</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/ex3.png" medium="image">
			<media:title type="html">ex3</media:title>
		</media:content>

		<media:content url="http://img.youtube.com/vi/wNfJKHV0ylg/2.jpg" medium="image" />
	</item>
		<item>
		<title>Xbox 360 jasper in the wild</title>
		<link>http://hackaday.com/2008/12/11/xbox-360-jasper-in-the-wild/</link>
		<comments>http://hackaday.com/2008/12/11/xbox-360-jasper-in-the-wild/#comments</comments>
		<pubDate>Thu, 11 Dec 2008 22:04:20 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[news]]></category>

		<category><![CDATA[xbox hacks]]></category>

		<category><![CDATA[360]]></category>

		<category><![CDATA[ben heck]]></category>

		<category><![CDATA[jasper]]></category>

		<category><![CDATA[xbox]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6909</guid>
		<description><![CDATA[
[Ben Heck] has written up what he calls a &#8220;super unboxing&#8221; of the new jasper Xbox 360.Â  The &#8220;jasper&#8221; refers to a new graphics processor that is supposed to be smaller and more reliable. They have been hard to find, but [Ben] shows us how to spot them. Simply look at the sticker on the [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6910" title="jasper_5" src="http://hackadaycom.files.wordpress.com/2008/12/jasper_5.jpg?w=440&#038;h=304" alt="jasper_5" width="440" height="304" /></p>
<p>[Ben Heck] has written up what he calls a &#8220;super unboxing&#8221; of the new <a href="http://www.engadget.com/2008/12/10/inside-an-xbox-360-jasper-ben-heck-dissects-the-mythical-consol/">jasper Xbox 360</a>.Â  The &#8220;jasper&#8221; refers to a <a href="http://hackaday.com/2008/11/28/xbox-360-jasper-motherboards/">new graphics processor</a> that is supposed to be smaller and more reliable. They have been hard to find, but [Ben] shows us how to spot them. Simply look at the sticker on the back of the unit that shows voltage/current. If it uses 12.1 Amps instead of 14.2, it has the jasper.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6909/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6909/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6909/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6909/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6909/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6909/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6909/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6909/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6909/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6909/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6909&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/11/xbox-360-jasper-in-the-wild/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/jasper_5.jpg" medium="image">
			<media:title type="html">jasper_5</media:title>
		</media:content>
	</item>
		<item>
		<title>walk/drive a dog/motorcycle</title>
		<link>http://hackaday.com/2008/12/11/walkdrive-a-dogmotorcycle/</link>
		<comments>http://hackaday.com/2008/12/11/walkdrive-a-dogmotorcycle/#comments</comments>
		<pubDate>Thu, 11 Dec 2008 21:23:23 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[robots hacks]]></category>

		<category><![CDATA[transportation hacks]]></category>

		<category><![CDATA[dog]]></category>

		<category><![CDATA[motorcycle]]></category>

		<category><![CDATA[mutoid]]></category>

		<category><![CDATA[robot]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6905</guid>
		<description><![CDATA[
This hulking monster was created by the Mutoid Waste Company because, well, why not? Part dog, part motorcycle it walks/drives and breathes fire. Constructed from all salvaged parts, this thing is a testament to recycling. Either that or it is the harbinger of the robot apocalypse. Regardless of the possibility of it enslaving all mankind, [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6904" title="robo-dog1" src="http://hackadaycom.files.wordpress.com/2008/12/robo-dog1.jpg?w=450&#038;h=304" alt="robo-dog1" width="450" height="304" /></p>
<p>This <a href="http://www.botjunkie.com/2008/12/10/robodogoflameocycle/">hulking monster</a> was created by the <a href="http://tash.gn.apc.org/mutoid1.htm">Mutoid Waste Company</a> because, well, why not? Part dog, part motorcycle it walks/drives and breathes fire. Constructed from all salvaged parts, this thing is a testament to recycling. Either that or it is the harbinger of the robot apocalypse. Regardless of the possibility of it enslaving all mankind, we want one. Be sure to <a href="http://www.veoh.com/videos/v16860823g9anBMpK?source=embed">watch the video</a>.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6905/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6905/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6905/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6905/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6905/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6905/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6905/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6905/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6905/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6905/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6905&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/11/walkdrive-a-dogmotorcycle/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/robo-dog1.jpg" medium="image">
			<media:title type="html">robo-dog1</media:title>
		</media:content>
	</item>
		<item>
		<title>The Hemp-Mote</title>
		<link>http://hackaday.com/2008/12/11/the-hemp-mote/</link>
		<comments>http://hackaday.com/2008/12/11/the-hemp-mote/#comments</comments>
		<pubDate>Thu, 11 Dec 2008 21:06:15 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[wii hacks]]></category>

		<category><![CDATA[hemp]]></category>

		<category><![CDATA[wii]]></category>

		<category><![CDATA[wiimote]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6900</guid>
		<description><![CDATA[
We&#8217;re sure that almost every one of our readers has been wondering why they can&#8217;t have a hemp covered Wiimote. Well, [Dhreck] got tired of waiting and made one himself. This isn&#8217;t just as simple as covering a Wiimote with hemp chord. Major modifications had to be made to keep it from getting too bulky. [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6899" title="hemp-mote-01" src="http://hackadaycom.files.wordpress.com/2008/12/hemp-mote-01.jpg?w=450&#038;h=300" alt="hemp-mote-01" width="450" height="300" /></p>
<p>We&#8217;re sure that almost every one of our readers has been wondering why they can&#8217;t have a hemp covered Wiimote. Well, [Dhreck] got tired of waiting and <a href="http://www.dhreck.com/2008/12/11/endtroducing-the-hemp-mote/">made one himself</a>. This isn&#8217;t just as simple as covering a Wiimote with hemp chord. Major modifications had to be made to keep it from getting too bulky. [Dhreck] whittled down most of the shell, then re formed it with modeling putty. After sanding that nice and smooth and applying a nice black paint job, he started the painstaking process of wrapping it in hemp.Â  It still works perfectly fine, but can fray if you are too hard on it. So, if you get your hands on some hemp, take it easy on your Wii.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6900/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6900&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/11/the-hemp-mote/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/hemp-mote-01.jpg" medium="image">
			<media:title type="html">hemp-mote-01</media:title>
		</media:content>
	</item>
		<item>
		<title>Making a cold heat soldering iron</title>
		<link>http://hackaday.com/2008/12/11/making-a-cold-heat-soldering-iron/</link>
		<comments>http://hackaday.com/2008/12/11/making-a-cold-heat-soldering-iron/#comments</comments>
		<pubDate>Thu, 11 Dec 2008 17:39:17 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[daily]]></category>

		<category><![CDATA[tool hacks]]></category>

		<category><![CDATA[cold heat]]></category>

		<category><![CDATA[graphite]]></category>

		<category><![CDATA[lead]]></category>

		<category><![CDATA[solder]]></category>

		<category><![CDATA[soldering]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6880</guid>
		<description><![CDATA[
Cold Heat soldering irons are pretty cool. They heat up in seconds and cool down just as quickly. [photozz] shows us how we can make one from stuff we probably have sitting around right now. Cold Heat soldering irons work off of resistance, the tip material heats very quickly when electricity is passed through the [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6881" title="cold_heat" src="http://hackadaycom.files.wordpress.com/2008/12/cold_heat.jpg?w=450&#038;h=325" alt="cold_heat" width="450" height="325" /></p>
<p>Cold Heat soldering irons are pretty cool. They heat up in seconds and cool down just as quickly. [photozz] shows us how we can <a href="http://www.instructables.com/id/DIY_Cold_Heat_soldering_iron/">make one from stuff we probably have sitting around</a> right now. <a href="http://en.wikipedia.org/wiki/ColdHeat">Cold Heat soldering irons</a> work off of resistance, the tip material heats very quickly when electricity is passed through the two halves. Upon assessing what he had lying around, [photozz] realized that graphite would work much the same way.Â  He modified a regular soldering iron with a new two piece graphite tip, and powered it with an old pc power supply. The end result is quite nice, though it still needs some kind of temperature control.Â  You may recall seeing other electrical uses for graphite, such as <a href="http://www.instructables.com/id/Lead_light_Not_a_LED/">making quick and dirty light</a>.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6880/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6880/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6880/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6880/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6880/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6880/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6880/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6880/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6880/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6880/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6880&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/11/making-a-cold-heat-soldering-iron/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/cold_heat.jpg" medium="image">
			<media:title type="html">cold_heat</media:title>
		</media:content>
	</item>
		<item>
		<title>Simulated annealing</title>
		<link>http://hackaday.com/2008/12/10/simulated-annealing/</link>
		<comments>http://hackaday.com/2008/12/10/simulated-annealing/#comments</comments>
		<pubDate>Thu, 11 Dec 2008 04:30:36 +0000</pubDate>
		<dc:creator>Eliot Phillips</dc:creator>
		
		<category><![CDATA[downloads hacks]]></category>

		<category><![CDATA[misc hacks]]></category>

		<category><![CDATA[altered qualia]]></category>

		<category><![CDATA[canvas]]></category>

		<category><![CDATA[dieselsweeties]]></category>

		<category><![CDATA[dna]]></category>

		<category><![CDATA[genetic]]></category>

		<category><![CDATA[genetic programming]]></category>

		<category><![CDATA[javascript]]></category>

		<category><![CDATA[polygon]]></category>

		<category><![CDATA[r stevens]]></category>

		<category><![CDATA[ron alsing]]></category>

		<category><![CDATA[simulated annealing]]></category>

		<category><![CDATA[waxy]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6824</guid>
		<description><![CDATA[
Here&#8217;s an update on our earlier post about genetic programming. Altered Qualia has posted a new implementation of [Ron Alsing]&#8217;s idea. It starts with 50 polygons and then randomly changes one parameter with each optimization step. If the the change results in fewer differences from the target image, it&#8217;s kept as the new best DNA. [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6825" title="annealing" src="http://hackadaycom.files.wordpress.com/2008/12/annealing.jpg?w=450&#038;h=245" alt="annealing" width="450" height="245" /></p>
<p>Here&#8217;s an update on our <a title="Genetic programming  - Hack a Day" href="http://hackaday.com/2008/12/08/genetic-programming/">earlier post about genetic programming</a>. Altered Qualia has <a title="Image evolution" href="http://alteredqualia.com/visualization/evolve/">posted a new implementation</a> of [Ron Alsing]&#8217;s idea. It starts with 50 polygons and then randomly changes one parameter with each optimization step. If the the change results in fewer differences from the target image, it&#8217;s kept as the new best DNA. This search method is similar to <a title="Simulated annealing - Wikipedia, the free encyclopedia" href="http://en.wikipedia.org/wiki/Simulated_Annealing">simulated annealing</a>. The image above is the result of 1500 good mutations out of 35900 possible. The implementation lets you choose any image, but smaller means the fitness calculation is faster. It&#8217;s written in JavaScript using the <a title="Canvas (HTML element) - Wikipedia, the free encyclopedia" href="http://en.wikipedia.org/wiki/Canvas_(HTML_element)">&lt;canvas&gt;</a> environment. You&#8217;ll definitely get better performance using <a title="Chrome and Firefox showing JavaScript improvements  - Hack a Day" href="http://hackaday.com/2008/10/18/chrome-and-firefox-showing-javascript-improvements/">newer browser builds</a>.</p>
<p>[Original image by <a title="Bacon is a Vegetable" href="http://www.dieselsweeties.com/">R Stevens</a>]</p>
<p>[via <a title="Links Miniblog" href="http://waxy.org/links">Waxy</a>]</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6824/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6824/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6824/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6824/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6824/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6824/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6824/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6824/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6824/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6824/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6824&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/10/simulated-annealing/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">RobotSkirts</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/annealing.jpg" medium="image">
			<media:title type="html">annealing</media:title>
		</media:content>
	</item>
		<item>
		<title>WordPress 2.7 upgrade in one line</title>
		<link>http://hackaday.com/2008/12/10/wordpress-27-upgrade-in-one-line/</link>
		<comments>http://hackaday.com/2008/12/10/wordpress-27-upgrade-in-one-line/#comments</comments>
		<pubDate>Thu, 11 Dec 2008 03:46:15 +0000</pubDate>
		<dc:creator>Eliot Phillips</dc:creator>
		
		<category><![CDATA[downloads hacks]]></category>

		<category><![CDATA[misc hacks]]></category>

		<category><![CDATA[blog]]></category>

		<category><![CDATA[cfinke]]></category>

		<category><![CDATA[chris finke]]></category>

		<category><![CDATA[cms]]></category>

		<category><![CDATA[command line]]></category>

		<category><![CDATA[command line interface]]></category>

		<category><![CDATA[curl]]></category>

		<category><![CDATA[one line]]></category>

		<category><![CDATA[rm]]></category>

		<category><![CDATA[rm -rf]]></category>

		<category><![CDATA[twitter]]></category>

		<category><![CDATA[wordpress]]></category>

		<category><![CDATA[wordpress mu]]></category>

		<category><![CDATA[wordpress.com]]></category>

		<category><![CDATA[wordpress.org]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6820</guid>
		<description><![CDATA[
BadPoetry WordPress 2.7 has just been released and features a complete interface overhaul. Hack a Day runs on WordPress MU hosted by WordPress.com, so we got this update last week. We run standard WordPress.org on all of our personal blogs though. We recommend it because it&#8217;s free, has a massive userbase, and if you host [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6821" title="wordpress" src="http://hackadaycom.files.wordpress.com/2008/12/wordpress.jpg?w=450&#038;h=60" alt="wordpress" width="450" height="60" /></p>
<p><span style="text-decoration:line-through;">BadPoetry</span> <a title="WordPress âº Blog Tool and Publishing Platform" href="http://wordpress.org/">WordPress 2.7</a> has <a title="WordPress âº Blog Â»   WordPress 2.7 âColtraneâ" href="http://wordpress.org/development/2008/12/coltrane/">just been released</a> and features a complete interface overhaul. Hack a Day runs on <a title="WordPress MU âº 	Home" href="http://mu.wordpress.org/">WordPress MU</a> hosted by <a title="WordPress" href="http://wordpress.com/">WordPress.com</a>, so we got this update last week. We run standard WordPress.org on all of our personal blogs though. We recommend it because it&#8217;s free, has a massive userbase, and if you host it yourself, you can do whatever you want with it.</p>
<p>To make the upgrade process as simple as possible (and for the <a title="How to destroy a filesystem  - Hack a Day" href="http://hackaday.com/2008/11/09/how-to-destroy-a-filesystem/">sheer rush of &#8216;rm -rf&#8217;</a>), we use a one line command.</p>
<p><code>$ curl http://wordpress.org/latest.zip -o "wp.zip" &amp;&amp; unzip wp.zip &amp;&amp; rm -rf ./wordpress/wp-content/ &amp;&amp; cp -r ./wordpress/* ~/www/</code></p>
<p><a title="cURL and libcurl" href="http://curl.haxx.se/">curl</a> downloads the latest version from wordpress. unzip unpacks all of the files into a directory called &#8216;wordpress&#8217;. rm -rf removes everything in the &#8216;wp-content&#8217; directory. Otherwise, you will overwrite your images, themes, and plugins. cp -r copies everything to your http document root, overwriting the previous install.</p>
<p>Naturally, you should <a title="Backing Up Your Database Â« WordPress Codex" href="http://codex.wordpress.org/Backing_Up_Your_Database">back up your current install and database</a> beforehand. We tend to use the one-liner with reckless abandon. If you&#8217;re wondering about the terseness, it was designed to <a title="//wo ..." href="http://twitter.com/cfinke/status/779468837">fit inside the 140 character limit of Twitter</a>.</p>
<p>[Thanks, <a title="Less Talk, More Do" href="http://www.chrisfinke.com/">Chris Finke</a>]</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6820/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6820/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6820/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6820/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6820/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6820/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6820/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6820/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6820/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6820/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6820&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/10/wordpress-27-upgrade-in-one-line/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">RobotSkirts</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/wordpress.jpg" medium="image">
			<media:title type="html">wordpress</media:title>
		</media:content>
	</item>
		<item>
		<title>Parts: 1-Wire temperature sensor (DS1822)</title>
		<link>http://hackaday.com/2008/12/10/parts-1-wire-temperature-sensor-ds1822/</link>
		<comments>http://hackaday.com/2008/12/10/parts-1-wire-temperature-sensor-ds1822/#comments</comments>
		<pubDate>Thu, 11 Dec 2008 01:35:05 +0000</pubDate>
		<dc:creator>Ian Lesnet</dc:creator>
		
		<category><![CDATA[home hacks]]></category>

		<category><![CDATA[parts]]></category>

		<category><![CDATA[tool hacks]]></category>

		<category><![CDATA[1-wire]]></category>

		<category><![CDATA[bus pirate]]></category>

		<category><![CDATA[dallas]]></category>

		<category><![CDATA[electronics]]></category>

		<category><![CDATA[maxim]]></category>

		<category><![CDATA[monday parts]]></category>

		<category><![CDATA[temperature]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6706</guid>
		<description><![CDATA[
Download: buspirate.v0d.zip
Dallas/Maxim&#8217;s 1-Wire protocol is the most requested addition to the Bus Pirate.Â  We finally got some 1-Wire parts, and today we&#8217;ll demonstrate the DS1822 1-Wire digital thermometer. Grab the datasheet (PDF) and follow along.
This post is accompanied by release v.0d of the Bus Pirate firmware for hardware version 0. This includes the new 1-Wire [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6812" title="1wire" src="http://hackadaycom.files.wordpress.com/2008/12/1wire.jpg?w=447&#038;h=207" alt="1wire" width="447" height="207" /></p>
<p><strong>Download:</strong> <a href="http://blog.mahalo.com/hackaday/howto/buspirate.v0d.zip">buspirate.v0d.zip</a></p>
<p>Dallas/Maxim&#8217;s <a href="http://en.wikipedia.org/wiki/1-Wire">1-Wire</a> protocol is the most requested addition to the <a href="http://hackaday.com/2008/11/19/how-to-the-bus-pirate-universal-serial-interface/">Bus Pirate</a>.Â  We finally got some 1-Wire parts, and today we&#8217;ll demonstrate the<a href="http://www.maxim-ic.com/quick_view2.cfm?qv_pk=2795"> DS1822 1-Wire digital thermometer</a>. Grab the <a href="http://datasheets.maxim-ic.com/en/ds/DS1822.pdf">datasheet</a> (PDF) and follow along.</p>
<p>This post is accompanied by release v.0d of the Bus Pirate firmware for hardware version 0. This includes the new 1-Wire protocol library, more configuration options, and other improvements.</p>
<p><span id="more-6706"></span><strong><a href="http://www.maxim-ic.com/quick_view2.cfm?qv_pk=2795">DS1822</a> Economy Digital Thermometer (Digikey #<a href="http://search.digikey.com/scripts/DkSearch/dksus.dll?Detail?name=DS1822%2B-ND">DS1822+-ND</a>, $3.87)</strong> We found a footprint in the 1-wire library for <a href="http://www.cadsoft.de/freeware.htm">Eagle</a> on the <a href="http://www.cadsoft.de/cgi-bin/download.pl?page=/home/cadsoft/html_public/download.htm.en&amp;dir=pub/userfiles/libraries">Cadsoft download page</a>.</p>
<p>The 1-Wire protocol uses a single wire for data transfer, and sometimes power. Data is transferred in <a href="http://en.wikipedia.org/wiki/1-Wire#Example_communication_with_a_device">time-sensitive &#8217;slots&#8217;</a> because there isn&#8217;t a separate clock to delineate bit periods.</p>
<p><img class="alignnone size-full wp-image-6755" title="ds1822cct" src="http://hackadaycom.files.wordpress.com/2008/12/ds1822cct.png?w=452&#038;h=224" alt="ds1822cct" width="452" height="224" /></p>
<table border="0">
<tbody>
<tr>
<td>
<div><strong>Bus Pirate</strong></div>
</td>
<td><strong>DS1822</strong></td>
</tr>
<tr>
<td>
<div><strong>SDA</strong></div>
</td>
<td>DQ</td>
</tr>
<tr>
<td><strong>+5volts</strong></td>
<td>Vdd</td>
</tr>
<tr>
<td>
<div><strong>Ground</strong></div>
</td>
<td>GND</td>
</tr>
</tbody>
</table>
<p>The DS1822 connections are shown in the table. We used the Bus Pirate&#8217;s 5volt supply to power the DS1822, but it also works at 3.3volts. A resistor (R1, ~5K) holds the bus high.</p>
<p>All 1-Wire commands start with a reset procedure, followed by one of five ROM commands.</p>
<table border="0">
<tbody>
<tr>
<td><strong>Command</strong></td>
<td><strong>Description</strong></td>
</tr>
<tr>
<td>0&#215;33</td>
<td>READ ROM. Read single device address.</td>
</tr>
<tr>
<td>0&#215;55</td>
<td>MATCH ROM. Match device address, followed by 64bit address.</td>
</tr>
<tr>
<td>0xCC</td>
<td>SKIP ROM. Address all devices together.</td>
</tr>
<tr>
<td>0xEC</td>
<td>ALARM SEARCH. Search for alarm condition.</td>
</tr>
<tr>
<td>0xF0</td>
<td>SEARCH ROM. Part of address enumeration procedure.</td>
</tr>
</tbody>
</table>
<p>ROM commands are described on page 10 of the datasheet. All ROM commands are available as macros in the Bus Pirate 1-Wire library, see (0) for a menu. ROM command macros <em>include the 1-Wire bus reset procedure</em>.</p>
<p><strong>Single device</strong></p>
<p><strong><img class="alignnone size-full wp-image-6759" title="singli-4501" src="http://hackadaycom.files.wordpress.com/2008/12/singli-4501.jpg?w=450&#038;h=325" alt="singli-4501" width="450" height="325" /><br />
</strong></p>
<p>All 1-Wire devices have a unique 64bit (8 byte) address, and some 1-Wire devices are used exclusively to give electronics a unique tracking number. When a single device is connected to a 1-Wire bus, the READ ROM command will extract its address.</p>
<blockquote><p>1-WIRE&gt;{ 0&#215;33 r:8 <strong>&lt;&#8211;command</strong><br />
xxx 1WIRE BUS RESET OK<br />
xxx 1WIRE WRITE: 0&#215;33 <strong>&lt;&#8211;READ ROM</strong><br />
xxx 1WIRE BULK READ, 0&#215;08 BYTES:<br />
0&#215;22 0&#215;47 0&#215;45 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;29 <strong>&lt;&#8211;ID#</strong><br />
1-WIRE&gt;</p></blockquote>
<p>The command sends a bus reset ({), the READ ROM command (0&#215;33), and reads the 64bit address (r:8, 8 bytes *8bits/byte=64bits).</p>
<p>The first byte (0&#215;22) identifies this as a DS1822 thermometer. The next 6 bytes are unique to this device, and the final byte is a <a href="http://en.wikipedia.org/wiki/Cyclic_redundancy_check">CRC</a> of the previous 7 bytes.</p>
<p>Now we can address the device with the MATCH ROM command and send it further instructions.</p>
<blockquote><p>1-WIRE&gt;{ 0&#215;55 0&#215;22 0&#215;47 0&#215;45 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;29 0&#215;44<br />
xxx 1WIRE BUS RESET OK<br />
xxx 1WIRE WRITE: 0&#215;55<strong>&lt;&#8211;MATCH ROM command</strong><br />
xxx 1WIRE WRITE: 0&#215;22<strong>&lt;&#8211;start address</strong><br />
xxx 1WIRE WRITE: 0&#215;47<br />
xxx 1WIRE WRITE: 0&#215;45<br />
xxx 1WIRE WRITE: 0&#215;22<br />
xxx 1WIRE WRITE: 0&#215;00<br />
xxx 1WIRE WRITE: 0&#215;00<br />
xxx 1WIRE WRITE: 0&#215;00<br />
xxx 1WIRE WRITE: 0&#215;29<br />
xxx 1WIRE WRITE: 0&#215;44 <strong>&lt;&#8211;start conversion</strong><br />
1-WIRE&gt;</p></blockquote>
<p>First, we send the MATCH ROM command (0&#215;55) and the device address (8 bytes).Â  Next is the CONVERT T command (0&#215;44, datasheet page 11) that starts the temperature conversion.</p>
<p>A second command sequence retrieves the temperature reading from the DS1822.</p>
<blockquote><p>1-WIRE&gt;{ 0&#215;55 0&#215;22 0&#215;47 0&#215;45 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;29 0xbe r:9<br />
xxx 1WIRE BUS RESET OK<br />
xxx 1WIRE WRITE: 0&#215;55<br />
xxx 1WIRE WRITE: 0&#215;22<br />
<em>&#8230;long 1-Wire address&#8230;</em><br />
xxx 1WIRE WRITE: 0&#215;29<br />
xxx 1WIRE WRITE: 0xBE <strong>&lt;&#8211;read scratchpad command</strong><br />
xxx 1WIRE BULK READ, 0&#215;09 BYTES:<br />
0&#215;71 0&#215;01 0xFF 0&#215;00 0&#215;7F 0xFF 0&#215;0F 0&#215;10 0xF8<br />
1-WIRE&gt;</p></blockquote>
<p>The READ SCRATCHPAD command (0xBE, datasheet page 11) returns 9 bytes. We only care about the first two bytes, the rest can be decoded according the the table on page 7 of the datasheet. Temperature is calculated according to page 4 of the datasheet: 0&#215;0171 HEX=369 DEC, 369*0.0625=23CÂ  (74F).</p>
<p><strong>Multiple devices</strong></p>
<p><img class="alignnone size-full wp-image-6756" title="multi-450" src="http://hackadaycom.files.wordpress.com/2008/12/multi-450.jpg?w=450&#038;h=340" alt="multi-450" width="450" height="340" /></p>
<p>When multiple 1-Wire devices share a bus it&#8217;s more difficult to determine all the addresses. The fastest way to find attached devices is with the SEARCH ROM command (0xF0) and a binary branching procedure. The Bus Pirate automates this with macro (240).</p>
<blockquote><p>1-WIRE&gt;(240) <strong>&lt;&#8211;macro 240</strong><br />
xxx 1WIRE ROM COMMAND: SEARCH (0xF0)<br />
Found devices at:<br />
MacroÂ Â Â Â  1-WIRE address<br />
1.0&#215;22 0&#215;50 0&#215;28 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;0A <strong>&lt;&#8211;address</strong><br />
*DS1822 Econ Dig Therm <strong>&lt;&#8211;type according to family code</strong><br />
2.0&#215;22 0xD0 0xC7 0&#215;1A 0&#215;00 0&#215;00 0&#215;00 0&#215;01<br />
*DS1822 Econ Dig Therm<br />
3.0&#215;22 0&#215;47 0&#215;45 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;29<br />
*DS1822 Econ Dig Therm<br />
Found 0&#215;03 devices.<br />
The first 10 device IDs are available by MACRO, see (0).<br />
1-WIRE&gt;</p></blockquote>
<p>The SEARCH ROM command shows the devices it found, and the type according to the family code.</p>
<p>We think typing 8 byte 1-Wire addresses is really tedious, so the first 10 device addresses are stored in memory and can be accessed with the macros (1)&#8230;(10). A buffer for up to 50 device addresses can be defined in the 1-Wire library at compile time. Ideally, this data will be stored in a global scratch buffer shared by all modules in a future firmware update.</p>
<blockquote><p>1-WIRE&gt;(0) <strong>&lt;&#8211;show macro list</strong><br />
0.Macro menu<br />
MacroÂ Â Â Â  1-WIRE address <strong>&lt;&#8211;enumerated device addresses</strong><br />
1.0&#215;22 0&#215;50 0&#215;28 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;0A<br />
*DS1822 Econ Dig Therm<br />
2.0&#215;22 0xD0 0xC7 0&#215;1A 0&#215;00 0&#215;00 0&#215;00 0&#215;01<br />
*DS1822 Econ Dig Therm<br />
3.0&#215;22 0&#215;47 0&#215;45 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;29<br />
*DS1822 Econ Dig Therm<br />
1-WIRE ROM COMMAND MACROs:<strong>&lt;&#8211;normal commands</strong><br />
51.READ ROM (0&#215;33) *for single device bus<br />
85.MATCH ROM (0&#215;55) *followed by 64bit address<br />
204.SKIP ROM (0xCC) *followed by command<br />
236.ALARM SEARCH (0xEC)<br />
240.SEARCH ROM (0xF0)<br />
1-WIRE&gt;</p></blockquote>
<p>The macro menu (0) will also include the device addresses stored in the roster. Now we can just address devices by macro, rather than typing the whole 64bit address every time.</p>
<blockquote><p>1-WIRE&gt;(85) (1) 0&#215;44 <strong>&lt;&#8211;start conversion</strong><br />
xxx 1WIRE BUS RESET OK<br />
xxx 1WIRE WRITE ROM COMMAND: MATCH (0&#215;55) *follow with 64bit address<br />
xxx 1WIRE ADDRESS MACRO 1: 0&#215;22 0&#215;50 0&#215;28 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;0A<br />
xxx 1WIRE WRITE: 0&#215;44<br />
1-WIRE&gt;(85) (1) 0xbe r:9 <strong>&lt;&#8211;fetch reading</strong><br />
xxx 1WIRE BUS RESET OK<br />
xxx 1WIRE WRITE ROM COMMAND: MATCH (0&#215;55) *follow with 64bit address<br />
xxx 1WIRE ADDRESS MACRO 1: 0&#215;22 0&#215;50 0&#215;28 0&#215;22 0&#215;00 0&#215;00 0&#215;00 0&#215;0A<br />
xxx 1WIRE WRITE: 0xBE<br />
xxx 1WIRE BULK READ, 0&#215;09 BYTES:<br />
0&#215;81 0&#215;01 0&#215;4B 0&#215;46 0&#215;7F 0xFF 0&#215;0F 0&#215;10 0&#215;71<br />
1-WIRE&gt;</p></blockquote>
<p>(85) is a shortcut for a bus reset and MATCH ROM command. (1) is the device address macro, and 0&#215;44 is the command to begin a temperature conversion. Retrieving the reading involves the same macros, but substitutes the command to read the device (0xBE) and grabs 9 bytes (r:9). The temperature is 0&#215;0181, or 24C next to the PC fan.</p>
<p><strong>Taking it further</strong></p>
<p>We used the Bus Pirate to give a visual demonstration of the 1-Wire protocol, but the real challenge is integrating it into your own design. Maxim provides <a href="http://www.maxim-ic.com/products/ibutton/software/1wire/wirekit.cfm">example code</a>, Microchip has an <a href="http://ww1.microchip.com/downloads/en/AppNotes/01199a.pdf">app note</a> (PDF), and you can check out the <a href="http://www.microchipc.com/sourcecode/#heater">example code</a> we used.</p>
<p><strong>Firmware download:</strong> <a href="http://blog.mahalo.com/hackaday/howto/buspirate.v0d.zip">buspirate.vod.zip</a></p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6706/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6706/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6706/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6706/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6706/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6706/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6706/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6706/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6706/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6706/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6706&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/10/parts-1-wire-temperature-sensor-ds1822/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Ian Lesnet</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/1wire.jpg" medium="image">
			<media:title type="html">1wire</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/ds1822cct.png" medium="image">
			<media:title type="html">ds1822cct</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/singli-4501.jpg" medium="image">
			<media:title type="html">singli-4501</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/multi-450.jpg" medium="image">
			<media:title type="html">multi-450</media:title>
		</media:content>
	</item>
		<item>
		<title>Edge-lit holiday cards</title>
		<link>http://hackaday.com/2008/12/10/edge-lit-holiday-cards/</link>
		<comments>http://hackaday.com/2008/12/10/edge-lit-holiday-cards/#comments</comments>
		<pubDate>Wed, 10 Dec 2008 23:47:26 +0000</pubDate>
		<dc:creator>Eliot Phillips</dc:creator>
		
		<category><![CDATA[misc hacks]]></category>

		<category><![CDATA[acrylic]]></category>

		<category><![CDATA[christmas]]></category>

		<category><![CDATA[edge lighting]]></category>

		<category><![CDATA[edge-lit]]></category>

		<category><![CDATA[etched]]></category>

		<category><![CDATA[greeting card]]></category>

		<category><![CDATA[holiday]]></category>

		<category><![CDATA[led]]></category>

		<category><![CDATA[plastic]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6813</guid>
		<description><![CDATA[
Got 30 minutes for a holiday project and don&#8217;t want to get wrangled into some sort of decoupage disaster? Evil Mad Scientist Laboratories can show you just how easy it is to do edge lighting effects. Pictured above are three holiday cards constructed using scored plastic. You can use many different types of clear plastic [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6814" title="edgelit" src="http://hackadaycom.files.wordpress.com/2008/12/edgelit.jpg?w=450&#038;h=253" alt="edgelit" width="450" height="253" /></p>
<p>Got 30 minutes for a holiday project and don&#8217;t want to get wrangled into some sort of decoupage disaster? Evil Mad Scientist Laboratories can show you just how easy it is to do <a title="Evil Mad Scientist Laboratories - Edge-Lit Holiday Cards" href="http://www.evilmadscientist.com/article.php/edgelitcards">edge lighting effects</a>. Pictured above are three holiday cards constructed using scored plastic. You can use many different types of clear plastic for this, not just acrylic. The lighting is just an LED on a coincell. Black tape is used to prevent light leaking from the edges. The red and green version above is two stacked layers. This looks like something fun to scale up for a larger project or just to kill some time.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6813/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6813/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6813/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6813/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6813/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6813/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6813/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6813/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6813/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6813/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6813&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/10/edge-lit-holiday-cards/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">RobotSkirts</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/edgelit.jpg" medium="image">
			<media:title type="html">edgelit</media:title>
		</media:content>
	</item>
		<item>
		<title>GigaPixel Panorama</title>
		<link>http://hackaday.com/2008/12/10/gigapixel-panorama/</link>
		<comments>http://hackaday.com/2008/12/10/gigapixel-panorama/#comments</comments>
		<pubDate>Wed, 10 Dec 2008 20:42:49 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[digital cameras hacks]]></category>

		<category><![CDATA[news]]></category>

		<category><![CDATA[camera]]></category>

		<category><![CDATA[digital camera]]></category>

		<category><![CDATA[digital photography]]></category>

		<category><![CDATA[panorama]]></category>

		<category><![CDATA[panoramic]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6808</guid>
		<description><![CDATA[
[Ewout] sent us some info on this Automated Gigapixel Panorama Acquisition system.Â  The system automates the process of taking the large amounts of images required to do gigapixel panoramics. You tell it key information, like what lens, and what percent overlap you want and the system will calculate how many images it will take, as [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6809" title="gigapixel" src="http://hackadaycom.files.wordpress.com/2008/12/gigapixel.jpg?w=450&#038;h=390" alt="gigapixel" width="450" height="390" /></p>
<p>[Ewout] sent us some info on this <a href="http://www.ewoutvb.com/4180/index.html">Automated Gigapixel Panorama Acquisition system</a>.Â  The system automates the process of taking the large amounts of images required to do gigapixel panoramics. You tell it key information, like what lens, and what percent overlap you want and the system will calculate how many images it will take, as well as the gigapixel count. The results are quite stunning, no visible seams with fantastic detail.Â  Interestingly, this was created for a class in embedded system design (ECE4180) at Georgia Institute of Technology and so was our post earlier today on <a href="http://hackaday.com/2008/12/10/digitally-assisted-billiards/">Digitally Assisted Billiards</a>. Is Hack a Day part of the class curriculum? It should be.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6808/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6808&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/10/gigapixel-panorama/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/gigapixel.jpg" medium="image">
			<media:title type="html">gigapixel</media:title>
		</media:content>
	</item>
		<item>
		<title>Digitally assisted billiards</title>
		<link>http://hackaday.com/2008/12/10/digitally-assisted-billiards/</link>
		<comments>http://hackaday.com/2008/12/10/digitally-assisted-billiards/#comments</comments>
		<pubDate>Wed, 10 Dec 2008 15:57:24 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[daily]]></category>

		<category><![CDATA[home entertainment hacks]]></category>

		<category><![CDATA[billiards]]></category>

		<category><![CDATA[pool]]></category>

		<category><![CDATA[projector]]></category>

		<category><![CDATA[trajectory]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6800</guid>
		<description><![CDATA[
[Justin] sent in his Digitally Assisted Billiards project. Using a web cam, a computer and a projector, these guys have set up a system that shows you the trajectories of your current shot.Â  It detects the angle of the cue and displays a glowing blue line showing where each ball would go and where the [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6801" title="pool" src="http://hackadaycom.files.wordpress.com/2008/12/pool.jpg?w=450&#038;h=325" alt="pool" width="450" height="325" /></p>
<p>[Justin] sent in his <a href="http://www.prism.gatech.edu/~gtg279x/Digitally_Assisted_Billards/Welcome.html">Digitally Assisted Billiards project</a>. Using a web cam, a computer and a projector, these guys have set up a system that shows you the trajectories of your current shot.Â  It detects the angle of the cue and displays a glowing blue line showing where each ball would go and where the collisions would be. It is a bit slow right now, and made somewhat less accurate by a low resolution web camera. This could be a fantastic teaching tool if it were to get some more polish. The source code is available on the site, so you could try this one out at home.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6800/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6800/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6800/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6800/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6800/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6800/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6800/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6800/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6800/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6800/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6800&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/10/digitally-assisted-billiards/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/pool.jpg" medium="image">
			<media:title type="html">pool</media:title>
		</media:content>
	</item>
		<item>
		<title>Acrylic tumbler lock</title>
		<link>http://hackaday.com/2008/12/09/acrylic-tumbler-lock/</link>
		<comments>http://hackaday.com/2008/12/09/acrylic-tumbler-lock/#comments</comments>
		<pubDate>Wed, 10 Dec 2008 03:28:54 +0000</pubDate>
		<dc:creator>Eliot Phillips</dc:creator>
		
		<category><![CDATA[security hacks]]></category>

		<category><![CDATA[tool hacks]]></category>

		<category><![CDATA[acrylic]]></category>

		<category><![CDATA[lock]]></category>

		<category><![CDATA[lockpick]]></category>

		<category><![CDATA[lockpicking]]></category>

		<category><![CDATA[mike gee]]></category>

		<category><![CDATA[thingiverse]]></category>

		<category><![CDATA[tumbler lock]]></category>

		<category><![CDATA[vimeo]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6743</guid>
		<description><![CDATA[
Sometimes describing how a lock actually works can be the hardest part of teaching someone about lockpicking. [Mike Gee] has designed an acrylic lock that may just be the ticket for these situations. All of the pieces are cut from clear acrylic. As you insert the key, you can see it raise the four pins [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><img class="alignnone size-full wp-image-6744" title="acrylictumbler" src="http://hackadaycom.files.wordpress.com/2008/12/acrylictumbler.jpg?w=450&#038;h=253" alt="acrylictumbler" width="450" height="253" /></p>
<p>Sometimes describing how a lock actually works can be the hardest part of teaching someone about lockpicking. [Mike Gee] has <a title="Bre Pettis | I Make Things" href="http://brepettis.com/blog/2008/12/09/things-mike-gee-lazzzored-a-tumbler-lock/">designed an acrylic lock</a> that may just be the ticket for these situations. All of the pieces are cut from clear acrylic. As you insert the key, you can see it raise the four pins up to the shear line. He says that it will definitely take some tweaking as you assemble it to get it to function smoothly. Embedded below is a video of the lock in use. You can find <a title="Tumbler, key, and case by geezyx - Thingiverse" href="http://www.thingiverse.com/thing:191">plans on Thingiverse</a>.</p>
<p><span id="more-6743"></span></p>
<p><span style='text-align:center; display: block;'>
<object type="application/x-shockwave-flash" width="400" height="300" data="http://www.vimeo.com/moogaloop.swf?clip_id=2475046&amp;server=www.vimeo.com&amp;fullscreen=1&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=01AAEA">
	<param name="quality" value="best" />
	<param name="allowfullscreen" value="true" />
	<param name="scale" value="showAll" />
	<param name="movie" value="http://www.vimeo.com/moogaloop.swf?clip_id=2475046&amp;server=www.vimeo.com&amp;fullscreen=1&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=01AAEA" />
</object>
</span></p>
<p>[Thanks, cnelson]</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6743/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6743/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6743/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6743/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6743/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6743/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6743/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6743/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6743/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6743/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6743&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/09/acrylic-tumbler-lock/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">RobotSkirts</media:title>
		</media:content>

		<media:content url="http://hackadaycom.files.wordpress.com/2008/12/acrylictumbler.jpg" medium="image">
			<media:title type="html">acrylictumbler</media:title>
		</media:content>
	</item>
		<item>
		<title>Multitouch pinball instrument</title>
		<link>http://hackaday.com/2008/12/09/multitouch-pinball-instrument/</link>
		<comments>http://hackaday.com/2008/12/09/multitouch-pinball-instrument/#comments</comments>
		<pubDate>Tue, 09 Dec 2008 21:35:54 +0000</pubDate>
		<dc:creator>Caleb Kraft</dc:creator>
		
		<category><![CDATA[digital audio hacks]]></category>

		<category><![CDATA[peripherals hacks]]></category>

		<category><![CDATA[arduino]]></category>

		<category><![CDATA[midi]]></category>

		<category><![CDATA[multi touch]]></category>

		<category><![CDATA[multitouch]]></category>

		<category><![CDATA[pinball]]></category>

		<guid isPermaLink="false">http://hackaday.com/?p=6739</guid>
		<description><![CDATA[
This is an interesting twist on multi touch input. [s9lucas] is using a simple multitouch system as an instrument that uses solenoids and pinballs to make music.Â  He has taken the basic multitouch tutorial and combined it with an Arduino bell tower. The end result is possibly more fun to watch than it is to [...]]]></description>
			<content:encoded><![CDATA[<div class='snap_preview'><br /><p><span style="text-align:center; display: block;"><a href="http://hackaday.com/2008/12/09/multitouch-pinball-instrument/"><img src="http://img.youtube.com/vi/VpDltKLZSrM/2.jpg" alt="" /></a></span></p>
<p>This is an interesting twist on multi touch input. [s9lucas] is using a simple multitouch system as <a href="http://www.instructables.com/id/Multitouch_Pinball_Instrument/">an instrument that uses solenoids and pinballs to make music</a>.Â  He has taken the <a href="http://www.instructables.com/id/How-to-Make-a-Cheap-Multitouch-Pad/">basic multitouch tutorial</a> and combined it with an <a href="http://www.instructables.com/id/Arduino_Controlled_Bell_TowerCarillon/">Arduino bell tower</a>. The end result is possibly more fun to watch than it is to listen to, but that&#8217;s fine.</p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/hackadaycom.wordpress.com/6739/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/hackadaycom.wordpress.com/6739/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/hackadaycom.wordpress.com/6739/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/hackadaycom.wordpress.com/6739/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/hackadaycom.wordpress.com/6739/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/hackadaycom.wordpress.com/6739/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/hackadaycom.wordpress.com/6739/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/hackadaycom.wordpress.com/6739/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/hackadaycom.wordpress.com/6739/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/hackadaycom.wordpress.com/6739/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=hackaday.com&blog=4779443&post=6739&subd=hackadaycom&ref=&feed=1" /></div>]]></content:encoded>
			<wfw:commentRss>http://hackaday.com/2008/12/09/multitouch-pinball-instrument/feed/</wfw:commentRss>
	
		<media:content url="" medium="image">
			<media:title type="html">Caleb Kraft</media:title>
		</media:content>

		<media:content url="http://img.youtube.com/vi/VpDltKLZSrM/2.jpg" medium="image" />
	</item>
	</channel>
</rss>
