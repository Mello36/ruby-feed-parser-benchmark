<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/podcaster/styles/default.xsl"?>
<?xml-stylesheet type="text/xsl" href="/css/rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:admin="http://webns.net/mvcb/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">

<channel>
<generator>Readspeaker Podcaster</generator>
<title>456 Berea Street, Podcast Edition</title>
<link>http://www.456bereastreet.com/</link>
<description>Roger Johansson is a web professional specialising in web standards, accessibility, and usability.</description>
<dc:language>en</dc:language>
<dc:date>2008-12-12T13:18:04+01:00</dc:date>
<admin:generatorAgent rdf:resource="http://www.movabletype.org/?v=4.21-en"/>

<item>
<title>Swedish National Guidelines for Public Sector Websites in danger?</title>
<link>http://www.456bereastreet.com/archive/200812/swedish_national_guidelines_for_public_sector_websites_in_danger/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Accessibility</category>

<category>Usability</category>

<category>Web Standards</category>

<guid>http://www.456bereastreet.com/archive/200812/swedish_national_guidelines_for_public_sector_websites_in_danger/</guid>
<description>
<![CDATA[<p class="preamble">Just over two years ago <a href="http://www.verva.se/">Verva</a> (Swedish Administrative Development Agency) published the current version of the <a href="http://verva.se/english/public-sector-development/listening-to-citizens/guidelines-public-sector-websites/">Swedish National Guidelines for Public Sector Websites</a>.</p>

<p>As I mentioned in <a href="http://www.456bereastreet.com/archive/200611/guidelines_for_swedish_public_sector_websites_updated/">Guidelines for Swedish public sector websites updated</a>, I took part in creating those guidelines. Because of that I may be a bit biased, but I think they are still quite relevant. Nothing is perfect, of course – the guidelines are more than two years old so there are certainly areas that could be improved and updated.</p>

<p>Having this set of guidelines to refer people to has definitely helped make plenty of Swedish public sector websites more accessible than they would have been if the guidelines had not existed. But now the future of these guidelines is uncertain.</p>

<p>It was made public earlier this year that Verva will be closed down by the end of 2008, and that other government agencies would take over parts of Verva’s activities. Unfortunately there is still no information available on what will happen to the Swedish National Guidelines for Public Sector Websites.</p>

<p>According to <a href="http://www.idrelay.com/showmail.asp?q=1424A-429-24B53-D3" hreflang="sv">a newsletter (in Swedish)</a> that was published on 8 December, Verva's website, including the guidelines, will be taken offline on 31 December.</p>

<p>I think it is very unfortunate that there is no clear information available on what will happen to the guidelines after that. Without a national agency behind the guidelines there is a substantial risk that they will be regarded as less relevant and ignored to an even greater extent. That, in turn, is likely to make the accessibility and usability of Swedish public sector websites suffer.</p>

<p>If you happen to have any insight into or influence on this matter, please urge whoever is in charge to appoint an authority that will host and continue to develop the Swedish National Guidelines for Public Sector Websites after 31 December 2008.</p>

<p>Until that happens – if it does – the content of the guidelines are available on <a href="http://www.eutveckling.se/">eutveckling.se</a>. The site is a personal initiative by Peter Krantz, author of the Fangs Firefox extension and one of the guideline authors, who also intends to keep the guidelines up-to-date and encourages reader participation.</p>

<p>Excellent initiative, Peter!</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/3084707799.mp3" type="audio/mpeg">MP3 (0.8 MB)</a>
]]>
</description>
<dc:date>2008-12-12T13:18:04+01:00</dc:date>
<enclosure type="audio/mpeg" length="848801" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/3084707799.mp3"/>
</item>

<item>
<title>WCAG 2.0 finally a W3C Recommendation</title>
<link>http://www.456bereastreet.com/archive/200812/wcag_20_finally_a_w3c_recommendation/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Accessibility</category>

<category>Web Standards</category>

<guid>http://www.456bereastreet.com/archive/200812/wcag_20_finally_a_w3c_recommendation/</guid>
<description>
<![CDATA[<p class="preamble">Today the W3C announced that <a href="http://www.w3.org/TR/WCAG20/">Web Content Accessibility Guidelines 2.0</a> (WCAG) is now a W3C Recommendation. The announcement is available in <a href="http://www.w3.org/2008/12/wcag20-pressrelease.html">W3C Web Standard Defines Accessibility for Next Generation Web</a>.</p>

<p>It has taken a long, long time for WCAG 2.0 to reach this stage, but now the wait is over. If you’re still procrastinating like I was, stop it and start reading up on <a href="http://www.456bereastreet.com/archive/200811/going_from_wcag_10_to_wcag_20/">Going from WCAG 1.0 to WCAG 2.0</a>.</p>

<p>Lately I’ve been diving into WCAG 2.0 to learn what’s new and different from WCAG 1.0. I like that there are many examples of how to meet the guidelines as well as how <strong>not to</strong> meet them. It’s good that the purpose of each guideline is explained and that there are examples of how not meeting a particular guideline can cause problems for people with disabilities.</p>

<p>WCAG 2.0 can still be improved, but I think it is a major step forward from WCAG 1.0.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1622651270.mp3" type="audio/mpeg">MP3 (0.4 MB)</a>
]]>
</description>
<dc:date>2008-12-11T20:04:15+01:00</dc:date>
<enclosure type="audio/mpeg" length="424818" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1622651270.mp3"/>
</item>

<item>
<title>Version control with Subversion on Mac OS X</title>
<link>http://www.456bereastreet.com/archive/200812/version_control_with_subversion_on_mac_os_x/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Coding</category>

<category>Productivity</category>

<guid>http://www.456bereastreet.com/archive/200812/version_control_with_subversion_on_mac_os_x/</guid>
<description>
<![CDATA[<p class="preamble">We all know that we should back up our important data frequently. Many of us do. But backups don’t give you the fine-grained control of changes to source code that a <a href="http://en.wikipedia.org/wiki/Version_control">version control</a> system does.</p>

<p>For a long time (too long) I didn’t use version control at all. Well, unless you count manually duplicating files, which is far from a good solution. But I always felt that I really, really should be using version control. The problem was that I never got around to setting anything up since I thought I had to use a Subversion server, and my attempts at getting one up and running were unsuccessful.</p>

<p>It turns out that getting started with version control is much easier than I thought, at least as long as you don't need to be able to access your repositories remotely. Accessing repositories through your local file system eliminates the requirement for a separate version control server and lowers the barrier significantly. Too bad I didn’t know about this option earlier.</p>

<p>There are several version control systems available, but the one I use is the open source <a href="http://subversion.tigris.org/">Subversion</a>.</p>

<h2>Working remotely</h2>

<p>To enable everybody on your team to use the same repositories, which is kind of the point if you’re using version control in a team, you need to set up a server. You will probably also want to configure it to let people access it through the <code>svn</code> or <code>http</code> protocols.</p>

<p>How to set up a Subversion server and configure it properly is beyond the scope of this post (and beyond my knowledge), so please read <a href="http://svnbook.red-bean.com/nightly/en/svn.serverconfig.html">Chapter 6. Server Configuration</a> of the Subversion Book for details on that if you are interested.</p>

<h2>Working locally</h2>

<p>Sometimes you don’t need to be able to access your repositories remotely. Maybe you’re the only person working on a project or everybody on your team can access the repository server via <code>file://</code>. If that's the case you can use file system repositories instead, which is easier for those of us who aren’t skilled server admins.</p>

<p>At my dayjob we have a Subversion server that allows us to connect remotely, but when I work on my personal projects, like this site, I use local repositories. Creating a local repository is very simple if you use a client that does it for you, such as Cornerstone and Versions.</p>

<h2>Choosing a Subversion client</h2>

<p>If you’re comfortable using command line tools you can either build Subversion yourself from the source code or download a binary package. There are various options available on the <a href="http://subversion.tigris.org/getting.html">Getting Subversion</a> page on the Subversion site. Another option is to download one of <a href="http://homepage.mac.com/martinott/">Martin Ott’s Subversion packages</a>.</p>

<p>Some people prefer working in a Terminal window, but I personally like using something that has a GUI, at least for version control. I feel that it gives me a much better overview.</p>

<p>The number of graphical Subversion clients to choose from used to be quite limited for us Mac OS X users, but over the last year or two a number of new options have been made available. These days there are many ways of communicating with a Subversion repository without using the command line.</p>

<p>Here are the standalone Subversion clients that I have tested:</p>

<ul>
	<li><a href="http://www.zennaware.com/cornerstone/">Cornerstone</a></li>
	<li><a href="http://www.lachoseinteractive.net/en/community/subversion/svnx/features/">svnX</a></li>
	<li><a href="http://www.versionsapp.com/">Versions</a></li>
	<li><a href="http://zigversion.com/">ZigVersion</a></li>
</ul>

<p>There are several code editors that have integrated Subversion support. Some of them are:</p>

<ul>
	<li><a href="http://macromates.com/">TextMate</a></li>
	<li><a href="http://www.panic.com/coda/">Coda</a></li>
	<li><a href="http://www.barebones.com/products/bbedit/">BBEdit</a></li>
</ul>

<p>Some of these applications use the command line Subversion client that is installed on your Mac, while others bundle Subversion so you never have to think about it.</p>

<p>I’m not going to review each application here. They all have their pros and cons, but my current favourite is Cornerstone. Try them out yourself and use what works best for you. There are trial versions of all these applications (except for svnX which is free) so you can try before you buy. If you don’t have the budget for a Subversion client right now, svnX does the job. Or you could use the integrated support in your code editor if you use TextMate, BBEdit, or Coda.</p>

<h2>Get started now</h2>

<p>In the end it is much more important that you do use some kind of version control than which client you use. In case you’re still feeling that all this version control stuff sounds difficult, perhaps reading <a href="http://betterexplained.com/articles/a-visual-guide-to-version-control/">A Visual Guide to Version Control</a> will make things clearer.</p>

<p>And finally, remember that even though using version control will help you recover from mistakes you make, you do need to remember to make backups of your Subversion repository.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1009347283.mp3" type="audio/mpeg">MP3 (1.6 MB)</a>
]]>
</description>
<dc:date>2008-12-10T20:25:09+01:00</dc:date>
<enclosure type="audio/mpeg" length="1725451" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1009347283.mp3"/>
</item>

<item>
<title>The id attribute’s value must be unique</title>
<link>http://www.456bereastreet.com/archive/200812/the_id_attributes_value_must_be_unique/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>(X)HTML</category>

<category>Quick Tips</category>

<guid>http://www.456bereastreet.com/archive/200812/the_id_attributes_value_must_be_unique/</guid>
<description>
<![CDATA[<p>The <a href="http://www.w3.org/TR/html4/struct/global.html#adef-id"><code>id</code> attribute</a> is used to give an HTML element a unique name. That name has several uses:</p>

<ul>
	<li>In <a href="http://www.w3.org/TR/CSS21/selector.html#id-selectors">ID selectors</a> in CSS</li>
	<li>Referencing the element with JavaScript through the <a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-getElBId"><code>getElementById</code></a> DOM method</li>
	<li>Making the element an anchor which can be linked to with a <a href="http://www.w3.org/TR/html4/intro/intro.html#fragment-uri">fragment identifier</a></li>
	<li>Associating a <code>label</code> element with a form control via the <a href="http://www.w3.org/TR/html4/interact/forms.html#adef-for">for attribute</a></li>
	<li>Specifying which header cell(s) that provide header information for a data cell via the <a href="http://www.w3.org/TR/html4/struct/tables.html#adef-headers">headers attribute</a></li>
</ul>

<p>The value of each <code>id</code> attribute <strong>must be unique</strong> in a document. An easy way to check that your HTML document does not contain multiple occurrences of the same <code>id</code> value is to run it through <a href="http://validator.w3.org/">W3C’s HTML Validator</a>.</p>

<p>This post is a Quick Tip. Background info is available in <a href="http://www.456bereastreet.com/archive/200812/quick_tips_for_web_developers_and_web_designers/">Quick Tips for web developers and web designers</a>.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1021806576.mp3" type="audio/mpeg">MP3 (0.3 MB)</a>
]]>
</description>
<dc:date>2008-12-08T20:45:02+01:00</dc:date>
<enclosure type="audio/mpeg" length="366740" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1021806576.mp3"/>
</item>

<item>
<title>Make Safari open targeted links in new tabs instead of new windows</title>
<link>http://www.456bereastreet.com/archive/200812/make_safari_open_targeted_links_in_new_tabs_instead_of_new_windows/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Apple</category>

<category>Browsers</category>

<category>Usability</category>

<guid>http://www.456bereastreet.com/archive/200812/make_safari_open_targeted_links_in_new_tabs_instead_of_new_windows/</guid>
<description>
<![CDATA[<p class="preamble">One of the things I find most annoying when browsing the web is when a link opens a new window. It completely disrupts my workflow when a new window pops up, especially when it does so without warning.</p>

<p>If you’re using Firefox this isn’t such a big problem anymore since it will open targeted links in a new tab instead, which is much more manageable and less intrusive.</p>

<p>For Safari, however, there is no such setting to be found when you look through its preferences window. But the setting does exist (at least in the Mac OS X version), though you have to use Terminal.app to enable it:</p>

<ol>
	<li>Quit Safari</li>
	<li>Open Terminal.app</li>
	<li>Enter <code>defaults write com.apple.Safari TargetedClicksCreateTabs -bool true</code> and press enter</li>
	<li>Open Safari</li>
	<li>Notice that links that used to open in a new window will now open in a new tab</li>
</ol>

<p>Much better.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/3378912724.mp3" type="audio/mpeg">MP3 (0.3 MB)</a>
]]>
</description>
<dc:date>2008-12-04T20:46:21+01:00</dc:date>
<enclosure type="audio/mpeg" length="361968" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/3378912724.mp3"/>
</item>

<item>
<title>Quick Tips for web developers and web designers</title>
<link>http://www.456bereastreet.com/archive/200812/quick_tips_for_web_developers_and_web_designers/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Accessibility</category>

<category>Quick Tips</category>

<category>Usability</category>

<category>Web Standards</category>

<guid>http://www.456bereastreet.com/archive/200812/quick_tips_for_web_developers_and_web_designers/</guid>
<description>
<![CDATA[<p class="preamble">I spend a fair amount of time doing quality assurance of websites. This includes reviewing code (HTML, CSS, JavaScript), reporting accessibility and usability issues, giving tips and advice, and so on.</p>

<p>In these reviews there are some things that keep coming up. A lot of them are pretty simple and basic things if you ask me. However, there are many people who make the same mistakes, so maybe those things aren’t that simple after all. Or maybe the problem is that they aren’t widely known.</p>

<p>In the hope that it will help some people out I am going to start a new category of posts here called “Quick Tips”. Each Quick Tip will focus on one of the issues that I come across while doing QA work, and will probably be anything from a sentence to a few paragraphs in length.</p>

<p>This is not meant to ridicule the mistakes or the people who make them. My sincere intention is to help people avoid making these mistakes in the first place by attempting to spread the knowledge.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1401309368.mp3" type="audio/mpeg">MP3 (0.4 MB)</a>
]]>
</description>
<dc:date>2008-12-02T20:28:08+01:00</dc:date>
<enclosure type="audio/mpeg" length="387741" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/1401309368.mp3"/>
</item>

<item>
<title>Making Google Maps more accessible</title>
<link>http://www.456bereastreet.com/archive/200812/making_google_maps_more_accessible/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Accessibility</category>

<category>JavaScript</category>

<guid>http://www.456bereastreet.com/archive/200812/making_google_maps_more_accessible/</guid>
<description>
<![CDATA[<p class="preamble">It has become very popular to use the <a href="http://code.google.com/apis/maps/">Google Maps API</a> to add maps to websites. While the maps work fine for most users, unfortunately Google Maps does not by default work without JavaScript – when there is no JavaScript support, you don’t get a map.</p>

<p>Fortunately it is quite easy (but not very common) to provide a fallback for users who do not have JavaScript enabled in their browser by using the <a href="http://code.google.com/apis/maps/documentation/staticmaps/">Google Static Maps API</a>.</p>

<p>The Google Static Maps API lets you embed a map as a plain image in various formats. The developers guide explains the many options you have when it comes to configuring the static maps.</p>

<p>So next time you use the Google Maps API to put a map on a website, take a couple of minutes to add a static fallback for users without JavaScript.</p>

<p>While we’re on the topic of making Google Maps work for more people, I recommend reading Patrick H. Lauke’s article on creating <a href="http://dev.opera.com/articles/view/keyboard-accessible-google-maps/">Keyboard-accessible Google Maps</a>. Making Google Maps usable without a mouse requires a bit of hacking, but the end result is well worth it.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/2176768281.mp3" type="audio/mpeg">MP3 (0.4 MB)</a>
]]>
</description>
<dc:date>2008-12-01T17:12:25+01:00</dc:date>
<enclosure type="audio/mpeg" length="426237" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/2176768281.mp3"/>
</item>

<item>
<title>Make HTML messages readable in Apple Mail</title>
<link>http://www.456bereastreet.com/archive/200811/make_html_messages_readable_in_apple_mail/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Accessibility</category>

<category>Apple</category>

<category>Usability</category>

<guid>http://www.456bereastreet.com/archive/200811/make_html_messages_readable_in_apple_mail/</guid>
<description>
<![CDATA[<p class="preamble">Long time readers may have noticed that I dislike receiving email in HTML format. It’s not primarily because HTML email uses HTML instead of plain text that I dislike it though.</p>

<p>No, the main reason is less ideological than that. I dislike HTML email simply because it is often very hard for me to read, since for some reason many HTML-formatted emails use extremely small font sizes.</p>

<p>Luckily there are workarounds. If you use Apple Mail like I do I know of two things you can do that will make HTML messages more readable.</p>

<h2>Force Apple Mail to display the plain text alternative if there is one</h2>

<p>I’ve been using this for years and can’t understand why it isn’t available in Mail’s GUI. Here’s what to do:</p>

<ol>
	<li>Quit Mail.app</li>
	<li>Open Terminal.app</li>
	<li>Enter <code>defaults write com.apple.mail PreferPlainText -bool TRUE</code> and press enter (toggle it back by changing <code>TRUE</code> to <code>FALSE</code>)</li>
	<li>Open Mail.app</li>
	<li>View an HTML message and marvel at the readable plain text</li>
</ol>

<p>The catch is that this only works for messages that actually contain a plain text alternative, which far from all HTML email does.</p>

<h2>Specify the minimum font size Apple Mail uses for HTML messages</h2>

<p>As a fallback for the messages that do not contain a plain text alternative it is useful to make sure that the text at least has a readable size:</p>

<ol>
	<li>Quit Mail.app</li>
	<li>Open Terminal.app</li>
	<li>Enter <code>defaults write com.apple.mail MinimumHTMLFontSize 13</code> in the Terminal window and press enter</li>
	<li>Open Mail.app</li>
	<li>View an HTML message and marvel at the readable font size</li>
</ol>

<p>You can change the font size to whatever suits your eyes.</p>

<p>Apply both of these and you should be able to read most of the HTML email that you receive.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/611434523.mp3" type="audio/mpeg">MP3 (0.7 MB)</a>
]]>
</description>
<dc:date>2008-11-27T19:34:42+01:00</dc:date>
<enclosure type="audio/mpeg" length="752402" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/611434523.mp3"/>
</item>

<item>
<title>TextMate productivity tips</title>
<link>http://www.456bereastreet.com/archive/200811/textmate_productivity_tips/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Coding</category>

<category>Productivity</category>

<guid>http://www.456bereastreet.com/archive/200811/textmate_productivity_tips/</guid>
<description>
<![CDATA[<p class="preamble">If you saw my post about the <a href="http://www.456bereastreet.com/archive/200803/domassistant_bundle_for_textmate/">DOMAssistant bundle for TextMate</a>, you will already know that my favourite coding tool at the moment is <a href="http://macromates.com/">TextMate</a>. If you missed that post, well, now you know.</p>

<p>For anyone who is new to TextMate or considering trying it out, I thought I’d share a few tips. These tips are nothing revolutionary for many Textmate users, but nevertheless they make my workdays a little easier. Several of these tips may not be all that obvious, so I hope you will find something new here.</p>

<h2>1. Insert close tag</h2>

<p>When editing an HTML document, press <kbd>Opt + Cmd + .</kbd> to make TextMate automatically insert a closing tag for the element the cursor is inside.</p>

<h2>2. Move selection</h2>

<p>To move text that you have selected, hold down <kbd>Ctrl + Cmd</kbd> and use the arrow keys to move the text up and down (or left and right). If you’re moving text up or down, make sure to select the entire last line or the line break will get left behind.</p>

<h2>3. Tab triggered snippets</h2>

<p>Type a few characters and hit the <kbd>tab</kbd> key. Bam! TextMate inserts anything from a simple tag or method to an entire document. And if you’re not satisfied with the snippets that ship with TextMate you can add your own. Do you find yourself typing a similar pattern several times daily? Make a snippet out of it.</p>

<h2>4. Code completion</h2>

<p>Instead of typing every letter of every tag, attribute, method or variable, just type the first few letters and hit the <kbd>Esc</kbd> key. TextMate will suggest a word for you. Not happy with the suggestion? Press <kbd>Esc</kbd> again to get a new suggestion.</p>

<h2>5. Go to file</h2>

<p>While working on a project I often have many files open in TextMate. Moving between them by choosing a tab can be awkward when there are more open documents than fit in the tab bar. That’s when <kbd>Cmd + T</kbd> is very handy. It opens the <kbd>Navigation - Go To File...</kbd> dialog box, where you can either choose which file to work on or type a few letters that are part of the name of the file you are looking for.</p>

<h2>6. Wrap selection in open/close tag</h2>

<p>When you want to wrap some text in an HTML element, select the text and hit <kbd>Ctrl + Shift + W</kbd>. TextMate will wrap the selection in a <code>p</code> element. The element name in the opening tag is selected, so if you need a different element, just type it in and TextMate will change the closing tag as well.</p>

<p>Want to wrap multiple lines in separate elements, for instance to create list items? Select the lines and press <kbd>Ctrl + Shift + Cmd + W</kbd> and TextMate wraps each line in a list element. Again, if you want a different element just type it and the <code>&lt;li&gt;</code> and <code>&lt;/li&gt;</code> tags will be replaced.</p>

<h2>7. Move through text efficiently</h2>

<p>In TextMate and most other Mac applications, the modifier keys change how the arrow keys work when moving through text. Holding down the <kbd>Cmd</kbd> key skips to the beginning or end of a line, and holding down the <kbd>Opt</kbd> key will skip to the next “word”.</p>

<p>TextMate extends this by letting you use the <kbd>Ctrl</kbd> key to skip to the next word <strong>or word separator</strong>. That comes in very handy when you want to select part of a variable or method, since TextMate treats dashes (-), underscores (_) and case changes (like in CamelCase) as word separators.</p>

<h2>8. Wrap Word/Selection as Link</h2>

<p>When you need to link a piece of text, copy the URL, select the text you want to link, and press <kbd>Ctrl + Shift + L</kbd>. TextMate will wrap the selection (or the next word if there is no selection) in a link, using whatever is in the clipboard for the value of the <code>href</code> attribute.</p>

<h2>9. Delete whitespace, and <strong>only</strong> whitespace</h2>

<p>When editing files I often find myself deleting whitespace between the opening and closing tags of elements. Holding the <kbd>option</kbd> while pressing delete or backspace will remove all whitespace between the cursor and the next “word”. The catch is that TextMate will also remove the end or beginning of HTML tags this way, which is incredibly annoying. But using <kbd>Ctrl + Opt + Delete</kbd> will delete all whitespace from the cursor until the next HTML tag without touching the tag.</p>

<h2>10. Create a project by dragging files onto TextMate</h2>

<p>When you want to work with several files that are related in some way it’s very handy to have them in a TextMate project. The quickest way to create a new project containing the files you need is to select the files in the Finder and drag them onto the TextMate icon in the dock. Remember to save the project file if you want to reopen it later.</p>

<h2>11. Indent and outdent text quickly</h2>

<p>Select the lines you want to indent or outdent, then press <kbd>Opt + Tab</kbd> to indent them or <kbd>Shift + Opt + Tab</kbd> to outdent them.</p>

<h2>12. Macros</h2>

<p>TextMate lets you create macros that combine multiple commands, which can be very useful. One macro that I use a lot when writing posts for this blog will turn a selected block of code into an ordered list with code elements and classes that match the indentation level.</p>

<h2>Just scratching the surface</h2>

<p>Those are just a few of the TextMate tricks I use every day. There are many, many more, and I’m sure most TextMate users would pick different favourites.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/2942565596.mp3" type="audio/mpeg">MP3 (2.0 MB)</a>
]]>
</description>
<dc:date>2008-11-25T19:47:27+01:00</dc:date>
<enclosure type="audio/mpeg" length="2081785" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/2942565596.mp3"/>
</item>

<item>
<title>Dissecting the Web with Opera’s MAMA</title>
<link>http://www.456bereastreet.com/archive/200811/dissecting_the_web_with_operas_mama/</link>
<dc:creator>Roger Johansson</dc:creator>

<category>Web Standards</category>

<guid>http://www.456bereastreet.com/archive/200811/dissecting_the_web_with_operas_mama/</guid>
<description>
<![CDATA[<p class="preamble">The people at Opera have created a tool called <strong>MAMA</strong>. MAMA is short for ”Metadata Analysis and Mining Application” and is used to gather a huge amount of data about the HTML, CSS, and JavaScript used on the Web.</p>

<p>Detailed information about MAMA’s findings is available in a series of (long) articles published on Opera Developer Community. I suggest you start by reading the introductory document titled, well, <a href="http://dev.opera.com/articles/view/mama/">MAMA</a>.</p>

<p>I doubt it will surprise anyone that the quality of the HTML used on the Web is – in general – very poor. For instance only 4.13% of the examined 3.5 million URLs passed validation.</p>
<br/><a href="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/3815213149.mp3" type="audio/mpeg">MP3 (0.3 MB)</a>
]]>
</description>
<dc:date>2008-11-24T19:49:03+01:00</dc:date>
<enclosure type="audio/mpeg" length="280689" url="http://feeds.readspeaker.com/app/podcaster/usblogs/audio/30/3815213149.mp3"/>
</item>

<docs>http://blogs.law.harvard.edu/tech/rss</docs>
</channel>
</rss>
