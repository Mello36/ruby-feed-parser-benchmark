<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="http://feeds.feedburner.com/~d/styles/rss2full.xsl" type="text/xsl" media="screen"?><?xml-stylesheet href="http://feeds.feedburner.com/~d/styles/itemcontent.css" type="text/css" media="screen"?><rss xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">
  <channel>
    <title>Scott Hanselman's Computer Zen</title>
    <link>http://www.hanselman.com/blog/</link>
    <description>Scott Hanselman's Thoughts on Programming, Technology, Fatherhood, and Life</description>
    <image>
      <url>http://www.hanselman.com/blog/images/zenicon.jpg</url>
      <title>Scott Hanselman's Computer Zen</title>
      <link>http://www.hanselman.com/blog/</link>
    </image>
    <copyright>admin</copyright>
    <lastBuildDate>Wed, 12 Nov 2008 08:45:16 GMT</lastBuildDate>
    <generator>newtelligence dasBlog 2.1.7238.742</generator>
    <managingEditor>scott@hanselman.com</managingEditor>
    <webMaster>scott@hanselman.com</webMaster>
    <creativeCommons:license>http://creativecommons.org/licenses/by-nc-sa/2.0/</creativeCommons:license><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" href="http://feeds.feedburner.com/ScottHanselman" type="application/rss+xml" /><feedburner:emailServiceId>133572</feedburner:emailServiceId><feedburner:feedburnerHostname>http://www.feedburner.com</feedburner:feedburnerHostname><feedburner:browserFriendly>This is an XML content feed. It is intended to be viewed in a newsreader or syndicated to another site, subject to copyright and fair use.</feedburner:browserFriendly><item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=77de80cb-8413-4aa0-8233-785575268192</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=77de80cb-8413-4aa0-8233-785575268192</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=77de80cb-8413-4aa0-8233-785575268192</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=77de80cb-8413-4aa0-8233-785575268192</wfw:commentRss>
      <slash:comments>16</slash:comments>
      <title>Fixed: "Windows Process Activation Service (WAS) is stopping because it encountered an error."</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=77de80cb-8413-4aa0-8233-785575268192</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/450473858/FixedWindowsProcessActivationServiceWASIsStoppingBecauseItEncounteredAnError.aspx</link>
      <pubDate>Wed, 12 Nov 2008 08:45:16 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;I'm not yet clear what I did, but I'm blogging it so it can be found if someone else has this issue. &lt;/p&gt;  &lt;p&gt;For whatever reason, last week both of my Vista 64-bit machines suddenly stopped being able to start IIS (Internet Information Server). The service just wouldn't start. I started getting this error instead &amp;quot;Cannot start service W3SVC on Computer '.'&amp;quot; which wasn't too helpful.&lt;/p&gt;  &lt;p&gt;&lt;img style="border-bottom: 0px; border-left: 0px; margin: 0px 0px 5px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/FixedWindowsProcessActivationServiceWAS_5B4/image_3.png" width="350" height="169" /&gt; &lt;/p&gt;  &lt;p&gt;A visit to the System Event Log via the Event Viewer in Computer Management told me these four errors:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;&amp;quot;The World Wide Web Publishing Service service depends on the Windows Process Activation Service service which failed to start because of the following error: The system cannot find the file specified.&amp;quot;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;and&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;&amp;quot;The Windows Process Activation Service service terminated with the following error:        &lt;br /&gt;The system cannot find the file specified.&amp;quot;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;and &lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;&amp;quot;Windows Process Activation Service (WAS) is stopping because it encountered an error. The data field contains the error number.&amp;quot;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;and&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;strong&gt;&amp;quot;The directory specified for the temporary application pool config files is either missing or is not accessible by the Windows Process Activation Service. Please specify an existing directory and/or ensure that it has proper access flags. The data field contains the error number.&amp;quot;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px 10px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" align="right" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/FixedWindowsProcessActivationServiceWAS_5B4/image_6.png" width="420" height="472" /&gt;Unfortunately there's little information to go on in any of these error messages. However, it's clear (as mud) from the last error that there's a directory missing or not accessible. I'll add &amp;quot;anymore&amp;quot; to that because it &lt;em&gt;worked before.&lt;/em&gt; That means that something changed.&lt;/p&gt;  &lt;p&gt;If IIS won't start because Windows Process Activation Service won't start, then I need to get WAS started up first. However, I don't know what directory it doesn't have access to. &lt;/p&gt;  &lt;p&gt;I can see from the Services application that WAS isn't its own executable, but rather lives inside of an instance of svchost.exe, where a lot of services live. &lt;/p&gt;  &lt;p&gt;So I'll fire up Process Monitor and set the filters (filters are VERY important if you want to avoid being overwhelmed quickly in procmon) to show only svchost.exe processes.&lt;/p&gt;  &lt;p&gt;Even still, there's a lot of svchost.exe processes out there and they will quickly fill the monitor up. I'll need to setup some strategic (read: guessed) highlighting as well.&lt;/p&gt;  &lt;p&gt;The hotkey to stop capturing in procmon.exe is Ctrl-E. Basically I'll clear the screen, hit Ctrl-E to capture, try to start WAS (pronounced WAAZ), watch it fail, the stop capture with Ctrl-E.&lt;/p&gt;  &lt;p&gt;Based on the vague message about application pools temporary files and a directory I'll make a guess and configure highlighting to find paths that contain &amp;quot;temp,&amp;quot; &amp;quot;log,&amp;quot; &amp;quot;config&amp;quot; or &amp;quot;app&amp;quot; in Process Monitor as seen in the screenshot below.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/FixedWindowsProcessActivationServiceWAS_5B4/image_8.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; margin: 0px 0px 5px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/FixedWindowsProcessActivationServiceWAS_5B4/image_thumb_2.png" width="487" height="307" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;After I run the capture, I scroll around looking for suspicious stuff. One of the nice things about Process Monitor is that you can EXCLUDE things in a given capture &lt;em&gt;after that fact. &lt;/em&gt;For example, I saw a pile of Audio and Media related stuff that was visually confusing and cluttering the point, so I excluded it. &lt;/p&gt;  &lt;p&gt;The result is here:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/FixedWindowsProcessActivationServiceWAS_5B4/image_10.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; margin: 0px 0px 5px; display: inline; border-top: 0px; border-right: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/FixedWindowsProcessActivationServiceWAS_5B4/image_thumb_3.png" width="450" height="342" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;It looks like there SHOULD be a folder call c:\inetpub\temp\apppools and on my Vista 64 machines, in the last two weeks to a month, it just disappeared. No idea why. I just noticed recently when I tried to move from a local web development service to IIS itself.&lt;/p&gt;  &lt;p&gt;I created the folder, started WAS, then IIS and I was back up and running.&lt;/p&gt;  &lt;p&gt;I'll pass the feedback on to the WAS team about the obscure error messages, but I thought I'd share this little ten minute debugging session to point out a few things that I think are important and possibly helpful, Dear Reader:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Know What Your Processes Are Doing (or at least, know how to find out)&lt;/strong&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Knowing how to look INSIDE the Windows &amp;quot;Black Box&amp;quot; using tools like ProcMon makes you realize that no OS is a Black Box at all. It's very empowering to know that you CAN see inside.&lt;/li&gt;      &lt;li&gt;&lt;strong&gt;TASK: &lt;/strong&gt;Learn Process Monitor and Process Explorer.&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;strong&gt;Enable Your Intuition&lt;/strong&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;Debugging is 95% tools and 5% intuition. Know what tools can get you that next bit of information you need to take the next step in your analysis.&lt;/li&gt;      &lt;li&gt;If you feel you've hit a wall in your analysis, knock that wall down. Your process is doing IO to a file/registry/device/network/etc. Watch it. Look for failures.&lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;My next mission is to find out WHY and HOW this directory disappeared on both my machines. What did I install or run recently? Enjoy!c&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=17dHgX"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=17dHgX" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ofAFN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ofAFN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=QBEAn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=QBEAn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=6DuxN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=6DuxN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=rOvqn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=rOvqn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=XZKBn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=XZKBn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=LLGXN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=LLGXN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/450473858" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=77de80cb-8413-4aa0-8233-785575268192</comments>
      <category>IIS</category>
      <category>Tools</category>
    <feedburner:origLink>http://www.hanselman.com/blog/FixedWindowsProcessActivationServiceWASIsStoppingBecauseItEncounteredAnError.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=674b0c09-2896-465f-a75a-52bbf0a9d781</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=674b0c09-2896-465f-a75a-52bbf0a9d781</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=674b0c09-2896-465f-a75a-52bbf0a9d781</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=674b0c09-2896-465f-a75a-52bbf0a9d781</wfw:commentRss>
      <slash:comments>22</slash:comments>
      <title>Viewing a LOT of Images Effectively (plus 700 Obama Newspaper Covers in Silverlight Deep Zoom )</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=674b0c09-2896-465f-a75a-52bbf0a9d781</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/445959788/ViewingALOTOfImagesEffectivelyPlus700ObamaNewspaperCoversInSilverlightDeepZoom.aspx</link>
      <pubDate>Fri, 07 Nov 2008 22:40:01 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;&lt;script type="text/javascript"&gt;
digg_url = 'http://digg.com/politics/730_Obama_Newspapers_from_66_Countries_DeepZoom_Collection';
&lt;/script&gt;&lt;script src="http://digg.com/tools/diggthis.js" type="text/javascript"&gt;&lt;/script&gt;I don't talk politics as a rule on this blog. However, regardless of your political affiliation, the last week has generated a lot of news. When I saw these &lt;a href="http://www.newseum.org/todaysfrontpages/default_archive.asp?fpArchive=110508"&gt;730 Newspaper images from 66 countries at the &lt;strong&gt;Newseum&lt;/strong&gt;&lt;/a&gt;, &lt;a href="http://blogs.vertigo.com/personal/scott/Blog/default.aspx"&gt;Scott Stanfield&lt;/a&gt; and I immediately said &lt;strong&gt;Silverlight Deep Zoom&lt;/strong&gt;!&lt;/p&gt;  &lt;p&gt;There's a number of good ways to view LOTS of images at a time. I'll share the ones I use. First, here's our &lt;a href="http://bigpicture.vertigo.com/obama/"&gt;&lt;strong&gt;Silverlight DeepZoom Obama News&lt;/strong&gt;&lt;/a&gt; page.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://bigpicture.vertigo.com/obama/"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/image_7.png" width="404" height="192" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Scroll…zoom…&lt;/p&gt;  &lt;p&gt;&lt;a href="http://bigpicture.vertigo.com/obama/"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/image_8.png" width="404" height="184" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Scroll…zoom…&lt;/p&gt;  &lt;p&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/image_9.png" width="404" height="184" /&gt; &lt;/p&gt;  &lt;p&gt;&lt;/p&gt;  &lt;p&gt;Cool. I had to manage these files and check them out before we made the &lt;a href="http://bigpicture.vertigo.com/obama/"&gt;Silverlight DeepZoom version&lt;/a&gt;, so I tried these programs:&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Windows Explorer&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;So, the story is, the &lt;a href="http://www.newseum.org/todaysfrontpages/default_archive.asp?fpArchive=110508"&gt;Newseum&lt;/a&gt; assembled 730 newspaper front pages from all over. I downloaded them with &lt;a href="http://www.downthemall.net/"&gt;DownThemAll&lt;/a&gt; and put them in a folder in Explorer. I run 64-bit Windows Vista and didn't have to much trouble with Windows Explorer with only ~700 images. I could use the View Thumbnails feature and zoom in and out and it worked pretty good.&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Windows Photo Gallery (the Default Preview)&lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;If you double click on an image in Windows, you'll get the Windows Photo Gallery by default, which just shows the image. You can then navigate around the folder with the left and right keys. It works pretty well, although the previewer fills the screen completely and starts up maximized which I find kind of irritating. Also, there's no way to see previews of the images that are coming up next. The thumbnail view is gone.&lt;/p&gt;  &lt;h3&gt;&lt;strong&gt;Windows Live Photo Gallery &lt;/strong&gt;&lt;/h3&gt;  &lt;p&gt;This is a big improvement on the default one. It's a much more polished version of the default one. The most dramatic feature addition is face recognition. If you click on an image, it'll find people:&lt;/p&gt;  &lt;p&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/image_12.png" width="581" height="454" /&gt; &lt;/p&gt;  &lt;p&gt;If you click on &amp;quot;people found,&amp;quot; the system will highlight the face that you can then identify, and more importantly, search on.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/image_14.png"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/image_thumb_4.png" width="454" height="328" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;h3&gt;Picasa 3 from Google&lt;/h3&gt;  &lt;p&gt;Picasa 3 is pretty much on par with Windows Live Photo Gallery. They are both fast, they both have some face recognition, although WLPG is much more granular while Picass just has a &amp;quot;show me photos with faces&amp;quot; option. &lt;/p&gt;  &lt;p&gt;Where Picas really shines is with its replacement of the default image previewer. If you let it take over as your default image viewer, when you double click on a file you'll get a nice animation, a gray curtain that falls over your desktop, but more importantly a &amp;quot;FilmStrip&amp;quot; of all the files. This little touch lets you much more easily navigate while still previewing files.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/Fullscreen%20capture%201172008%2020555%20PM_2.jpg"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="Fullscreen capture 1172008 20555 PM" border="0" alt="Fullscreen capture 1172008 20555 PM" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/Fullscreen%20capture%201172008%2020555%20PM_thumb.jpg" width="504" height="316" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;h3&gt;Expression Media 2&lt;/h3&gt;  &lt;p&gt;A commenter suggested I add &lt;a href="http://www.microsoft.com/expression/products/Overview.aspx?key=media"&gt;Expression Media 2&lt;/a&gt; as the whole &lt;em&gt;point&lt;/em&gt; of Expression Media is to catalog butt-loads of media assets. It shouldn't blink at 700 images…and it didn't.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/Catalog1%20-%20Microsoft%20Expression%20Media%202_2.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; margin: 0px 0px 5px; display: inline; border-top: 0px; border-right: 0px" title="Catalog1 - Microsoft Expression Media 2" border="0" alt="Catalog1 - Microsoft Expression Media 2" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/Catalog1%20-%20Microsoft%20Expression%20Media%202_thumb.png" width="504" height="429" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;It's very bare bones from a Consumer point of view, as it's not meant for organizing the family photos. However, it's power is hidden in its keyboard shortcuts. It's obscenely fast. Truly. Everything moves at the speed of thought, and you can batch rename, tag, change, your photos. &lt;/p&gt;  &lt;p&gt;It also notably has a ridiculous number of sorting options, like &lt;em&gt;dozens. &lt;/em&gt;You can sort by height, width, author or whatever metadata you like. Definitely something I'd return to if I had several thousands images.&lt;/p&gt;  &lt;h3&gt;Silverlight DeepZoom&lt;/h3&gt;  &lt;p&gt;First I tried using &lt;a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=457B17B7-52BF-4BDA-87A3-FA8A4673F8BF&amp;amp;displaylang=en"&gt;DeepZoom Composer&lt;/a&gt;, which is a free tool for making DeepZoom collections really easily. We figured we'd drag these 700+ files into DeepZoom and bam! We're done. Well, DeepZoom Composer currently can't handle single collections with THAT many images. This isn't a limitation of DeepZoom, it appears, but the editor which hit 2 gigs of RAM and died. Additionally, with that many files, it's easier to just position the images programmatically. I talked to the PM for the product and they're already on it. However, I can still use the DeepZoom tools programmatically. It's not DeepZoom Composer that does ALL the work, in fact. There's a &amp;quot;SparseImageTool.exe&amp;quot; that we can call programmatically.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/giorgio/archive/2008/05/05/deep-zoom-batch-export-programmaticly-using-c.aspx"&gt;Giorgio Sardo has a blog post about this&lt;/a&gt; (&lt;a href="http://blogs.msdn.com/giorgio/archive/2008/08/26/deep-zoom-batch-export-using-c-update.aspx"&gt;latest version here&lt;/a&gt;), and I was able to use his code directly to make a local DeepZoom collection. Here's a snippet of his code with my changes. It's rough, but it's a one off, so be forgiving:&lt;/p&gt;  &lt;pre class="c#" name="code"&gt;static void Main(string[] args)&lt;br /&gt;{&lt;br /&gt;    // Collection name&lt;br /&gt;    string collectionName = &amp;quot;ObamaZoom&amp;quot;;&lt;br /&gt;    // Folder containing images to be processed&lt;br /&gt;    string sourceImagesFolder = @&amp;quot;C:\\Users\\Scott\\Desktop\\Obama\\&amp;quot;;&lt;br /&gt;    // Destination folder of the batch process&lt;br /&gt;    string outputFolder = &amp;quot;D:\\DeepZoomObamaNews\\&amp;quot;;&lt;br /&gt;&lt;br /&gt;    // Eventually create the output directory&lt;br /&gt;    if (!Directory.Exists(outputFolder))&lt;br /&gt;        Directory.CreateDirectory(outputFolder);&lt;br /&gt;&lt;br /&gt;    CreateCollection(collectionName, sourceImagesFolder, outputFolder);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;/// &amp;lt;summary&amp;gt;&lt;br /&gt;/// Create a Test collection using automation&lt;br /&gt;/// &amp;lt;/summary&amp;gt;&lt;br /&gt;static void CreateCollection(string collectionName, string sourceImagesFolder, string outputFolder)&lt;br /&gt;{&lt;br /&gt;    // Create a collection converter&lt;br /&gt;    CollectionConverter collectionConverter = new CollectionConverter();&lt;br /&gt;    // Required parameters&lt;br /&gt;    collectionConverter.SparseImageToolPath = GetSparseImageToolPath();&lt;br /&gt;    collectionConverter.ImagesCollection = GetImages(sourceImagesFolder); // IEnumerable&amp;lt;string&amp;gt; containing the path of the images&lt;br /&gt;    collectionConverter.ImagesDestinationFolder = outputFolder;&lt;br /&gt;    // Optional parameters&lt;br /&gt;    collectionConverter.CollectionName = collectionName;&lt;br /&gt;    collectionConverter.CollectionFormat = CollectionConverter.CollectionFormats.XML;&lt;br /&gt;&lt;br /&gt;    //collectionConverter.ConvertedOverlapPixels = ...&lt;br /&gt;    //collectionConverter.ConvertedTileSize = ...&lt;br /&gt;    //TODO: You can customize the exporting experience here, by setting the according parameters such as:&lt;br /&gt;    // Tile Size, File Format, Collection Format, Compression, Quality, ...&lt;br /&gt;&lt;br /&gt;    // Attach to completion handler&lt;br /&gt;    collectionConverter.BatchCompleted += delegate&lt;br /&gt;     {&lt;br /&gt;         Console.WriteLine(&amp;quot;Conversion completed\nPRESS &amp;lt;ENTER&amp;gt; TO EXIT&amp;quot;);&lt;br /&gt;     };&lt;br /&gt;&lt;br /&gt;    try&lt;br /&gt;    {&lt;br /&gt;        collectionConverter.BatchCollectionExport();&lt;br /&gt;    }&lt;br /&gt;    catch (Exception e)&lt;br /&gt;    {&lt;br /&gt;        Console.WriteLine(e.Message);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    Console.WriteLine(&amp;quot;Conversion started...&amp;quot;);&lt;br /&gt;    Console.ReadLine();&lt;br /&gt;}&lt;/pre&gt;

&lt;p&gt;This code takes the input folder and creates an output folder with the DeepZoom processed files you need. ScottS then said he thought the result would look better if it looks more like the &lt;a href="http://memorabilia.hardrock.com/"&gt;HardRock Cafe Memorabilia site&lt;/a&gt;, so we used Vertigo Software's &amp;quot;BigPicture&amp;quot; application (it's internal for now, but he's looking into what to do with it. &lt;a href="http://blogs.vertigo.com/personal/scott/Blog/default.aspx"&gt;Contact him if you want more details&lt;/a&gt;.) which easily handles all the dynamic positioning of the images in their collections.&lt;/p&gt;

&lt;p&gt;The result is pretty cool. Even cooler if you press the Full Screen button (fourth from the left):&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bigpicture.vertigo.com/obama/default.htm"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ViewingaLOTofImagesEffectivelyorDeepZoom_BB10/image_17.png" width="640" height="426" /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I think it'd be interesting if this technology wasn't just used as an occasional showcase when an event happens, but as a regular everyday thing. I wonder if it would be hard/cool/interesting/compelling to read a regular newspaper like this? Or of PDF files supported this kind of view? For me, the fun is just the buttery smoothness of the zooming. The frame-rate is crazy fast. Enjoy.&lt;/p&gt;

&lt;p&gt;Thank &lt;a href="http://vertigo.com/Default.aspx"&gt;Scott Stanfield and Vertigo Software&lt;/a&gt; for hosting it!&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=t7d5EI"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=t7d5EI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=focmN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=focmN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=Rj2bn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=Rj2bn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ijoUN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ijoUN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=HXEQn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=HXEQn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=TfTKn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=TfTKn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=rLiVN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=rLiVN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/445959788" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=674b0c09-2896-465f-a75a-52bbf0a9d781</comments>
      <category>Silverlight</category>
    <feedburner:origLink>http://www.hanselman.com/blog/ViewingALOTOfImagesEffectivelyPlus700ObamaNewspaperCoversInSilverlightDeepZoom.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=a4e63e35-3842-4b03-a908-3938a4d9abd8</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=a4e63e35-3842-4b03-a908-3938a4d9abd8</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=a4e63e35-3842-4b03-a908-3938a4d9abd8</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=a4e63e35-3842-4b03-a908-3938a4d9abd8</wfw:commentRss>
      <slash:comments>8</slash:comments>
      <title>ASP.NET and jQuery</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=a4e63e35-3842-4b03-a908-3938a4d9abd8</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/444061775/ASPNETAndJQuery.aspx</link>
      <pubDate>Thu, 06 Nov 2008 06:49:04 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" align="right" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ASP.NETandjQuery_132F9/image_3.png" width="262" height="84" /&gt; It looks like many of you have already noticed that there's an &lt;a href="http://code.google.com/p/jqueryjs/downloads/list"&gt;official Visual Studio autocomplete file for jQuery &lt;strong&gt;posted up at the jQuery site&lt;/strong&gt;&lt;/a&gt;. It's significant that it's hosted by the jQuery team in that it's a contribution by the Visual Studio team but it's not up at CodePlex, because it really belongs to jQuery so there's where you'll find it. &lt;/p&gt;  &lt;p&gt;This isn't a new jQuery file and nothing's been &amp;quot;forked&amp;quot; so don't freak out. It's just a documentation file, as you can see if you go to the &lt;a href="http://docs.jquery.com/Downloading_jQuery#Download_jQuery"&gt;Download jQuery page&lt;/a&gt;. &lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;b&gt;&lt;a href="http://docs.jquery.com/Release:jQuery_1.2.6"&gt;1.2.6 (Release Notes)&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://code.google.com/p/jqueryjs/downloads/detail?name=jquery-1.2.6.min.js"&gt;Minified&lt;/a&gt;, &lt;a href="http://code.google.com/p/jqueryjs/downloads/detail?name=jquery-1.2.6.pack.js"&gt;Packed&lt;/a&gt;, &lt;a href="http://code.google.com/p/jqueryjs/downloads/detail?name=jquery-1.2.6.js"&gt;Uncompressed&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;Documentation: &lt;a href="http://code.google.com/p/jqueryjs/downloads/detail?name=jquery-1.2.6-vsdoc.js"&gt;Visual Studio&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Now, the Visual Studio-specific aspect of this is a temporary thing, as it's planned for Visual Studio to support a more standard syntax at some future date, but until then, there's this file and we'll make sure it's kept updated. &lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/webdevtools/archive/2008/10/28/rich-intellisense-for-jquery.aspx"&gt;&lt;strong&gt;Jeff King &lt;/strong&gt;has details on how to use this file&lt;/a&gt; in your projects. In the VERY near future there will be a hotfix that will cause Visual Studio to look for files that end in &amp;quot;-vsdoc.js&amp;quot; for intellisense which will make including it in your project automatic.&lt;/p&gt;  &lt;p&gt;&lt;font color="#ff0000"&gt;&lt;strong&gt;UPDATE: The very near future is NOW. You can now download a small hotfix that causes Visual Studio to automatically look for intellisense files named *-vsdoc.js&amp;quot; next to the runtime file. From &lt;/strong&gt;&lt;a href="http://blogs.msdn.com/webdevtools/archive/2008/11/07/hotfix-to-enable-vsdoc-js-intellisense-doc-files-is-now-available.aspx"&gt;&lt;strong&gt;Jeff King's blog&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;:&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;em&gt;Last week I mentioned we would be releasing a Hotfix to accompany our &lt;/em&gt;&lt;a href="http://blogs.msdn.com/webdevtools/archive/2008/10/28/rich-intellisense-for-jquery.aspx"&gt;&lt;em&gt;new jQuery VSDoc file&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&amp;#160; This Hotfix is now available at the &lt;/em&gt;&lt;a href="http://code.msdn.microsoft.com/KB958502"&gt;&lt;em&gt;MSDN Code Gallery&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&amp;#160; Here's a direct download link for this small (2MB) patch:&lt;/em&gt;&lt;/p&gt;    &lt;p&gt;&lt;a href="http://code.msdn.microsoft.com/KB958502/Release/ProjectReleases.aspx?ReleaseId=1736"&gt;&lt;strong&gt;&lt;em&gt;http://code.msdn.microsoft.com/KB958502/Release/ProjectReleases.aspx?ReleaseId=1736&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;em&gt;I want to emphasize that &lt;strong&gt;this patch is intended for&lt;/strong&gt; &lt;strong&gt;all JavaScript files, not just those related to jQuery&lt;/strong&gt;.&amp;#160; Generally, we will opportunistically look for documentation files related to the script file.&amp;#160; For example, given &amp;quot;mylibrary.js&amp;quot;, we will search in the same directory for:&lt;/em&gt;&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;em&gt;mylibrary&lt;strong&gt;-vsdoc&lt;/strong&gt;.js, then if we don't find it we will search for... &lt;/em&gt;&lt;/li&gt;      &lt;li&gt;&lt;em&gt;mylibrary&lt;strong&gt;.debug&lt;/strong&gt;.js, then if we don't find it we will search for... &lt;/em&gt;&lt;/li&gt;      &lt;li&gt;&lt;em&gt;mylibrary.js&lt;/em&gt;&lt;/li&gt;   &lt;/ul&gt; &lt;/blockquote&gt;  &lt;p&gt;There's a few things that are nice about this jQuery file is that it supports and understands jQuery plug-ins. If you're into jQuery and ASP.NET, &lt;a href="http://code.google.com/p/jqueryjs/downloads/list"&gt;go check it out&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Related Links&lt;/strong&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://channel9.msdn.com/pdc2008/PC31/"&gt;Stephen Walther's ASP.NET and jQuery presentation at PDC&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;&lt;a href="http://weblogs.asp.net/stephenwalther/archive/2008/10/29/jquery-and-asp-net-ajax-demo-code.aspx"&gt;Code and Demos for Stephen's jQuery talk&lt;/a&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://weblogs.asp.net/bleroy/archive/2008/10/27/jquery-intellisense-documentation-file-available.aspx"&gt;jQuery IntelliSense documentation file available&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://blogs.msdn.com/webdevtools/archive/2008/10/28/rich-intellisense-for-jquery.aspx"&gt;Rich IntelliSense for jQuery&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/jQueryToShipWithASPNETMVCAndVisualStudio.aspx"&gt;jQuery to ship with ASP.NET MVC and Visual Studio&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=uaYCkc"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=uaYCkc" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=zjbtN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=zjbtN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=GVQKn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=GVQKn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ZVPFN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ZVPFN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=Um8Gn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=Um8Gn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=DoFwn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=DoFwn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=NVZcN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=NVZcN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/444061775" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=a4e63e35-3842-4b03-a908-3938a4d9abd8</comments>
      <category>ASP.NET</category>
      <category>ASP.NET Dynamic Data</category>
      <category>ASP.NET MVC</category>
      <category>Javascript</category>
    <feedburner:origLink>http://www.hanselman.com/blog/ASPNETAndJQuery.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=f1e44e84-2d50-499c-951f-29509d2ffe38</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=f1e44e84-2d50-499c-951f-29509d2ffe38</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=f1e44e84-2d50-499c-951f-29509d2ffe38</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=f1e44e84-2d50-499c-951f-29509d2ffe38</wfw:commentRss>
      <slash:comments>5</slash:comments>
      <title>The Weekly Source Code 36 - PDC, BabySmash and Silverlight Charting</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=f1e44e84-2d50-499c-951f-29509d2ffe38</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/444015657/TheWeeklySourceCode36PDCBabySmashAndSilverlightCharting.aspx</link>
      <pubDate>Thu, 06 Nov 2008 05:33:18 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;&lt;a href="http://channel9.msdn.com/pdc2008/TL49/"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="Scott Hanselman presenting at PDC 2008" border="0" alt="Scott Hanselman presenting at PDC 2008" align="right" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TheWeeklySourceCode36PDCBabySmashandSilv_E62E/image_3.png" width="370" height="196" /&gt;&lt;/a&gt;First, let me remind you that in my new ongoing &lt;a href="http://www.hanselman.com/blog/ReadingToBeABetterDeveloperTheCoding4FunDevKit.aspx"&gt;quest to &lt;strong&gt;read source code to be a better developer&lt;/strong&gt;&lt;/a&gt;, Dear Reader, I present to you &lt;em&gt;thirty-fifth in a infinite &lt;/em&gt;number of posts of &amp;quot;&lt;a href="http://www.hanselman.com/blog/CategoryView.aspx?category=Source+Code"&gt;&lt;strong&gt;The Weekly Source Code&lt;/strong&gt;&lt;/a&gt;.&amp;quot;&lt;/p&gt;  &lt;p&gt;At the end of my &lt;a href="http://channel9.msdn.com/pdc2008/TL49/"&gt;crazy babies talk at PDC&lt;/a&gt; (&lt;a href="http://www.hanselman.com/blog/TipsForPreparingForATechnicalPresentation.aspx"&gt;Tips on how I prepared here&lt;/a&gt;) I had a big demo where I gave a URL to a &lt;a href="http://www.hanselman.com/babysmashsl"&gt;Silverlight version&lt;/a&gt; of &lt;a href="http://www.babysmash.com"&gt;BabySmash&lt;/a&gt; that &lt;a href="http://www.garchibald.com/babysmash"&gt;Grant&lt;/a&gt; and I built for the show. You can &lt;a href="http://channel9.msdn.com/pdc2008/TL49/"&gt;watch the presentation online if you like&lt;/a&gt; and fast forward to the end (around 60 minutes in) and see the big demo. Basically we had the Silverlight BabySmash talk via ADO.NET Data Services (I'll post in detail in the near future) to a SQL backend. Then I had an MVC reporting site that had some charts that would update as folks smashed. There were over 90,000 smashes during the talk. &lt;/p&gt;  &lt;p&gt;&lt;a href="http://twitter.com/codinghorror/status/978287538"&gt;&lt;img style="border-right-width: 0px; margin: 10px 0px 10px 15px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" align="right" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TheWeeklySourceCode36PDCBabySmashandSilv_E62E/image_8.png" width="270" height="96" /&gt;&lt;/a&gt;The chart was updating &lt;em&gt;as folks were smashing &lt;/em&gt;and we even had a Baby vs. Baby fight break out where the &amp;quot;A&amp;quot; people and the &amp;quot;J&amp;quot; people were going at it. &lt;a href="http://www.codinghorror.com"&gt;Jeff Atwood&lt;/a&gt; started the bloodbath &lt;a href="http://twitter.com/codinghorror/status/978287538"&gt;with this tweet&lt;/a&gt; as he urged on the overflow room along with &lt;a href="http://www.haacked.com"&gt;Phil Haack&lt;/a&gt;. That man's trouble, I tell you.&lt;/p&gt;  &lt;p&gt;In the talk, I started out with a old .NET 1.1 chart from 2003 and showed it working, unchanged, in ASP.NET 3.5 SP1. It's just a nice reminder that things usually work just as they should. Then I upgraded it to a new .NET 4.0 ASP.NET Chart that I'll blog about in detail soon. Then, I showed the final site with the new Silverlight Charts. &lt;a href="http://timheuer.com/"&gt;Tim Heuer&lt;/a&gt; has a &lt;a href="http://timheuer.com/blog/archive/2008/10/28/silverlight-toolkit-released-with-charting-databinding.aspx"&gt;great post on how to databind with these new charts&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;What's really cool about these Silverlight Charts is that they are &lt;a href="http://www.opensource.org/licenses/ms-pl.html"&gt;Ms-PL (Microsoft Public License)&lt;/a&gt; which is a REALLY relaxed license. They're released as part of the larger &lt;a href="http://www.codeplex.com/Silverlight"&gt;Silverlight Toolkit&lt;/a&gt; up at &lt;a href="http://www.codeplex.com/Silverlight"&gt;http://www.codeplex.com/Silverlight&lt;/a&gt;. There's a bunch of controls in there. It is a preview release though, so things will change, and hopefully only get better:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;b&gt;Components in the &lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Quality%20Bands&amp;amp;referringTitle=Home&amp;amp;ANCHOR#Preview"&gt;Preview&lt;/a&gt; Quality Band&lt;/b&gt;       &lt;ul&gt;       &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#AutoCompleteBox"&gt;AutoCompleteBox&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#NumericUpDown"&gt;NumericUpDown&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#Viewbox"&gt;Viewbox&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#Expander"&gt;Expander&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%203&amp;amp;referringTitle=Home&amp;amp;ANCHOR#ImplicitStyleManager"&gt;ImplicitStyleManager&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%202&amp;amp;referringTitle=Home"&gt;Charting&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;ul&gt;   &lt;li&gt;&lt;b&gt;Components in the &lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Quality%20Bands&amp;amp;referringTitle=Home&amp;amp;ANCHOR#Stable"&gt;Stable&lt;/a&gt; Quality Band&lt;/b&gt;       &lt;ul&gt;       &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#TreeView"&gt;TreeView&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#DockPanel"&gt;DockPanel&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#WrapPanel"&gt;WrapPanel&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20November%202008%20overview&amp;amp;referringTitle=Home&amp;amp;ANCHOR#Label"&gt;Label&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#HeaderedContentControl"&gt;HeaderedContentControl&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;        &lt;li&gt;&lt;b&gt;&lt;a href="http://www.codeplex.com/Silverlight/Wiki/View.aspx?title=Silverlight%20Toolkit%20Overview%20Part%201&amp;amp;referringTitle=Home&amp;amp;ANCHOR#HeaderedItemsControl"&gt;HeaderedItemsControl&lt;/a&gt;&lt;/b&gt; &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You can check out the &lt;a href="http://silverlight.net/samples/sl2/toolkitchartsamples/run/default.html"&gt;Toolkit Chart samples and run them yourself here&lt;/a&gt;. It's nice that the chart sampler actually includes the source code within the Silverlight sample app. You can browse dozens of charts, then switch tabs and see the XAML and code-behind. This all lives in Microsoft.Windows.Controls.DataVisualization, the namespace (so far) for these controls.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TheWeeklySourceCode36PDCBabySmashandSilv_E62E/image_5.png"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TheWeeklySourceCode36PDCBabySmashandSilv_E62E/image_thumb_1.png" width="520" height="415" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;My reporting page included a Silverlight Chart and a Virtual Earth control to show where people were smashing from. The data is coming from the &lt;strike&gt;Astoria&lt;/strike&gt; ADO.NET Data Service, which is easy to get to via either JavaScript or from Silverlight.&lt;/p&gt;  &lt;p&gt;You add the charts to your Silverlight application by adding a reference to the assembly then assigning a namespace to them:&lt;/p&gt;  &lt;p&gt;&lt;font size="2" face="Courier New"&gt;xmlns:charting=&amp;quot;clr-namespace:Microsoft.Windows.Controls.DataVisualization.Charting;assembly=Microsoft.Windows.Controls.DataVisualization&amp;quot;      &lt;br /&gt;xmlns:datavis=&amp;quot;clr-namespace:Microsoft.Windows.Controls.DataVisualization;assembly=Microsoft.Windows.Controls.DataVisualization&amp;quot; &lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Them, lay them out. I've got two charts here, one column and one pie. I also did some stuff like the linear gradient for the background, etc. Still, pretty simple.&lt;/p&gt;  &lt;pre class="xml" name="code"&gt;&amp;lt;charting:Chart Grid.Column=&amp;quot;0&amp;quot; Height=&amp;quot;300&amp;quot;  StylePalette=&amp;quot;{StaticResource PaletteColors}&amp;quot; Style=&amp;quot;{StaticResource ChartStyle1}&amp;quot; &amp;gt;&lt;br /&gt;    &amp;lt;charting:Chart.Background&amp;gt;&lt;br /&gt;        &amp;lt;LinearGradientBrush EndPoint=&amp;quot;1.332,1.361&amp;quot; StartPoint=&amp;quot;-0.107,-0.129&amp;quot;&amp;gt;&lt;br /&gt;            &amp;lt;GradientStop Color=&amp;quot;#FF6CA9D5&amp;quot;/&amp;gt;&lt;br /&gt;            &amp;lt;GradientStop Color=&amp;quot;#FFFFFFFF&amp;quot; Offset=&amp;quot;1&amp;quot;/&amp;gt;&lt;br /&gt;        &amp;lt;/LinearGradientBrush&amp;gt;&lt;br /&gt;    &amp;lt;/charting:Chart.Background&amp;gt;&lt;br /&gt;    &amp;lt;charting:Chart.Axes&amp;gt;&lt;br /&gt;        &amp;lt;charting:Axis x:Name=&amp;quot;colAxis&amp;quot; Orientation=&amp;quot;Vertical&amp;quot; AxisType=&amp;quot;Linear&amp;quot; Minimum=&amp;quot;0&amp;quot; Maximum=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;/charting:Axis&amp;gt;&lt;br /&gt;    &amp;lt;/charting:Chart.Axes&amp;gt;&lt;br /&gt;    &amp;lt;charting:Chart.Series&amp;gt;&lt;br /&gt;        &amp;lt;charting:ColumnSeries x:Name=&amp;quot;colSeries&amp;quot; ItemsSource=&amp;quot;{StaticResource BasicValues}&amp;quot; DependentValueBinding=&amp;quot;{Binding Count}&amp;quot; IndependentValueBinding=&amp;quot;{Binding Character}&amp;quot; Title=&amp;quot;Character&amp;quot;&amp;gt;&lt;br /&gt;        &amp;lt;/charting:ColumnSeries&amp;gt;&lt;br /&gt;    &amp;lt;/charting:Chart.Series&amp;gt;&lt;br /&gt;&amp;lt;/charting:Chart&amp;gt;&lt;br /&gt;&amp;lt;charting:Chart Style=&amp;quot;{StaticResource ChartStyle1}&amp;quot; Grid.Column=&amp;quot;1&amp;quot; Height=&amp;quot;300&amp;quot;  StylePalette=&amp;quot;{StaticResource PaletteColors}&amp;quot; &amp;gt;&lt;br /&gt;    &amp;lt;charting:Chart.Axes&amp;gt;&lt;br /&gt;        &amp;lt;charting:Axis Orientation=&amp;quot;Vertical&amp;quot; AxisType=&amp;quot;Linear&amp;quot; Maximum=&amp;quot;100000&amp;quot;&amp;gt;&amp;lt;/charting:Axis&amp;gt;&lt;br /&gt;    &amp;lt;/charting:Chart.Axes&amp;gt;&lt;br /&gt;    &amp;lt;charting:Chart.Series&amp;gt;&lt;br /&gt;        &amp;lt;charting:PieSeries x:Name=&amp;quot;pieSeries&amp;quot; ItemsSource=&amp;quot;{StaticResource BasicValues}&amp;quot; DependentValueBinding=&amp;quot;{Binding Count}&amp;quot; IndependentValueBinding=&amp;quot;{Binding Character}&amp;quot; Title=&amp;quot;Character&amp;quot;&amp;gt;&lt;br /&gt;        &amp;lt;/charting:PieSeries&amp;gt;&lt;br /&gt;    &amp;lt;/charting:Chart.Series&amp;gt;&lt;br /&gt;&amp;lt;/charting:Chart&amp;gt;&lt;/pre&gt;

&lt;p&gt;We had a generic list of &amp;quot;CharacterSmash&amp;quot; data, as in List&amp;lt;CharacterSmash&amp;gt; that we'd be binding to the chart.&lt;/p&gt;

&lt;pre class="c#" name="code"&gt;private readonly List&amp;lt;CharacterSmash&amp;gt; characterData = new List&amp;lt;CharacterSmash&amp;gt;();&lt;/pre&gt;

&lt;p&gt;For the purposes of the presentation, I just polled for the data by making an asynchronous call to the service, then updating the bar and pie chart when it returned:&lt;/p&gt;

&lt;pre class="c#" name="code"&gt;private void RequestSmashCountData()&lt;br /&gt;{&lt;br /&gt;    var container = new SmashMetricsContainer(new Uri(&amp;quot;/BabySmashPDC/SmashService.svc&amp;quot;, UriKind.Relative));&lt;br /&gt;&lt;br /&gt;    // Setup data query&lt;br /&gt;    var query = container.SmashCount;&lt;br /&gt;&lt;br /&gt;    // Start the async query&lt;br /&gt;    query.BeginExecute((asyncResult =&amp;gt;&lt;br /&gt;                            {&lt;br /&gt;                                // Get the matching results from the service call&lt;br /&gt;                                var matches = query.EndExecute(asyncResult);&lt;br /&gt;                                UpdateCharacterData(matches);&lt;br /&gt;                                UpdateBarChart();&lt;br /&gt;                                UpdatePieChart();&lt;br /&gt;                            }), null);&lt;br /&gt;}&lt;/pre&gt;

&lt;p&gt;See how the BeginExecute includes the &amp;quot;do this when you return&amp;quot; as a lambda? It's a tidy syntax. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;font color="#ff0000"&gt;UPDATE: Tim Heuer emailed me to say that we're re-databinding the results. Instead, he wisely points out:&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;&lt;font color="#ff0000"&gt;&amp;quot;On the code where you are getting the smash metrics for the silverlight charts…I see that you are re-binding the data?&lt;/font&gt;&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;&lt;font color="#ff0000"&gt;If you bind to an observablecollection and just change that the chart should change with the data…including the Y-axis growth.&amp;quot;&lt;/font&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;font color="#ff0000"&gt;&lt;strong&gt;Excellent point! Tim's right. The way I'm doing it works, but it's old school. If I just updated a ObservableCollection the chart would notice the changes and update itself.&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;The updates are also clean, just databinding the results:&lt;/p&gt;

&lt;pre class="c#" name="code"&gt;private void UpdateBarChart()&lt;br /&gt;{&lt;br /&gt;    var axis = (Axis)FindName(&amp;quot;colAxis&amp;quot;);&lt;br /&gt;    if (axis != null)&lt;br /&gt;        axis.Maximum = GetMaximumCount() + 50;&lt;br /&gt;&lt;br /&gt;    var colSeriesControl = (ColumnSeries)FindName(&amp;quot;colSeries&amp;quot;);&lt;br /&gt;    if (colSeriesControl != null)&lt;br /&gt;        colSeriesControl.ItemsSource = characterData;&lt;br /&gt;}&lt;/pre&gt;

&lt;p&gt;All we had to do that was interesting at all was to make sure the Y-axis grew as the data grew.&lt;/p&gt;

&lt;p&gt;Who do we have to thank for this charting control? &lt;a href="http://blogs.msdn.com/delay"&gt;David Anson&lt;/a&gt; is who. Basically he was the Primary Dev and only Tester on the whole thing, and you should &lt;a href="http://blogs.msdn.com/delay"&gt;check out his blog for lots of inside information on charting in Silverlight&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE: David had development help from Jafar Husain, Jeremy Sheldon, Delian Tchoparinov, Alex Gorev and Sean Boon and designer Mehdi Slaoui Andaloussi.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If making a complex chart seems daunting, &lt;a href="http://blogs.msdn.com/delay/archive/2008/10/29/click-your-way-to-great-silverlight-charts-live-chartbuilder-sample-and-source-code.aspx"&gt;David has &lt;strong&gt;ChartBuilder&lt;/strong&gt;&lt;/a&gt; that &lt;a href="http://delay.members.winisp.net/ChartBuilder/"&gt;you run now in your browser&lt;/a&gt;. It'll generate and show you the XAML you need for your chart.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://delay.members.winisp.net/ChartBuilder/"&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="image" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TheWeeklySourceCode36PDCBabySmashandSilv_E62E/image_11.png" width="520" height="397" /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;There was so much announced at PDC, I wanted to make sure that folks heard about this important release that might have been lost in the shuffle. Even better, &lt;a href="http://www.codeplex.com/Silverlight/SourceControl/ListDownloadableCommits.aspx"&gt;the source is open&lt;/a&gt; so if you don't like it, change it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Related Links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://blogs.msdn.com/delay/archive/2008/11/04/smaller-is-still-better-a-simple-step-continues-to-shrink-the-download-size-of-silverlight-2-applications.aspx"&gt;&lt;strong&gt;Make your Silverlight Applications Smaller with ReXapper&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://blogs.msdn.com/delay/archive/2008/10/29/click-your-way-to-great-silverlight-charts-live-chartbuilder-sample-and-source-code.aspx"&gt;&lt;strong&gt;ChartBuilder&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; and &lt;/strong&gt;&lt;a href="http://blogs.msdn.com/delay/archive/2008/10/28/announcing-a-free-open-source-charting-solution-for-silverlight-silverlight-toolkit-released-today-at-pdc.aspx"&gt;&lt;strong&gt;Intro to Charting with Silverlight&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://silverlight.net/samples/sl2/toolkitcontrolsamples/run/default.html"&gt;&lt;strong&gt;Silverlight Tookit Samples&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://www.codeplex.com/Silverlight"&gt;&lt;strong&gt;http://www.codeplex.com/Silverlight&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://blogs.msdn.com/sburke/"&gt;&lt;strong&gt;Shawn Burke's blog (he's the boss)&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://silverlight.net/forums/35.aspx"&gt;&lt;strong&gt;Silverlight Control Support Forum&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://timheuer.com/blog/archive/2008/10/28/silverlight-toolkit-released-with-charting-databinding.aspx"&gt;&lt;strong&gt;Tim Heuer on the Silverlight Toolkit&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://silverlight.net/blogs/jesseliberty/"&gt;&lt;strong&gt;Jesse Liberty's Silverlight Blog&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;

  &lt;li&gt;&lt;a href="http://www.garchibald.com/babysmash"&gt;&lt;strong&gt;Grant Archibald on Silverlight and BabySmash&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=RD1oqM"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=RD1oqM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=eprkN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=eprkN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=xx20n"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=xx20n" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=vQXzN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=vQXzN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=qvpVn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=qvpVn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=odhQn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=odhQn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ij74N"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ij74N" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/444015657" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=f1e44e84-2d50-499c-951f-29509d2ffe38</comments>
      <category>ASP.NET</category>
      <category>ASP.NET MVC</category>
      <category>BabySmash</category>
      <category>Open Source</category>
      <category>PDC</category>
      <category>Silverlight</category>
      <category>Source Code</category>
    <feedburner:origLink>http://www.hanselman.com/blog/TheWeeklySourceCode36PDCBabySmashAndSilverlightCharting.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=768ccbab-7f06-499a-b1d0-504e2e7f0116</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=768ccbab-7f06-499a-b1d0-504e2e7f0116</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=768ccbab-7f06-499a-b1d0-504e2e7f0116</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=768ccbab-7f06-499a-b1d0-504e2e7f0116</wfw:commentRss>
      <slash:comments>72</slash:comments>
      <title>2008 - Congratulations, America has a President-Elect</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=768ccbab-7f06-499a-b1d0-504e2e7f0116</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/442892988/2008CongratulationsAmericaHasAPresidentElect.aspx</link>
      <pubDate>Wed, 05 Nov 2008 06:11:38 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;We have a new president here in the US. He is president-elect Barack Obama. This was a very long presidential race, long by even American standards. We're all exhausted from this race as a country and excited for January 20th, when the new president is inaugurated. It was a good race. John McCain gave a thoughtful and gracious concession speech. Barack Obama gave an inspirational acceptance speech.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nkiwane.com"&gt;My wife, Mo, voted&lt;/a&gt; in her first election as a US Citizen. My boys will grow up in a country that values people of all kinds, including ones that look like them. Voter turnout was at historic levels and was organized and peaceful - THAT is a testament to this country and what we stand for.&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://www.hanselman.com/blog/content/binary/babyobama.jpg" border="0"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Now, let's get to work, America.&lt;br&gt;&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=0Cwgz3"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=0Cwgz3" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=8kulN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=8kulN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=kX0Pn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=kX0Pn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=Jad7N"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=Jad7N" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=2sTcn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=2sTcn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=GNRun"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=GNRun" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=RAAEN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=RAAEN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/442892988" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=768ccbab-7f06-499a-b1d0-504e2e7f0116</comments>
      <category>Musings</category>
    <feedburner:origLink>http://www.hanselman.com/blog/2008CongratulationsAmericaHasAPresidentElect.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=874df48c-4453-4169-910b-2ffb7eae80cb</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=874df48c-4453-4169-910b-2ffb7eae80cb</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=874df48c-4453-4169-910b-2ffb7eae80cb</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=874df48c-4453-4169-910b-2ffb7eae80cb</wfw:commentRss>
      <slash:comments>11</slash:comments>
      <title>Tips for Preparing for a Technical Presentation</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=874df48c-4453-4169-910b-2ffb7eae80cb</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/441788702/TipsForPreparingForATechnicalPresentation.aspx</link>
      <pubDate>Tue, 04 Nov 2008 06:43:32 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;I felt &lt;a href="http://channel9.msdn.com/pdc2008/TL49/"&gt;pretty good about my presentation&lt;/a&gt; at &lt;a href="http://sessions.microsoftpdc.com"&gt;PDC&lt;/a&gt; last week. They are WAY more uptight about presentations at PDC than at TechEd. You have to go through dry-runs and slide reviews and all sorts of things that I was dodging at every turn.&lt;/p&gt;  &lt;p&gt;The talk is available, as are all PDC talks, up at &lt;a title="http://sessions.microsoftpdc.com" href="http://sessions.microsoftpdc.com"&gt;http://sessions.microsoftpdc.com&lt;/a&gt;. You can get them in these formats &lt;a href="http://mschnlnine.vo.llnwd.net/d1/pdc08/WMV-HQ/TL49.wmv"&gt;WMV-HQ&lt;/a&gt;, &lt;a href="http://mschnlnine.vo.llnwd.net/d1/pdc08/WMV/TL49.wmv"&gt;WMV&lt;/a&gt;, &lt;a href="http://mschnlnine.vo.llnwd.net/d1/pdc08/ZUNE/TL49.wmv"&gt;Zune&lt;/a&gt;, &lt;a href="http://mschnlnine.vo.llnwd.net/d1/pdc08/MP4/TL49.mp4"&gt;MP4&lt;/a&gt; which is cool. I like the WMV-HQ version, over the WMV version, because it includes picture-in-picture video. My talk is no fun if you can't see me being silly. You can also watch it &lt;a href="http://channel9.msdn.com/pdc2008/TL49/"&gt;streaming in the browser via Silverlight&lt;/a&gt; and &lt;a href="http://mschnlnine.vo.llnwd.net/d1/pdc08/PPTX/TL49.pptx"&gt;download my PPTX&lt;/a&gt;. If you saw it live, don't forget to &lt;a href="http://snurl.com/4syyi"&gt;evaluate the session as I have to Crush Anders&lt;/a&gt; in the scores. (Note to self, register CrushAnders.com and .net)&lt;/p&gt;  &lt;p&gt;Anyway, someone was asking how I prepare for a talk, so I figured this would be as good enough time as any for a post on the topic.&lt;/p&gt;  &lt;p&gt;&lt;img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="image" align="right" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TipsforPreparingforaTechnicalPresentatio_12E38/image_3.png" width="224" height="250" /&gt;These basic tips from a few years back still stand - &lt;a href="http://www.hanselman.com/blog/11TopTipsForASuccessfulTechnicalPresentation.aspx"&gt;11 Top Tips for a Successful Technical Presentation&lt;/a&gt;, but this post is about the actual preparation process and some tips and techniques that might help.&lt;/p&gt;  &lt;p&gt;I thought I did a good job, with 72 slides and 8 demos in 75 minutes and only one person said it felt rushed in the comments. ;) Of course, I had about 9 hours of content, but I did prepare in specific ways in order to pull it off.&lt;/p&gt;  &lt;h3&gt;Know Where Things Are - Beforehand&lt;/h3&gt;  &lt;p&gt;You can easily waste 2 to 5 minutes over an hour long talk &lt;em&gt;looking for crap. &lt;/em&gt;Seriously, I don't need to see how slow you are with Explorer. If you want to have your audience rush the stage, be slow in finding stuff. ;) &lt;/p&gt;  &lt;p&gt;Make a folder of links that is specific to your talk. I made one and numbered each link in the order I was going to use them. That includes links to folders, files, browsers, batch files, reset scripts, whatever. &lt;/p&gt;  &lt;p&gt;My talk also included a lot of websites that I knew I'd be visiting. I made a Links toolbar in IE and setup links to everything I'd visit, in order.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TipsforPreparingforaTechnicalPresentatio_12E38/image_8.png"&gt;&lt;img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TipsforPreparingforaTechnicalPresentatio_12E38/image_thumb_2.png" width="491" height="20" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;My tiny head is on those links not because of my huge ego, but because those links are inside my domain and IE used my favicon.ico. ;)&lt;/p&gt;  &lt;h3&gt;&amp;quot;Sync to Paper&amp;quot; and Know Your Timing&lt;/h3&gt;  &lt;p&gt;I'm a gadget guy, sure, and I've got the same todo.txt file on my desktop that the rest of you do, but there's really something about &amp;quot;syncing to paper.&amp;quot; before every talk I write a few things down. I do it on a &lt;a href="http://www.hanselman.com/blog/PersonalSystemsOfOrganization.aspx"&gt;Moleskine notebook that I wrote about in my Personal Systems of Organization post&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Over the years I've come up with a few techniques on paper that have helped me greatly. Scanned below is the notes I used in my PDC talk.&lt;/p&gt;  &lt;p&gt;On the left-hand side you'll see 5 sections, numbered from top to bottom. I make &lt;strong&gt;one section per 15 minute segment&lt;/strong&gt;. This was a 75 minute talk, so there's 5 sections. Sometimes I'll take the FIRST and LAST section and split them into 5/10 and 10/5 respectively. Regardless of how &lt;em&gt;you &lt;/em&gt;do it, the point here is to know these things:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Know Where You Are Supposed to Be &lt;/strong&gt;      &lt;ul&gt;       &lt;li&gt;I use the segments to let me know where I'm supposed to be at 15 min, 30 min, etc. Looking at the notes, if I'm on the PLINQ demo and it's only 20 minutes in, I'm going WAY too fast for example.&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Know &lt;/strong&gt;&lt;strong&gt;Where You Are Going&lt;/strong&gt;       &lt;ul&gt;       &lt;li&gt;It's nice to be free of knowing what's next. The mind can free associate better if it isn't saddled with where it's headed. That's the paper's job. I glance down just to see that I'm on track.&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Know &lt;/strong&gt;&lt;strong&gt;Your Pacing and &lt;/strong&gt;&lt;strong&gt;Know &lt;/strong&gt;&lt;strong&gt;What You Can Drop&lt;/strong&gt;       &lt;ul&gt;       &lt;li&gt;On the left side I've numbered the demos 1 or 2. The #2's I can drop if I need to save time. The #1's can't be dropped or it'll ruin everything. Have enough demos to fill the time, but also know ahead of time which demos to drop if need be.&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TipsforPreparingforaTechnicalPresentatio_12E38/BabySmashPresentationNotes_2.jpg"&gt;&lt;img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="BabySmash Presentatio nNotes" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TipsforPreparingforaTechnicalPresentatio_12E38/BabySmashPresentationNotes_thumb.jpg" width="520" height="418" /&gt;&lt;/a&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;  &lt;h3&gt;Know Your Narrative and Where to &amp;quot;Pivot&amp;quot;&lt;/h3&gt;  &lt;p&gt;If you've ever been unfortunate enough to come upon me &lt;em&gt;freaking out &lt;/em&gt;before a talk at a conference, I've likely accosted you and run through the narrative or the &amp;quot;story arc.&amp;quot; I keep doing this until it really resonates with me and the half-dozen folks I abuse regularly, like &lt;a href="http://www.haacked.com"&gt;Phil Haack&lt;/a&gt; and &lt;a href="http://blog.wekeroad.com/"&gt;Rob Conery&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;It's all the same basic middle-school speech stuff we've all learned before, but I'm constantly reminding myself of these questions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Why is the audience there? &lt;/li&gt;    &lt;li&gt;Who is the audience? &lt;/li&gt;    &lt;li&gt;How can I avoid wasting their time? &lt;/li&gt;    &lt;li&gt;What's the one thing they should get out of the talk?&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I also try to focus on a story arc that looks like:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;What is this? &lt;/li&gt;    &lt;li&gt;This is it. &lt;/li&gt;    &lt;li&gt;What was that?&lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;&lt;img style="border-right-width: 0px; margin: 0px 0px 5px 10px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="The .NET Framework Universe" align="right" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TipsforPreparingforaTechnicalPresentatio_12E38/image_6.png" width="484" height="252" /&gt;Seems silly, but it works. You'll see that I repeat myself four or five times to make sure important points get hit and pounded in. This style of arc works in most technical talks, but others are more complex so I use what I call a &amp;quot;pivot point.&amp;quot;&lt;/p&gt;  &lt;p&gt;I call it that because in basketball once you've planted your feet you have to pivot on one foot. You can move all over as long as you keep that one foot planted. If the basketball analogy doesn't work for you, then think of holding your finger on a chess piece while you think of your next move.&lt;/p&gt;  &lt;p&gt;For the PDC talk, we had these nice posters to pass out. They look nice as placemats or on the wall, but they look busy on a slide, so I covered them with bright colored shapes. The &lt;strong&gt;Core &lt;/strong&gt;shape was my pivot point. I'd start there, go to Client, then come back to Core. I'd go to Data, then back to Core. Just like that, Rinse, Repeat.&lt;/p&gt;  &lt;p&gt;If you've got a meandering talk, like I did, finding a place to keep coming back to can really help. It helps me.&lt;/p&gt;  &lt;h3&gt;Have a Pre-Talk Checklist and Demo Reset&lt;/h3&gt;  &lt;p&gt;Make a complete list of everything that you need to do before your talk. If that means find a Diet Coke and use the bathroom, fine, put it on the list. Here's mine for this talk, &lt;em&gt;unedited&lt;/em&gt;.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;font size="2" face="Courier New"&gt;reset the database       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;resize and prep the browser       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;cache the font list       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;remove my son's face from the xaml       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;* Pick up the Samsung SilverLight Phone       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;Test the Phone remote viewing software       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;prep the mac, test the mac's video output (1280)       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;*dvi-vga adapter for the mac       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;check all font sizes in all apps       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;run zoomin       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;shutdown services, and the mesh       &lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;Warn orcsweb that traffic is coming&lt;/font&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;I had a bunch of stuff that could have gone wrong if I hadn't checked ahead of time. The Mac I used for the Surface demo only output at 1280x1024. I checked that with the tech guy at 8am. I didn't have a DVI-VGA adapter, so I got one at Radio Shack. I went into every app I was going to run and made sure the fonts were at a visible size (I like Consolas 15pt). I also shutdown all non-essential services. ALL of them. I go from 107 programs running to less than 50. I shutdown piles of stuff in Services.msc like &amp;quot;Infrared Service&amp;quot; and all that crap. I called my ISP, &lt;a href="http://www.orcsweb.com"&gt;Orcsweb&lt;/a&gt;, and warned them I was doing a demo so they'd babysit the box and not think there was an attack. &lt;/p&gt;  &lt;p&gt;Preparations like this, and batch files that reset your demos, drop and recreate your database, clear caches, prime caches or whatever administrivia you need, just take a few minutes to do, but they make a presentation look much more professional. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Related Posts&lt;/strong&gt;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/PersonalSystemsOfOrganization.aspx"&gt;Personal Systems of Organization&lt;/a&gt; &lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.hanselman.com/blog/11TopTipsForASuccessfulTechnicalPresentation.aspx"&gt;11 Top Tips for a Successful Technical Presentation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=O95Kur"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=O95Kur" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=NCf9N"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=NCf9N" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=mNdZn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=mNdZn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=dsGbN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=dsGbN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=0AYKn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=0AYKn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=kP31n"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=kP31n" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=pRpAN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=pRpAN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/441788702" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=874df48c-4453-4169-910b-2ffb7eae80cb</comments>
      <category>PDC</category>
    <feedburner:origLink>http://www.hanselman.com/blog/TipsForPreparingForATechnicalPresentation.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=9d213d15-28b5-45f5-af01-0c750e045293</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=9d213d15-28b5-45f5-af01-0c750e045293</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=9d213d15-28b5-45f5-af01-0c750e045293</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=9d213d15-28b5-45f5-af01-0c750e045293</wfw:commentRss>
      <slash:comments>22</slash:comments>
      <title>Tiny Victories Inside Microsoft - SmallestDotNet makes headway</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=9d213d15-28b5-45f5-af01-0c750e045293</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/441720292/TinyVictoriesInsideMicrosoftSmallestDotNetMakesHeadway.aspx</link>
      <pubDate>Tue, 04 Nov 2008 04:57:20 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;&lt;a href="http://www.microsoft.com/downloads/info.aspx?na=90&amp;amp;p=&amp;amp;SrcDisplayLang=en&amp;amp;SrcCategoryId=&amp;amp;SrcFamilyId=ab99342f-5d1a-413d-8319-81da479ab0d7&amp;amp;u=http%3a%2f%2fdownload.microsoft.com%2fdownload%2f0%2f6%2f1%2f061f001c-8752-4600-a198-53214c69b51f%2fdotnetfx35setup.exe"&gt;&lt;img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="112" alt="GET .NET" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TinyVictoriesInsideMicrosoftSmallestDotN_1235F/image_3.png" width="218" align="right" border="0"&gt;&lt;/a&gt;Sometimes there's little victories, tiny victories that make me happy. It's a big*ss company, Microsoft is, and &lt;strike&gt;sometimes&lt;/strike&gt; it's hard to get stuff done. But sometimes I get something small done that might make a larger difference.&lt;/p&gt; &lt;p&gt;Remember &lt;a href="http://www.smallestdotnet.com"&gt;SmallestDotNet.com&lt;/a&gt; (&lt;a href="http://www.hanselman.com/blog/SmallestDotNetOnTheSizeOfTheNETFramework.aspx"&gt;blog post&lt;/a&gt;) from August? Well, that kicked off a number of discussions about how it was hard to find and install the .NET Framework. It was hard for end users and it was hard for developers to get it.&lt;/p&gt; &lt;p&gt;We put together to small "swat teams" and fixed two small things.&lt;/p&gt; &lt;p&gt;First, the brouchureware. The site &lt;a href="http://www.microsoft.com/net/"&gt;&lt;strong&gt;http://www.microsoft.com/net/&lt;/strong&gt;&lt;/a&gt; has a nice URL, non-threatening clipart dude, and some marketing stuff, but had no way to get the .NET Framework it was talking about. Now it also has an unambiguous button that links directly to the small 2.6 meg .NET Framework bootstrapper. Directly. No download interstitial page. Magical. Duh.&lt;/p&gt; &lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/netframework/default.aspx"&gt;&lt;img style="border-right: 0px; border-top: 0px; margin: 0px 0px 0px 5px; border-left: 0px; border-bottom: 0px" height="446" alt="Screenshot of the .NET Framework page on MSDN" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/TinyVictoriesInsideMicrosoftSmallestDotN_1235F/image_6.png" width="270" align="right" border="0"&gt;&lt;/a&gt;Second, the &lt;a href="http://msdn.microsoft.com/en-us/netframework/default.aspx"&gt;.NET Framework page on MSDN&lt;/a&gt;. It's at &lt;a href="http://msdn.microsoft.com/en-us/netframework"&gt;&lt;strong&gt;http://msdn.microsoft.com/en-us/netframework&lt;/strong&gt;&lt;/a&gt;, is linked to all over and gets a lot of traffic.&lt;/p&gt; &lt;p&gt;However, when you visited it before it had a bunch of generated links like "Popular Downloads" that were either old or stupid and would point folks to .NET 2.0 redists that were old. It was hard to find nearly everything.&lt;/p&gt; &lt;p&gt;We redesigned it to include (as above) a giant and unambiguous &lt;strong&gt;Install It Now&lt;/strong&gt; button. However, if you click &lt;a href="http://msdn.microsoft.com/en-us/netframework/aa569263.aspx"&gt;More Info&lt;/a&gt; you get a nice list of other versions to download. Madness!&lt;/p&gt; &lt;p&gt;I say some of this with some slight sarcasm because I've learned that there are tens of thousands of pages out there in Microsoft-world and like any garden, you'd be surprised that some sections just aren't tended to as often as they should. Pages that you look at all the time might not be looked at as often as they should from the inside.&lt;/p&gt; &lt;p&gt;It also includes a link to the Full Package just under the link to the bootstrapper. It's generally a lot tidier, IMHO. There's also some talk about taking my SmallestDotNet.com detection code, or code like it, and putting it on these sites to make everything as easy as possible.&lt;/p&gt; &lt;p&gt;I believe there's talk of tending to a lot of these gardens in the coming months and I'm hoping to &lt;strike&gt;stick my nose in&lt;/strike&gt; get involved with those layouts as well. &lt;/p&gt; &lt;p&gt;Anyway, this was a tiny victory and it made me smile. I hope it helps you, as there were a lot of people involved in what appears to be small changes.&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=NS6uvK"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=NS6uvK" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=0k07N"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=0k07N" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=xqMNn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=xqMNn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=UpRUN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=UpRUN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=QhFOn"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=QhFOn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=gsH6n"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=gsH6n" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=pnkvN"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=pnkvN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/441720292" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=9d213d15-28b5-45f5-af01-0c750e045293</comments>
      <category>Musings</category>
    <feedburner:origLink>http://www.hanselman.com/blog/TinyVictoriesInsideMicrosoftSmallestDotNetMakesHeadway.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=3899be76-45a3-49d4-8a54-31e33e2baa28</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=3899be76-45a3-49d4-8a54-31e33e2baa28</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=3899be76-45a3-49d4-8a54-31e33e2baa28</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=3899be76-45a3-49d4-8a54-31e33e2baa28</wfw:commentRss>
      <slash:comments>16</slash:comments>
      <title>PDC 2008: BabySmash Preparations</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=3899be76-45a3-49d4-8a54-31e33e2baa28</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/432430645/PDC2008BabySmashPreparations.aspx</link>
      <pubDate>Sun, 26 Oct 2008 09:04:49 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;As I've mentioned before, I've got &lt;a href="http://www.hanselman.com/blog/PDCMicrosoftNETFrameworkOverviewAndApplicationsForBabies.aspx"&gt;a talk at PDC this year&lt;/a&gt;, it's "TL49" and it's called "&lt;strong&gt;Microsoft .NET Framework: Overview and Applications for Babies.&lt;/strong&gt;" It's on Monday at 5:15pm in Room 411. &lt;/p&gt; &lt;p&gt;The baby aspect is really secondary, mostly because &lt;a href="http://www.babysmash.com"&gt;BabySmash&lt;/a&gt; (and what I do with it in the talk) is Not Northwind. This was the strangest Microsoft talk I could sneak past the bosses without them noticing. It also crosses over into other talks and many other products that I'll mention as the week goes on.&lt;/p&gt; &lt;p&gt;Stressful times...I'm nervous because:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I've never tried to do some many complex and intertwining demos at once.&lt;/li&gt; &lt;li&gt;I've never had so many people help out to make it all happen.&lt;/li&gt; &lt;li&gt;It may suck.&lt;/li&gt; &lt;li&gt;I've got like 7 hours of content to fit in 75 minutes.&lt;/li&gt; &lt;li&gt;I've forgotten completely what I'm talking about. ;)&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;I hope enough people show up. Starting to get the pre-show jitters! &lt;/p&gt; &lt;p&gt;Here's a teaser of what we were able to accomplish at Tim Huckaby's Party tonight in San Diego. More soon!&lt;/p&gt; &lt;p&gt;&lt;img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="644" alt="852494" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/PDC2008BabySmashPreparations_1B78/852494_3.jpg" width="484" border="0"&gt; &lt;/p&gt; &lt;p&gt;&lt;a href="http://www.flickr.com/photos/gholliday/2973724088/"&gt;&lt;img src="http://farm4.static.flickr.com/3196/2973724088_0e23d7cfe0.jpg"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;(That's Clemens Vaster's daughter and yes that's what you think it is. Tim has one at his house. Crazy.) &lt;/p&gt; &lt;p&gt;See you at PDC!&lt;/p&gt; &lt;div class="wlWriterSmartContent" id="scid:0767317B-992E-4b12-91E0-4F059A8CECA8:f2699150-3fda-4f59-859b-ebbc799b8d90" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"&gt;Technorati Tags: &lt;a href="http://technorati.com/tags/PDC2008" rel="tag"&gt;PDC2008&lt;/a&gt;,&lt;a href="http://technorati.com/tags/BabySmash" rel="tag"&gt;BabySmash&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=qQBvgI"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=qQBvgI" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=uyLmM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=uyLmM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ATzHm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ATzHm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ke5gM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ke5gM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=TjlOm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=TjlOm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=7lIgm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=7lIgm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=UYj8M"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=UYj8M" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/432430645" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=3899be76-45a3-49d4-8a54-31e33e2baa28</comments>
      <category>BabySmash</category>
      <category>PDC</category>
    <feedburner:origLink>http://www.hanselman.com/blog/PDC2008BabySmashPreparations.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=fc88fdae-7529-441d-afbf-4c6d8a2b4a75</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=fc88fdae-7529-441d-afbf-4c6d8a2b4a75</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=fc88fdae-7529-441d-afbf-4c6d8a2b4a75</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=fc88fdae-7529-441d-afbf-4c6d8a2b4a75</wfw:commentRss>
      <slash:comments>47</slash:comments>
      <title>Happy Eighth Anniversary</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=fc88fdae-7529-441d-afbf-4c6d8a2b4a75</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/431575931/HappyEighthAnniversary.aspx</link>
      <pubDate>Sat, 25 Oct 2008 09:46:45 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;&lt;a href="http://www.nkiwane.com"&gt;&lt;img style="margin: 0px 0px 0px 10px" src="http://farm1.static.flickr.com/220/463660255_87ff145779.jpg?v=0" align="right"&gt;&lt;/a&gt;Eight years ago, I got married three times. Er, I've been married three times. No, that's not right, we've had three weddings. Where to start?&lt;/p&gt; &lt;p&gt;Eight years and a few months ago a friend of mine was graduating from school and somehow my house became the central gathering place. One of her friends, a mutual friend, was moving to the East Coast after finishing her MBA. I was working for a company that still gave sabbaticals, and I'd been there 5 years, so I was going to take the month of July off. I'm not sure why, but it seemed like a good idea at time, but I offered to go along with her on a trip across the country. &lt;/p&gt; &lt;p&gt;We knew each other, but only peripherally, in that FoaF (Friend of a Friend) way. We each knew the other was harmless. &lt;/p&gt; &lt;p&gt;She agreed, and we set off, as friends, on a &lt;a href="http://www.hanselman.com/wireless/"&gt;Planes, Trains and Automobiles trip across the country&lt;/a&gt;. We went to Arizona, Oklahoma, Detroit, Philadelphia, New York. We looked at the Grand Canyon and said "that's a hole." We flew in a friend's tiny plane over Wrigley Field. We rode train's in Penn Station.&lt;/p&gt; &lt;p&gt;Somewhere in Detroit we fell in love. Not sure how, but it happened, and it was awesome. By the way, neither of us would recommend dating for 3 months then getting married. Still, success is a good metric, as we like to say.&lt;/p&gt; &lt;p&gt;Three months later we got married in a park in Wilmington, Delaware, then walked across the street and had chicken fingers at Friendly's. When we got to the park the judge had asked where our witnesses were? Oops. Didn't have any. I ran after two joggers and somehow got them to sign their names two our Marriage Certificate and bear witness in their jogging sweats. Their names are still on the certificate that hangs in our living room.&lt;/p&gt; &lt;p&gt;We debated which coast to live on, and ultimately it came down to who liked their job more. She moved back to the West Coast and we started preparing for &lt;a href="http://www.hanselman.com/wedding"&gt;Wedding #2&lt;/a&gt;. There was a tiny footnote at the bottom of the wedding program that said something like "Scott and Mo were married in a civil ceremony earlier..." It was like 4 point font.&lt;/p&gt; &lt;p&gt;Then we started preparing for Wedding #3, back home in Zimbabwe. First, I had to start negotiations with her parents for &lt;em&gt;&lt;a href="http://en.wikipedia.org/wiki/Lobola"&gt;lobola&lt;/a&gt;&lt;/em&gt;. Sometimes this is called a bride price, but modern folks usually call it a bride gift. Wikipedia has a decent description:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;b&gt;Lobolo&lt;/b&gt; or &lt;b&gt;Lobola&lt;/b&gt; (&lt;i&gt;&lt;b&gt;Mahadi&lt;/b&gt;&lt;/i&gt; in &lt;a href="http://en.wikipedia.org/wiki/Sesotho"&gt;Sesotho&lt;/a&gt;; sometimes translated as &lt;i&gt;&lt;a href="http://en.wikipedia.org/wiki/Bride_price"&gt;bride price&lt;/a&gt;&lt;/i&gt;) is a traditional &lt;a href="http://en.wikipedia.org/wiki/Southern_Africa"&gt;southern African&lt;/a&gt; &lt;a href="http://en.wikipedia.org/wiki/Dowry"&gt;dowry&lt;/a&gt; custom whereby the man pays the family of his fiancée for her hand in marriage. The custom is aimed at bringing the two families together, fostering mutual respect, and indicating that the man is capable of supporting his wife financially and emotionally.  &lt;p&gt;Traditionally the lobola payment was in cattle as cattle were the primary source of wealth in African society. However, most modern urban couples have switched to using cash. The process of lobola negotiations can be long and complex, and involves many members from both the bride's and the groom's extended families.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;I ended up smuggling $20s into the country strapped to my legs under my clothes and her dad bought a number of cattle and a small shop. I could write a book, not a blog post, about the experience. Suffice it to say, there was a goat in a bathtub at some point, then we ate his liver. Long story.  &lt;p&gt;Since we were married, we've been to five Africa countries over four trips, driven our first son around France and Spain, had her hair pulled by strangers in Malaysia, taken my parents to Tanzania for a month (their first international trip), had a second son, bought and sold a few houses, and had more fun that you can know in the process. We fight fair and make up. We respect each other.  &lt;p&gt;As she (we?) is/are fond of saying:  &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;"Eight years? Feels like twelve!" &lt;/em&gt; &lt;p&gt;&lt;em&gt;To which I always reply, "What were we THINKING?!"&lt;/em&gt;  &lt;p&gt;&lt;em&gt;"We weren't!"&lt;/em&gt;  &lt;p&gt;&lt;em&gt;"Madness!"&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Madness indeed, my love. Happy Anniversary. I hope you renew me for another eight.&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=73NGgh"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=73NGgh" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=t5jBM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=t5jBM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=4o2wm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=4o2wm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=dCNwM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=dCNwM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=KXnom"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=KXnom" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=aYGQm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=aYGQm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=Fw9oM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=Fw9oM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/431575931" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=fc88fdae-7529-441d-afbf-4c6d8a2b4a75</comments>
      <category>Musings</category>
    <feedburner:origLink>http://www.hanselman.com/blog/HappyEighthAnniversary.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=fd33ab47-4792-4e32-bad9-ff4d2188267a</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=fd33ab47-4792-4e32-bad9-ff4d2188267a</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=fd33ab47-4792-4e32-bad9-ff4d2188267a</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=fd33ab47-4792-4e32-bad9-ff4d2188267a</wfw:commentRss>
      <slash:comments>25</slash:comments>
      <title>PDC 2008: New .NET Logo</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=fd33ab47-4792-4e32-bad9-ff4d2188267a</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/431537696/PDC2008NewNETLogo.aspx</link>
      <pubDate>Sat, 25 Oct 2008 08:33:37 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;It's official. There's a &lt;a href="http://blogs.msdn.com/msmossyblog/archive/2008/10/25/embrace-the-new-net-logo.aspx"&gt;&lt;strong&gt;new .NET logo&lt;/strong&gt;&lt;/a&gt;. It's 'the wave' and it's a nice refresh of the now 8-year old original .NET logo. Here's the logo on a light background and a dark background, oriented both horizontally and vertically.&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/New.NETLogo_14BC/newdotnetlogo_2.png"&gt;&lt;img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="253" alt="newdotnetlogo" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/New.NETLogo_14BC/newdotnetlogo_thumb.png" width="520" border="0"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;I liked the new logo so much that even though it's not available on our internal ordering system yet, I had a batch of custom business cards printed with it. If you see me around PDC this week, I'll be happy to give you one! :)&lt;/p&gt; &lt;p&gt;Just one of the new things that are coming up this week at &lt;a href="http://www.microsoftpdc.com/"&gt;PDC&lt;/a&gt;.&lt;/p&gt; &lt;div class="wlWriterSmartContent" id="scid:0767317B-992E-4b12-91E0-4F059A8CECA8:09dbe3c1-7397-416a-9e40-bb34df1a1b3b" style="padding-right: 0px; display: inline; padding-left: 0px; float: none; padding-bottom: 0px; margin: 0px; padding-top: 0px"&gt;Technorati Tags: &lt;a href="http://technorati.com/tags/PDC08" rel="tag"&gt;PDC08&lt;/a&gt;,&lt;a href="http://technorati.com/tags/PDC2008" rel="tag"&gt;PDC2008&lt;/a&gt;,&lt;a href="http://technorati.com/tags/.NET" rel="tag"&gt;.NET&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=2JaQhZ"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=2JaQhZ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=lo85M"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=lo85M" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=93lcm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=93lcm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=aGq0M"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=aGq0M" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ieRdm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ieRdm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=QY4cm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=QY4cm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=aNyRM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=aNyRM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/431537696" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=fd33ab47-4792-4e32-bad9-ff4d2188267a</comments>
      <category>PDC</category>
    <feedburner:origLink>http://www.hanselman.com/blog/PDC2008NewNETLogo.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=aa479008-3d1e-45fc-b89f-e9c2ffc199c1</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=aa479008-3d1e-45fc-b89f-e9c2ffc199c1</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=aa479008-3d1e-45fc-b89f-e9c2ffc199c1</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=aa479008-3d1e-45fc-b89f-e9c2ffc199c1</wfw:commentRss>
      <slash:comments>24</slash:comments>
      <title>The Weekly Source Code 35 - Zip Compressing ASP.NET Session and Cache State</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=aa479008-3d1e-45fc-b89f-e9c2ffc199c1</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/429004251/TheWeeklySourceCode35ZipCompressingASPNETSessionAndCacheState.aspx</link>
      <pubDate>Wed, 22 Oct 2008 22:21:26 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;Recently &lt;a href="http://www.hanselman.com/blog/HanselminutesPodcast134StackOverflowUsesASPNETMVCJeffAtwoodAndHisTechnicalTeam.aspx"&gt;while talking to Jeff Atwood and his development team&lt;/a&gt; about &lt;a href="http://www.stackoverflow.com"&gt;StackOverflow&lt;/a&gt; he mentioned that he compresses the Cache or Session data in ASP.NET which enables him to store about 5-10x more data. They do it with some helper methods but I thought it'd be interesting to try it myself.&lt;/p&gt;  &lt;p&gt;There's a lot of options and thoughts and quasi-requirements on how to pull this off:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;I could create my own SessionStateModule, basically replacing the default Session state mechanism completely. &lt;/li&gt;    &lt;li&gt;I could create a number of extension methods to HttpSessionState. &lt;/li&gt;    &lt;li&gt;I could just use helper methods, but that means I have to remember to use them on the in and the out and it doesn't &lt;em&gt;feel &lt;/em&gt;like the way I'd use it day to day. However, the benefit to this approach is that it's very VERY simple and I can zip up whatever I want, whenever, and put it wherever. &lt;/li&gt;    &lt;li&gt;I didn't want to accidentally put something in zipped and take it out unzipped. I want to avoid collisions. &lt;/li&gt;    &lt;li&gt;I'm primarily concerned about storing strings (read: angle brackets), rather than binary serialization and compression of objects. &lt;/li&gt;    &lt;li&gt;I want to be able to put zipped stuff in the Session, Application and Cache. I realized that this was the primary requirement. I didn't realize it until I started writing code from the &lt;strong&gt;outside. &lt;/strong&gt;Basically, TDD, using the non-existent library in real websites. &lt;/li&gt; &lt;/ul&gt;  &lt;h3&gt;My False Start&lt;/h3&gt;  &lt;p&gt;I initially thought I wanted it to look and work like this:&lt;/p&gt;  &lt;pre class="c#:nocontrols" name="code"&gt;Session.ZippedItems[&amp;quot;foo&amp;quot;] = someLargeThing;&lt;br /&gt;someLargeThing = Session.ZippedItems[&amp;quot;foo&amp;quot;]; //string is implied&lt;/pre&gt;

&lt;p&gt;But you can't do extension properties (rather than extension methods) or operator overloading.&lt;/p&gt;

&lt;p&gt;Then I though I'd do it like this:&lt;/p&gt;

&lt;pre class="c#:nocontrols" name="code"&gt;public static class ZipSessionExtension&lt;br /&gt;{&lt;br /&gt;    public static object GetZipItem(this HttpSessionState s, string key)&lt;br /&gt;    {&lt;br /&gt;        //go go go &lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;

&lt;p&gt;And have GetThis and SetThat all over...but that didn't feel right either. &lt;/p&gt;

&lt;h3&gt;How It Should Work&lt;/h3&gt;

&lt;p&gt;So I ended up with this once I re-though the requirements. I realized I'd want it to work like this:&lt;/p&gt;

&lt;pre class="c#:nocontrols" name="code"&gt;Session[&amp;quot;foo&amp;quot;] = &amp;quot;Session: this is a test of the emergency broadcast system.&amp;quot;;&lt;br /&gt;Zip.Session[&amp;quot;foo&amp;quot;] = &amp;quot;ZipSession this is a test of the emergency broadcast system.&amp;quot;;&lt;br /&gt;string zipsession = Zip.Session[&amp;quot;foo&amp;quot;];&lt;br /&gt;Cache[&amp;quot;foo&amp;quot;] = &amp;quot;Cache: this is a test of the emergency broadcast system.&amp;quot;;&lt;br /&gt;Zip.Cache[&amp;quot;foo&amp;quot;] = &amp;quot;ZipCache: this is a test of the emergency broadcast system.&amp;quot;;&lt;br /&gt;string zipfoo = Zip.Cache[&amp;quot;foo&amp;quot;];&lt;/pre&gt;

&lt;p&gt;Once I realized how it SHOULD work, I wrote it. There's a few interesting things I used and re-learned.&lt;/p&gt;

&lt;p&gt;I initially wanted the properties to be indexed properties and I wanted to be able to type &amp;quot;Zip.&amp;quot; and get intellisense. I named the class Zip and made it static. There's two static properties name Session and Cache respectively. They each have an indexer, which makes Zip.Session[&amp;quot;&amp;quot;] and Zip.Cache[&amp;quot;&amp;quot;] work. I prepended the word &amp;quot;zip&amp;quot; to the front of the key in order to avoid collisions with uncompressed content, and to create the illusion there were two different places.&lt;/p&gt;

&lt;pre class="c#:nocontrols" name="code"&gt;using System.IO;&lt;br /&gt;using System.IO.Compression;&lt;br /&gt;using System.Diagnostics;&lt;br /&gt;using System.Web;&lt;br /&gt;&lt;br /&gt;namespace HanselZip&lt;br /&gt;{&lt;br /&gt;    public static class Zip&lt;br /&gt;    {&lt;br /&gt;        public static readonly ZipSessionInternal Session = new ZipSessionInternal();&lt;br /&gt;        public static readonly ZipCacheInternal Cache = new ZipCacheInternal();&lt;br /&gt;&lt;br /&gt;        public class ZipSessionInternal&lt;br /&gt;        {&lt;br /&gt;            public string this[string index]&lt;br /&gt;            {&lt;br /&gt;                get&lt;br /&gt;                {&lt;br /&gt;                    return GZipHelpers.DeCompress(HttpContext.Current.Session[&amp;quot;zip&amp;quot; + index] as byte[]);&lt;br /&gt;                }&lt;br /&gt;                set&lt;br /&gt;                {&lt;br /&gt;                    HttpContext.Current.Session[&amp;quot;zip&amp;quot; + index] = GZipHelpers.Compress(value);&lt;br /&gt;                }&lt;br /&gt;            }&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        public class ZipCacheInternal&lt;br /&gt;        {&lt;br /&gt;            public string this[string index]&lt;br /&gt;            {&lt;br /&gt;                get&lt;br /&gt;                {&lt;br /&gt;                    return GZipHelpers.DeCompress(HttpContext.Current.Cache[&amp;quot;zip&amp;quot; + index] as byte[]);&lt;br /&gt;                }&lt;br /&gt;                set&lt;br /&gt;                {&lt;br /&gt;                    HttpContext.Current.Cache[&amp;quot;zip&amp;quot; + index] = GZipHelpers.Compress(value);&lt;br /&gt;                }&lt;br /&gt;            }&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        public static class GZipHelpers&lt;br /&gt;        {&lt;br /&gt;            public static string DeCompress(byte[] unsquishMe)&lt;br /&gt;            {&lt;br /&gt;                using (MemoryStream mem = new MemoryStream(unsquishMe))&lt;br /&gt;                {&lt;br /&gt;                    using (GZipStream gz = new GZipStream(mem, CompressionMode.Decompress))&lt;br /&gt;                    {&lt;br /&gt;                        var sr = new StreamReader(gz);&lt;br /&gt;                        return sr.ReadToEnd();&lt;br /&gt;                    }&lt;br /&gt;                }&lt;br /&gt;            }&lt;br /&gt;&lt;br /&gt;            public static byte[] Compress(string squishMe)&lt;br /&gt;            {&lt;br /&gt;                Trace.WriteLine(&amp;quot;GZipHelper: Size In:  &amp;quot; + squishMe.Length);&lt;br /&gt;                byte[] compressedBuffer = null;&lt;br /&gt;                using (MemoryStream stream = new MemoryStream())&lt;br /&gt;                {&lt;br /&gt;                    using (GZipStream zip = new GZipStream(stream, CompressionMode.Compress))&lt;br /&gt;                    {&lt;br /&gt;                        using (StreamWriter sw = new StreamWriter(zip))&lt;br /&gt;                        {&lt;br /&gt;                            sw.Write(squishMe);&lt;br /&gt;                        }&lt;br /&gt;                        //Dont get the MemoryStream data before the GZipStream is closed since it doesn’t yet contain complete compressed data.&lt;br /&gt;                        //GZipStream writes additional data including footer information when its been disposed&lt;br /&gt;                    }&lt;br /&gt;                    compressedBuffer = stream.ToArray();&lt;br /&gt;                    Trace.WriteLine(&amp;quot;GZipHelper: Size Out:&amp;quot; + compressedBuffer.Length);&lt;br /&gt;                }&lt;br /&gt;                return compressedBuffer;&lt;br /&gt;            }&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;

&lt;p&gt;Note that if the strings you put in are shorter than about 300 bytes, they will probably get LARGER. So, you'll probably only want to use these if have strings of more than a half K. More likely you'll use these if you have a few K or more. I figure these would be used for caching large chunks of HTML.&lt;/p&gt;

&lt;p&gt;As an aside, I used Trace.WriteLine to show the size in and the size out. Then, in the web.config I added this trace listener to make sure my Trace output from my external assembly showed up in the ASP.NET Tracing:&lt;/p&gt;

&lt;pre class="xml:nocontrols" name="code"&gt;&amp;lt;system.diagnostics&amp;gt;&lt;br /&gt;    &amp;lt;trace&amp;gt;&lt;br /&gt;        &amp;lt;listeners&amp;gt;&lt;br /&gt;            &amp;lt;add name=&amp;quot;WebPageTraceListener&amp;quot;&lt;br /&gt;                     type=&amp;quot;System.Web.WebPageTraceListener, System.Web, &lt;br /&gt;                     Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&amp;quot;/&amp;gt;&lt;br /&gt;        &amp;lt;/listeners&amp;gt;&lt;br /&gt;    &amp;lt;/trace&amp;gt;&lt;br /&gt;&amp;lt;/system.diagnostics&amp;gt;&lt;br /&gt;&amp;lt;system.web&amp;gt;&lt;br /&gt;    &amp;lt;trace pageOutput=&amp;quot;true&amp;quot; writeToDiagnosticsTrace=&amp;quot;true&amp;quot; enabled=&amp;quot;true&amp;quot;/&amp;gt;&lt;br /&gt;...&lt;/pre&gt;

&lt;p&gt;The resulting trace output is:&lt;/p&gt;

&lt;p&gt;&lt;img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/ZipCompress.NETSessionStateWebFormsorMVC_B956/image_3.png" width="652" height="274" /&gt; &lt;/p&gt;

&lt;h3&gt;When To Compress&lt;/h3&gt;

&lt;p&gt;See how the first zipped string got bigger? I shouldn't have put it in there, it was initially too small. The second one went from 1137 bytes to 186, so that was reasonably useful. Again, IMHO, this probably won't matter unless you were storing thousands of strings in cache that were grater than 1k, but as you get towards 10k or more, I suspect you'd get some more value.&lt;/p&gt;

&lt;p&gt;For example, if I put 17k of basic HTML in the cache, it squishes it 3756 bytes, a 78% savings. It all depends on how repetitive the markup is and how many visitors you have. If you had a thousand visitors on a machine simultaneously, and you were caching, say, 20 chunks of 100k each, times 1000 users, you'd use about 244 megs for your cache. When I was working in banking, we might have tens of thousands of users online at a time, and we'd be caching historical checking or savings data, and that data might get to 500k or more of XML. Four savings accounts * 70,000 users * 500k of XML history might be 16gigs of RAM (across many servers, so maybe a gig or half-gig per server.) Squishing that 500k to 70k would reduce the hit to 2gigs total. It all depends on how much you're storing, how much it'll compress (how repetitive it is) and how often it's accessed.&lt;/p&gt;

&lt;p&gt;Memcached 2 includes a setCompressThreshold that lets you adjust the minimum savings you want before it'll compress. I suspect &lt;a href="http://www.hanselman.com/blog/HanselminutesPodcast116DistributedCachingWithMicrosoftsVelocity.aspx"&gt;Velocity&lt;/a&gt; will have some similar setting.&amp;#160; &lt;/p&gt;

&lt;p&gt;Ultimately, however, this all means nothing unless you &lt;strong&gt;measure&lt;/strong&gt;. For example, all this memory savings might be useless if the data is being read and written constantly. You'd be trading any savings from squishing for other potential problems like the memory you need hold the decompressed values as well as memory fragmentation. Point is, DON'T just turn this stuff on without measuring.&lt;/p&gt;

&lt;p&gt;Nate Davis had a great comment on the StackOverflow show I wanted to share here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;If they are caching final page output in this way and they are already sending HTTP responses across the wire as gzip,
      &lt;br /&gt;then gzipping the output cache would make great sense. But only if they are NOT first unzipping when taking the page out of cache and then re-zipping it up again before sending the response.

      &lt;br /&gt;If they check the 'Accept-Encoding' header to make sure gzip is supported, then they can just send the gzipped output cache directly into the response stream and set the Encoding header with 'gzip'. If Accept-Encoding doesn't include gzip, then the cache would have to be unzipped, but this is a very small percentage of browsers.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nate is pointing out that one should think about HOW this data will be used. Are you caching and entire page or iFrame? If so, you might be able to send it right back out, &lt;em&gt;still compressed&lt;/em&gt; to the browser.&lt;/p&gt;

&lt;p&gt;However, if you've got IIS7 and you want to cache a whole page rather than just a per user fragment, consider using &lt;a href="http://blogs.msdn.com/tmarq/archive/2008/08/27/using-iis-7-0-dynamic-compression-with-asp-net-output-cache.aspx"&gt;IIS7's Dynamic Compression&lt;/a&gt;. You've already got this feature, and along with ASP.NET's OutputCaching, the system already knows about gzip compression. It'll store the gzipp'ed version and serve it directly.&lt;/p&gt;

&lt;h3&gt;My Conclusion?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;I might use something like this if I was storing large string fragments in a memory constrained situation. &lt;/li&gt;

  &lt;li&gt;I always turn compression on at the Web Server level. It's solving a different problem, but there's really NO reason for your web server to be serving uncompressed content. It's wasteful not to turn it on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thoughts? What is this missing? Useful? Not useful?&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=AIKL9F"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=AIKL9F" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=7PWzM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=7PWzM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=D2kmm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=D2kmm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=icZVM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=icZVM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=DrNYm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=DrNYm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ivhHm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ivhHm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ijbKM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ijbKM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/429004251" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=aa479008-3d1e-45fc-b89f-e9c2ffc199c1</comments>
      <category>ASP.NET</category>
      <category>ASP.NET MVC</category>
      <category>Open Source</category>
      <category>Source Code</category>
    <feedburner:origLink>http://www.hanselman.com/blog/TheWeeklySourceCode35ZipCompressingASPNETSessionAndCacheState.aspx</feedburner:origLink></item>
    <item>
      <trackback:ping>http://www.hanselman.com/blog/Trackback.aspx?guid=523cb099-bc1c-4ea4-abaf-21a6c73ec00e</trackback:ping>
      <pingback:server>http://www.hanselman.com/blog/pingback.aspx</pingback:server>
      <pingback:target>http://www.hanselman.com/blog/PermaLink.aspx?guid=523cb099-bc1c-4ea4-abaf-21a6c73ec00e</pingback:target>
      <dc:creator>Scott Hanselman</dc:creator>
      <wfw:comment>http://www.hanselman.com/blog/CommentView.aspx?guid=523cb099-bc1c-4ea4-abaf-21a6c73ec00e</wfw:comment>
      <wfw:commentRss>http://www.hanselman.com/blog/SyndicationService.asmx/GetEntryCommentsRss?guid=523cb099-bc1c-4ea4-abaf-21a6c73ec00e</wfw:commentRss>
      <slash:comments>47</slash:comments>
      <title>Survey RESULTS: What .NET Framework features do you use?</title>
      <guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=523cb099-bc1c-4ea4-abaf-21a6c73ec00e</guid>
      <link>http://feeds.feedburner.com/~r/ScottHanselman/~3/428835841/SurveyRESULTSWhatNETFrameworkFeaturesDoYouUse.aspx</link>
      <pubDate>Wed, 22 Oct 2008 18:42:51 GMT</pubDate>
      <description>&lt;div&gt;&lt;p&gt;Here's the results, as promised, of the &lt;a href="http://www.hanselman.com/blog/SurveyTimeWhatNETFrameworkFeaturesDoYouUse.aspx"&gt;.NET Survey I took last week&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Also, here's the disclaimer. I did this on a whim, it's not scientific, so the margin of error is +/-101%. That said, the results feel intuitively right to me, personally. &lt;/p&gt; &lt;p&gt;It was a single question with 14 checkboxes. You were asked to "check al the .NET Framework features that you use in your projects." The results are here after 4899 responses:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/3cd0a973d675_9B20/image_2.png"&gt;&lt;img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="465" alt="image" src="http://www.hanselman.com/blog/content/binary/WindowsLiveWriter/3cd0a973d675_9B20/image_thumb.png" width="640" border="0"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;There were lots of good responses on &lt;a href="http://www.twitter.com/shanselman"&gt;Twitter&lt;/a&gt; and comments on the &lt;a href="http://www.hanselman.com/blog/SurveyTimeWhatNETFrameworkFeaturesDoYouUse.aspx"&gt;original blog post&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Folks wanted choices like "Other," "None" and "I don't use .NET." Of course, &lt;strong&gt;not &lt;/strong&gt;answering the survey is a good way of reporting that. ;) In fact, 29 people looked at the survey, checked nothing and then just clicked Finish.&lt;/p&gt; &lt;p&gt;Here's some choice feedback:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;A raw survey like this will be biased towards "new and cool stuff".&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Sure you ain't shopping for an answer?...I use datareaders a lot. And datarepeaters. Everything else goes clunk.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Where's Silverlight?&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;No Linq-to-Objects?&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;I organized the survey in terms of what I called "subsystems." You could also say "product teams," I suppose. It was more trying to get a sense of the tools people reach for when they start a project.&lt;/p&gt; &lt;p&gt;I probably could have included IIS6, II7, etc., but I'm sure it would have gotten unruly. I could have included languages as well, but that feels like another survey. The one thing I regret not including was Silverlight. I wanted to add it, but by the time I'd realized it, I had already got 1000+ results and I decided adding it at that point would skew the results.&lt;/p&gt; &lt;p&gt;Of course, this could have been a multi-question, multi-page survey, but they you probably wouldn't have filled it out, right? I wanted to find a balance between getting a LARGE enough number of responses and getting data that's useful in some way to both you, Dear Reader, as well as the bosses I'll show it to.&lt;/p&gt; &lt;p&gt;As with all online surveys, this one is worth exact the paper its printed on. :) If you think it is useful, cool, if not, it only wasted 5 seconds of your time when you filled it out. Thanks for filling it out. &lt;/p&gt; &lt;p&gt;What is your analysis of the results?&lt;/p&gt;&lt;br/&gt;&lt;hr/&gt;© 2008 Scott Hanselman. All rights reserved. &lt;br/&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/ScottHanselman?a=pRiRYX"&gt;&lt;img src="http://feeds.feedburner.com/~a/ScottHanselman?i=pRiRYX" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=L350M"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=L350M" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=D5lvm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=D5lvm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=NbXxM"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=NbXxM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=OKEym"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=OKEym" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=ANdEm"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=ANdEm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/ScottHanselman?a=wpf8M"&gt;&lt;img src="http://feeds.feedburner.com/~f/ScottHanselman?i=wpf8M" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ScottHanselman/~4/428835841" height="1" width="1"/&gt;</description>
      <comments>http://www.hanselman.com/blog/CommentView.aspx?guid=523cb099-bc1c-4ea4-abaf-21a6c73ec00e</comments>
      <category>ASP.NET</category>
      <category>ASP.NET Dynamic Data</category>
      <category>ASP.NET MVC</category>
      <category>Learning .NET</category>
      <category>Programming</category>
      <category>Web Services</category>
      <category>Windows Client</category>
      <category>WPF</category>
    <feedburner:origLink>http://www.hanselman.com/blog/SurveyRESULTSWhatNETFrameworkFeaturesDoYouUse.aspx</feedburner:origLink></item>
  </channel>
</rss>
