<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="http://feeds.feedburner.com/~d/styles/atom10full.xsl" type="text/xsl" media="screen"?><?xml-stylesheet href="http://feeds.feedburner.com/~d/styles/itemcontent.css" type="text/css" media="screen"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/"><id>tag:blogger.com,1999:blog-8877325777086061039</id><updated>2008-12-08T20:32:02.381-08:00</updated><title type="text">Nihilogic</title><subtitle type="html">Bending and breaking the web. Experiments in the world of JavaScript, DHTML, CSS, Ajax, Web 2.0 and maybe even other fine buzzwords.</subtitle><link rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/posts/default" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/" /><link rel="next" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default?start-index=26&amp;max-results=25&amp;redirect=false&amp;v=2" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><generator version="7.00" uri="http://www.blogger.com">Blogger</generator><openSearch:totalResults>58</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><link rel="self" href="http://feeds.feedburner.com/nihilogic" type="application/atom+xml" /><feedburner:emailServiceId xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">1797932</feedburner:emailServiceId><feedburner:feedburnerHostname xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0">http://www.feedburner.com</feedburner:feedburnerHostname><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-5739822285686273930</id><published>2008-12-03T03:30:00.000-08:00</published><updated>2008-12-03T07:12:40.267-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-12-03T07:12:40.267-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="pixastic" /><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="image processing" /><category scheme="http://www.blogger.com/atom/ns#" term="canvas" /><title type="text">Pixastic - Now a JavaScript image processing library</title><content type="html">&lt;span class='post-summary'&gt;
&lt;a href="http://www.pixastic.com/" target="_blank"&gt;&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/STZzUcX3PEI/AAAAAAAAASI/Wq_0P9kW9_A/s200/pixastic_javascript_image_editor.png" style="float:left;margin-right:10px;" alt="Pixastic JavaScript Image Editor"/&gt;&lt;/a&gt;

So, a while ago I played around with applying different effects to images by using the canvas element. The result was a small library that I &lt;a href="http://blog.nihilogic.dk/2008/03/jsimagefx-javascript-image-effects.html"&gt;posted about here&lt;/a&gt;. A bit later, I took some of that code and turned it into a small &lt;a href="http://blog.nihilogic.dk/2008/06/pixastic-photo-editing-with-javascript.html"&gt;image editing application&lt;/a&gt; that I dubbed Pixastic, 
the most web 2.0 name I could think of. Now I've ripped out the filtering parts and turned it back into an image processing library, also called Pixastic. 
&lt;/span&gt;&lt;br/&gt;
&lt;br/&gt;

You should check out the &lt;a href="http://www.pixastic.com/" target="_blank"&gt;Pixastic site&lt;/a&gt; if you want the whole low down on what it does, but here's a quick summary. The Pixastic library allows you to apply a variety of effects or "actions" on an image. For most of the effects, the magic is done by painting the image on a &lt;code&gt;canvas&lt;/code&gt; element and then accessing the raw pixel data via the &lt;code&gt;getImageData&lt;/code&gt; and &lt;code&gt;putImageData&lt;/code&gt; methods. Currently available actions are:

&lt;ul&gt;
&lt;li&gt;Blur&lt;/li&gt;
&lt;li&gt;Brightness/Contrast&lt;/li&gt;
&lt;li&gt;Crop&lt;/li&gt;
&lt;li&gt;Desaturate&lt;/li&gt;
&lt;li&gt;Edge Detection&lt;/li&gt;
&lt;li&gt;Emboss&lt;/li&gt;
&lt;li&gt;Flip Horizontally/Vertically
&lt;li&gt;Glow&lt;/li&gt;
&lt;li&gt;Histogram&lt;/li&gt;
&lt;li&gt;Hue/Saturation/Lightness&lt;/li&gt;
&lt;li&gt;Invert&lt;/li&gt;
&lt;li&gt;Laplace Edge Detection&lt;/li&gt;
&lt;li&gt;Lighten&lt;/li&gt;
&lt;li&gt;Noise&lt;/li&gt;
&lt;li&gt;Posterize&lt;/li&gt;
&lt;li&gt;Remove Noise&lt;/li&gt;
&lt;li&gt;Sepia&lt;/li&gt;
&lt;li&gt;Sharpen&lt;/li&gt;
&lt;li&gt;Unsharp Mask&lt;/li&gt;
&lt;/ul&gt;

The effects can be applied either via JavaScript or by specifying CSS class names on the image elements in the DOM.
With JavaScript, it boils down to doing something like:
&lt;pre name="code" class="javascript"&gt;
Pixastic.process(
 document.getElementById("myImage"), 
 "blur", 
 {amount:0.5}
);
&lt;/pre&gt;
And with CSS classes the same would be done like this:
&lt;pre name="code" class="html"&gt;
  &amp;lt;img src="myimage.jpg" class="pixastic pixastic-blur(amount=0.5)" /&amp;gt;
&lt;/pre&gt;
In the &lt;code&gt;canvas&lt;/code&gt;-less IE, the effects are applied (when possible) with the proprietary IE filters. There's also some basic jQuery support that you can read more about on the Pixastic site. 
&lt;br/&gt;&lt;br/&gt;
&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/STZzRTqLuMI/AAAAAAAAASA/hijcahZ-GC8/s400/pixastic_hsl_demo.png" style="float:right;margin-left:10px;" alt="Live demo of HSL action"/&gt;
This new library has its own site at &lt;a href="http://www.pixastic.com/lib/" target="_blank"&gt;http://www.pixastic.com/lib/&lt;/a&gt; (the editor has been moved to &lt;a href="http://editor.pixastic.com/" target="_blank"&gt;http://editor.pixastic.com/&lt;/a&gt;).
There are live demos of all the actions in the &lt;a href="http://www.pixastic.com/lib/docs/"&gt;documentation&lt;/a&gt;, as well as descriptions of parameters and all that.
&lt;br/&gt;&lt;br/&gt;
Also, unlike the previous library, this code freely available under the terms of the MIT license.
&lt;br/&gt;&lt;br/&gt;
&lt;a href="http://www.pixastic.com/" target="_blank"&gt;Check it all out here&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
All feedback, bugreports, contributions, etc. are of course much appreciated.
&lt;br/&gt;&lt;br/&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=qiRuzH"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=qiRuzH" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=8rKSO"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=8rKSO" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=jIvUo"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=jIvUo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=oiLzo"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=oiLzo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=rVMLo"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=rVMLo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=AI1YO"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=AI1YO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/5739822285686273930/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/12/pixastic-now-javascript-image.html#comment-form" title="10 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5739822285686273930?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5739822285686273930?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/12/pixastic-now-javascript-image.html" title="Pixastic - Now a JavaScript image processing library" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_OjchJpvqFiw/STZzUcX3PEI/AAAAAAAAASI/Wq_0P9kW9_A/s72-c/pixastic_javascript_image_editor.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">10</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-273359949352497187</id><published>2008-11-28T08:32:00.000-08:00</published><updated>2008-11-28T08:38:22.261-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-11-28T08:38:22.261-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="misc" /><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><title type="text">W3C Markup Validation with JavaScript</title><content type="html">&lt;span class='post-summary'&gt;
I was just reading up on the &lt;a href="http://validator.w3.org/docs/api.html" target="_blank" rel="nofollow"&gt;validator API&lt;/a&gt; over at the W3C site 
and saw that when you call the validator URL, the results are also put in the HTTP 
response headers. That's pretty cool, I thought, and remembered one of &lt;a href="http://simonwillison.net/2008/Jul/29/jsonhead/"&gt;Simon Willison&lt;/a&gt;'s small &lt;a href="http://en.wikipedia.org/wiki/JSON" class="wiki-summary-link"&gt;JSON-P&lt;/a&gt; tools called &lt;a href="http://simonwillison.net/2008/Jul/29/jsonhead/" target="_blank"&gt;json-head&lt;/a&gt;. 
What json-head does is let you do a HEAD request for an arbitrary URL. 
It then returns the headers, optionally calling a specified callback function. 
So, what I've done is glue these two together to create a small function that lets 
you validate a URL with a single JavaScript function call.&lt;/span&gt;&lt;br/&gt;

&lt;h4&gt;Example usage:&lt;/h4&gt;
&lt;pre name="code" class="javascript"&gt;
validate("http://www.google.com/",
 function(response) {
  alert(
   "URL: " + response.url + "\n"
   + "Status: " + response.status + "\n"
   + "Errors: " + response.errors + "\n"
   + "Warnings: " + response.warnings + "\n"
   + "Recursion: " + response.recursion
  );
 }
);
&lt;/pre&gt;

As you can see, the &lt;code&gt;validate()&lt;/code&gt; function takes two arguments, the URL to validate and a callback function. The callback function is given a response object that carries the properties as seen in the example. You can also provide an optional third argument which is a function that will be called should something go wrong (only some errors are currently caught by this).
The meaning of the properties are as follows (taken from &lt;a href="http://validator.w3.org/docs/api.html#http_headers" target="_blank" rel="nofollow"&gt;http://validator.w3.org/docs/api.html#http_headers&lt;/a&gt;, go there for more details):&lt;br/&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;status:&lt;/b&gt; 
&lt;code&gt;Valid&lt;/code&gt; or &lt;code&gt;Invalid&lt;/code&gt; if validation was performed.&lt;br /&gt;
          value will be &lt;code&gt;Abort&lt;/code&gt; if a fatal error (decoding, 404 not found, etc) was encountered and validation could not be performed&lt;/li&gt;

&lt;li&gt;&lt;b&gt;errors:&lt;/b&gt; 
Number of Errors found during validation. &lt;code&gt;0&lt;/code&gt; if no errors found.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;warnings:&lt;/b&gt; 
Number of Warnings found during validation. &lt;code&gt;0&lt;/code&gt; if no errors found.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;recursion:&lt;/b&gt; 
Integer. Generally, &lt;code&gt;1&lt;/code&gt;. More if recursively validating validation results. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Demo&lt;/h4&gt;

&lt;script type="text/javascript" src="http://www.nihilogic.dk/labs/validate/validate.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;

function test(url) {
 validate(url,
  function(response) {
   alert(
    "URL: " + response.url + "\n"
    + "Status: " + response.status + "\n"
    + "Errors: " + response.errors + "\n"
    + "Warnings: " + response.warnings + "\n"
    + "Recursion: " + response.recursion
   );
  }
 );

}
&lt;/script&gt;
&lt;input type="button" value="Validate www.google.com" onclick="test('http://www.google.com');"/&gt;
&lt;input type="button" value="Validate www.w3.org" onclick="test('http://www.w3.org/');"/&gt;

&lt;h4&gt;Download&lt;/h4&gt;

&lt;a href="http://www.nihilogic.dk/labs/validate/validate.js" target="_blank"&gt;validate.js&lt;/a&gt;

&lt;br/&gt;&lt;br/&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=zV7yc6"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=zV7yc6" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=rldgN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=rldgN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=TTdin"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=TTdin" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=XS68n"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=XS68n" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=xtakn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=xtakn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=JEMoN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=JEMoN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/273359949352497187/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/11/w3c-markup-validation-with-javascript.html#comment-form" title="2 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/273359949352497187?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/273359949352497187?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/11/w3c-markup-validation-with-javascript.html" title="W3C Markup Validation with JavaScript" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-343855120958752922</id><published>2008-11-28T03:16:00.000-08:00</published><updated>2008-11-28T03:26:53.624-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-11-28T03:26:53.624-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="games" /><category scheme="http://www.blogger.com/atom/ns#" term="elsewhere" /><category scheme="http://www.blogger.com/atom/ns#" term="3d" /><title type="text">Creating pseudo 3D games with HTML 5 canvas</title><content type="html">&lt;span class='post-summary'&gt;
&lt;a href="http://dev.opera.com/articles/view/creating-pseudo-3d-games-with-html-5-can-1/" imageanchor="1" target="_blank"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/_OjchJpvqFiw/SS_UWFFRO1I/AAAAAAAAAR4/1bJpdxqmvyc/s320/textured.png" style="float:left;margin-right:10px;height:160px;"/&gt;&lt;/a&gt;

Just a quick post to let you know that I've got an article up at &lt;a href="http://dev.opera.com/" target="_blank"&gt;Dev.Opera&lt;/a&gt; where I talk about creating a simple raycasting engine like the one I used in my &lt;a href="http://blog.nihilogic.dk/2008/07/wolfenflickr-3d-unlikely-mashup.html"&gt;WolfenFlickr&lt;/a&gt; project. &lt;a href="http://dev.opera.com/articles/view/creating-pseudo-3d-games-with-html-5-can-1/" target="_blank"&gt;Read the whole article here&lt;/a&gt;. Feel free to ask questions and leave comments both here and at dev.opera.com.
&lt;/span&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=v36S06"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=v36S06" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=9EGpN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=9EGpN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=dOoRn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=dOoRn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=DvRMn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=DvRMn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=ynSUn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=ynSUn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=ybBgN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=ybBgN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/343855120958752922/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/11/creating-pseudo-3d-games-with-html-5.html#comment-form" title="5 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/343855120958752922?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/343855120958752922?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/11/creating-pseudo-3d-games-with-html-5.html" title="Creating pseudo 3D games with HTML 5 canvas" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/_OjchJpvqFiw/SS_UWFFRO1I/AAAAAAAAAR4/1bJpdxqmvyc/s72-c/textured.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-5488064388603750661</id><published>2008-11-25T03:42:00.000-08:00</published><updated>2008-11-26T14:03:21.307-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-11-26T14:03:21.307-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="elsewhere" /><category scheme="http://www.blogger.com/atom/ns#" term="mashup" /><title type="text">From Mario Kart to map navigation</title><content type="html">&lt;span class="post-summary"&gt;
&lt;a href="http://ernestdelgado.com/archive/car-navigation-map-in-canvas/" imageanchor="1" target="_blank"&gt;&lt;img border="0" src="http://3.bp.blogspot.com/_OjchJpvqFiw/SSvlmQzI75I/AAAAAAAAARw/8qaVC0y2MCg/s320/gps.png" style="float:left;margin-right:10px;"/&gt;&lt;/a&gt;
Ernest Delgado has turned my &lt;a href="http://blog.nihilogic.dk/2008/05/javascript-super-mario-kart.html"&gt;Mario Kart demo&lt;/a&gt; into a map navigation tool. Neat! This just popped up in my referrer logs and caught my eye. Ernest Delgado has taken apart the code from my &lt;a href="http://blog.nihilogic.dk/2008/05/javascript-super-mario-kart.html"&gt;Mario Kart project&lt;/a&gt; and turned it into a cool map navigation demo that dynamically downloads map tiles from &lt;a href="http://openstreetmap.org/" target="_blank" rel="nofollow"&gt;http://openstreetmap.org/&lt;/a&gt;. Pretty cool, &lt;a href="http://ernestdelgado.com/archive/car-navigation-map-in-canvas/" target="_blank"&gt;check it out here&lt;/a&gt;, &lt;strike&gt;even if he keeps calling me Joshua&lt;/strike&gt; ok, he fixed the name :cool:
&lt;/span&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=o0rqlq"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=o0rqlq" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=pmcQN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=pmcQN" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=GIz0n"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=GIz0n" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Nd0Ln"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Nd0Ln" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=G0dRn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=G0dRn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=YwXAN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=YwXAN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/5488064388603750661/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/11/from-mario-kart-to-map-navigation.html#comment-form" title="4 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5488064388603750661?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5488064388603750661?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/11/from-mario-kart-to-map-navigation.html" title="From Mario Kart to map navigation" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/_OjchJpvqFiw/SSvlmQzI75I/AAAAAAAAARw/8qaVC0y2MCg/s72-c/gps.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-6510134715223311109</id><published>2008-11-20T03:37:00.001-08:00</published><updated>2008-11-20T06:22:44.831-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-11-20T06:22:44.831-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="flickr" /><category scheme="http://www.blogger.com/atom/ns#" term="canvas" /><category scheme="http://www.blogger.com/atom/ns#" term="math" /><category scheme="http://www.blogger.com/atom/ns#" term="mashup" /><title type="text">The FlickrBrot - Happy Birthday, Mandelbrot!</title><content type="html">&lt;span class="post-summary"&gt;
&lt;img border="0" src="http://4.bp.blogspot.com/_OjchJpvqFiw/SSVp1ZYf94I/AAAAAAAAARo/ixu-jvJPmlE/s320/flickrbrot.jpg" style="float:left;margin-right:10px;height:150px;" /&gt;
Today is the birthday of &lt;a href="http://www.math.yale.edu/mandelbrot/" target="_blank"&gt;Benoit Mandelbrot&lt;/a&gt;. 
About 30 years ago he pulled a bit of mathematical beauty out of his head that would make him father of what is called fractal geometry. 
Today, at 84, he's a retired Sterling Professor from Yale but is still getting awards thrown his way and even planets named after him. I thought I'd make something to mark his birthday since I've been playing a bit with fractals and JavaScript lately and because he's just damn cool.&lt;/span&gt;
If you haven't already, check out the &lt;a href="http://blog.nihilogic.dk/2008/09/mandelbrot-in-less-than-128-bytes-of.html"&gt;minimized sub-128 bytes Mandelbrot&lt;/a&gt; as well as the prettier and fancier &lt;a href="http://blog.nihilogic.dk/2008/10/23-pretty-javascript-fractals.html"&gt;Canvas fractal renderer&lt;/a&gt; to see the previous Mandelbrot related posts.  
&lt;br/&gt;&lt;br/&gt;
If you want to read more about the Mandelbrot set and fractals in general, I suggest you hit up &lt;a class="wiki-summary-link" href="http://en.wikipedia.org/wiki/Mandelbrot_set" rel="nofollow" target="_blank"&gt;Wikipedia&lt;/a&gt; (lots of juicy math!). 
What it comes down to, though, is that very simple formulas can produce the most fascinating, infinitely complex structures which in 
turn can be made into pretty pictures on a computer.&lt;br /&gt;
&lt;br /&gt;
So, what I've spent my morning doing is hacking together my fractal renderer with some of the &lt;a href="http://blog.nihilogic.dk/2008/10/getting-your-ascii-on-with-flickr.html"&gt;Flickr&lt;/a&gt; &lt;a href="http://blog.nihilogic.dk/2008/07/wolfenflickr-3d-unlikely-mashup.html"&gt;stuff&lt;/a&gt; I've also been doing. 
Instead of drawing colored pixels, it now pulls in a (limited) number of Flickr images and uses those to paint a visualization of the Mandelbrot set.&lt;br /&gt;
&lt;br /&gt;
You can add a parameter to the url to search for a specific query at Flickr, ie. &lt;a href="http://www.pixastic.com/labs/flickrbrot/?puppies" target="_blank"&gt;".../flickrbrot/?puppies"&lt;/a&gt;, although the images are 
painted so small it's pretty hard to discern what they really are. Searching for a specific color can sometimes produce a nicer looking 
result, ie. &lt;a href="http://www.pixastic.com/labs/flickrbrot/?orange" target="_blank"&gt;"?orange"&lt;/a&gt; or &lt;a href="http://www.pixastic.com/labs/flickrbrot/?purple" target="_blank"&gt;"?purple"&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
&lt;b&gt;Only Firefox, Opera and Webkit nightly!&lt;/b&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a href="http://www.pixastic.com/labs/flickrbrot/" target="_blank"&gt;Check it out here&lt;/a&gt;.
&lt;br/&gt;&lt;br/&gt;
&lt;span style="font-style:italic;"&gt;Suggested listening: &lt;a href="http://www.jonathancoulton.com/songdetails/Mandelbrot Set" target="_blank" rel="nofollow"&gt;Jonathan Coulton - Mandelbrot Set&lt;/a&gt;&lt;/span&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=ZoUhqt"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=ZoUhqt" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=WeZ4N"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=WeZ4N" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=5GCmn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=5GCmn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=zSrMn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=zSrMn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=9oBQn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=9oBQn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=usBQN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=usBQN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/6510134715223311109/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/11/flickrbrot-happy-birthday-mandelbrot.html#comment-form" title="3 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/6510134715223311109?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/6510134715223311109?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/11/flickrbrot-happy-birthday-mandelbrot.html" title="The FlickrBrot - Happy Birthday, Mandelbrot!" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/_OjchJpvqFiw/SSVp1ZYf94I/AAAAAAAAARo/ixu-jvJPmlE/s72-c/flickrbrot.jpg" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-8657505058806676481</id><published>2008-11-07T06:08:00.000-08:00</published><updated>2008-11-22T04:36:39.132-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-11-22T04:36:39.132-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="games" /><category scheme="http://www.blogger.com/atom/ns#" term="canvas" /><category scheme="http://www.blogger.com/atom/ns#" term="digg" /><title type="text">Digg Attack - A JavaScript Game</title><content type="html">&lt;span class="post-summary" style="font-style:italic;"&gt;

&lt;a href="http://www.pixastic.com/labs/digg_attack/" onclick="window.open('http://www.pixastic.com/labs/digg_attack/','digg_attack','width=788,height=582,location=no,toolbar=no,menubar=no,resizable=no');return false;"&gt;
&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SRRPAT4xgSI/AAAAAAAAARg/56PUStVZaqQ/s320/digg_attack_screenshot.png" alt="Play Digg Attack" style="float:left;margin-right:10px;height:150px;"/&gt;&lt;/a&gt;

A Digg-'em-up struggle against the overwhelming forces of social media.&lt;/span&gt;
&lt;br/&gt;&lt;br/&gt;
Impatient? &lt;a href="http://www.pixastic.com/labs/digg_attack/" onclick="window.open('http://www.pixastic.com/labs/digg_attack/','digg_attack','width=788,height=532,location=no,toolbar=no,menubar=no,resizable=no');return false;"&gt;Click to play Digg Attack!&lt;/a&gt; (read the intro screen for instructions) or keep reading for details and background.&lt;br/&gt;&lt;br/&gt;

This is something I started a good while ago but only just recently got into a playable state. The goal was to create a small game where the action is based on an external data source. It turns out that the &lt;a href="http://apidoc.digg.com/" target="_blank" rel="nofollow"&gt;Digg API&lt;/a&gt; fits that bill fine as it provides both varied data and a steady stream of it, and thus the product, in its current state, is an unusual 2D shooter where the flow of enemies is based on stories that are "dugg". 
&lt;p&gt;
&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SRRMBeNOZcI/AAAAAAAAAQw/TezVJEDuGk4/s320/heroes.png" alt="The Heroes" style="float:right;margin-left:10px;"/&gt;

The protagonists come in the form of a small flock of social media heroes, controlled by targets set by the player and influenced by various objects on the map. They are also somewhat autonomous as they use simple flocking mechanisms to stay close together and move as a group.&lt;/p&gt;
&lt;p&gt;
With the exception of the music, it uses only the Canvas element and regular DHTML and another goal was that I wanted it to feel "fluid" and be able to compete with similar Flash games, even when there was a lot going on on the screen. I think it meets this goal just fine, at least when played on a moderately sized box. I also know there are some decent optimizations to be done in there once I get around to it (ie. the explosions could be prerendered rather than dynamically created as they are now, etc.) On the sound side there is currently only background music. I had some sound effects going on with &lt;a href="http://www.schillmania.com/projects/soundmanager2/" target="_blank"&gt;SoundManager2&lt;/a&gt;, but it's giving me a bit of trouble, so I've sort of abandoned them for now. Also, apart from the vortex sprite and the prerendered text, all the graphics are created at runtime with Canvas drawing. 
&lt;/p&gt;&lt;p&gt;
The music is by &lt;a href="http://sectionz.com/album_detail.asp?albumID=248" target="_blank" rel="nofollow"&gt;friend_kami&lt;/a&gt; and &lt;a href="http://sectionz.com/detail.asp?rType=mp3&amp;SZID=27702" target="_blank" rel="nofollow"&gt;brainworks&lt;/a&gt;, all released under Creative Commons licenses and found at &lt;a href="http://sectionz.com/" target="_blank" rel="nofollow"&gt;SectionZ&lt;/a&gt;. 
&lt;/p&gt;

&lt;h4&gt;Ok, get on with it!&lt;/h4&gt;

You start each level with a number of heroes (ie. little blueish dudes). 

The game connects to Digg.com and as stories are dugg, enemies are spawned and enter the screen from either the left or the right side. The type and number of enemies spawned depend on how many diggs the story has received:&lt;br/&gt;&lt;br/&gt;

&lt;p&gt;
&lt;img border="0" src="http://4.bp.blogspot.com/_OjchJpvqFiw/SRRL9ucXDFI/AAAAAAAAAQQ/LcMRriv1xm8/s400/antiheroes.png" alt="Enemies of type 'Antihero'" style="float:left;margin-right:10px;clear:both;"/&gt;
&lt;b&gt;6-50 diggs&lt;/b&gt;: Antiheroes, similar to your heroes, but red (and evil!) Spawn in flocks of 2-7 antiheroes. These guys are small and weak but will nevertheless actively and tirelessly hunt your heroes.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SRRMDtishmI/AAAAAAAAARA/4fOQLL-kHAI/s320/predator.png" alt="Enemy of type 'Predator'" style="float:left;margin-right:10px;clear:both;" /&gt;
&lt;b&gt;51-500 diggs&lt;/b&gt;: Predators, larger and more dangerous. Coming in packs of 1-3 predators, these also actively hunt your heroes but are easier to out maneuver. Their larger size more than makes up for this, however.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SRRL_sq9EsI/AAAAAAAAAQg/DZQMFeq0FfU/s320/biggie.png" alt="Enemy of type 'Biggie'" style="float:left;margin-right:10px;clear:both;"/&gt;&lt;b&gt;501-infinity diggs&lt;/b&gt;: Biggies. Huge, slow and not very bright. These enemies wander around with no aim, just bouncing about the level. Are tougher to kill than the others, but move slowly.&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;

The goal is to survive - or at least try to - for a number of seconds (typically 60-120) before you autmatically proceed to the next level. If you are so unfortunate as to lose all your heroes (chances are good that you will), reinforcements will be sent in at the low, low cost of 25% of your currently accumulated score.&lt;br/&gt;&lt;br/&gt;

Don't worry if you keep dying almost immediately, just try again and the next round might be more forgiving. The difficulty varies in time due to the unpredictable nature of the data the enemies are based on. You might be unfortunate and run into a stream of high/medium profile diggs and be flooded with strong enemies, or you might be able to just cut your way through small groups of antiheroes for most of the level.&lt;br/&gt;

&lt;h4&gt;The levels&lt;/h4&gt;
As each level has a fixed amount of time, the ultimate goal is to get the highest score by the end of the last level. At present time there are a total 
of 12 levels with a combined game time of 15 minutes and 10 seconds.
&lt;br/&gt;&lt;br/&gt;

The first level is just an empty playing field. Later levels feature blocking structures, attractors/deflectors, zappers and even small black holes. Here's a quick overview of what you could be facing:
&lt;br/&gt;

&lt;p&gt;
&lt;img border="0" src="http://3.bp.blogspot.com/_OjchJpvqFiw/SRRMCU2fzII/AAAAAAAAAQ4/DC0_oleRxd8/s320/obstacle.png" alt="The corner of an obstacle block" style="float:left;margin-right:10px;clear:both;width:64px;height:64px;" /&gt;
&lt;b&gt;Blocks&lt;/b&gt;: These are simple impassable structures that block your path and/or divide the map in smaller sections.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;img border="0" src="http://3.bp.blogspot.com/_OjchJpvqFiw/SRRMAsvSd8I/AAAAAAAAAQo/q9RyfYML_qE/s320/director.png" alt="Director" style="float:left;margin-right:10px;clear:both;" /&gt;
&lt;b&gt;Directors&lt;/b&gt;: When you come in the range of a director, your heroes will feel a sudden urge to move in the direction of the arrow. They come in 4 flavours: up, down, left and right.&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SRRL-mKAYfI/AAAAAAAAAQY/to9XkSAr2Lc/s320/attractor.png" alt="Attractor" style="float:left;margin-right:10px;clear:both;" /&gt;
&lt;b&gt;Attractors&lt;/b&gt;: Much like the directors, these also affect your heroes' senses of direction but rather than make them move in a specific direction, your heroes are compelled to move towards the center of the attractor. Be careful as it can be hard to escape once you've become trapped.&lt;/p&gt;
&lt;p&gt;
&lt;img border="0" src="http://4.bp.blogspot.com/_OjchJpvqFiw/SRRMFRCAj1I/AAAAAAAAARQ/LCRaRmKSBvI/s400/repulsor.png" alt="Repulsor" style="float:left;margin-right:10px;clear:both;"/&gt;
&lt;b&gt;Repulsors&lt;/b&gt;: The twin sibling of the attractor, the repulsor does the exact opposite and make your heroes move away from the point of repulsor.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;img border="0" src="http://4.bp.blogspot.com/_OjchJpvqFiw/SRRMGXWcPgI/AAAAAAAAARY/vj3PdRDMyK8/s320/zapper.png" alt="Zapper" style="float:left;margin-right:10px;clear:both;" /&gt;
&lt;b&gt;Zapper&lt;/b&gt;: High powered electrical menaces that make short work of your magnificent heroes. Come within range of one of these bad boys and one of your heroes is sure to be toast. Fortunately it takes a second before the zapper is ready again.&lt;/p&gt;
&lt;p&gt;
&lt;img border="0" src="http://4.bp.blogspot.com/_OjchJpvqFiw/SRRMESwkT4I/AAAAAAAAARI/bsUbSSU6Qi0/s320/vortex.png" alt="Vortex" style="float:left;margin-right:10px;clear:both;width:64px;height:64px;" /&gt;
&lt;b&gt;Vortex&lt;/b&gt;: Gravitational pull will drag your heroes to the midst of these miniature black holes where nothing and everything meet and the very fabric of spacetime is torn apart (that includes your heroes).
&lt;/p&gt;
&lt;br/&gt;&lt;br/&gt;
Except for the walls and blocks, the enemies are not affected by any of these map objects.
&lt;h4&gt;Quick tips&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The enemies go for the collective (average) center of your heroes. You can exploit this by spreading your heroes out over the entire map.
&lt;li&gt;Even if you can't move through blocks, you can still shoot through them.&lt;/li&gt;
&lt;/ul&gt;

&lt;br/&gt;
Mostly tested in Firefox 3 but looks to be working in Opera 9.6 and Safari as well. If you get graphical glitches in Safari, try with a recent WebKit nightly. IE is of course a no go.&lt;br/&gt;&lt;br/&gt;

So, there are still a bunch of outstanding issues and stuff, but mostly it plays well. Actually, I'm not entirely satisfied with the gameplay yet and would like to evolve it a bit but I'm not sure in what direction. The whole "external data" part is up in the air as well. 
If you have any suggestions for changes, bug reports :( or just want to comment, please do so below. And post some high scores, even if you don't bother finishing all 12 levels!
&lt;br/&gt;&lt;br/&gt;
The general rules and the details about how to control your heroes are described on the intro screen, so make sure you read it.&lt;br/&gt;&lt;br/&gt;
&lt;a href="http://www.pixastic.com/labs/digg_attack/" onclick="window.open('http://www.pixastic.com/labs/digg_attack/','digg_attack','width=788,height=582,location=no,toolbar=no,menubar=no,resizable=no');return false;"&gt;Click to play Digg Attack!&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
And if you like it, why don't you...
&lt;div style=''&gt;
&lt;script type='text/javascript'&gt;
digg_url="http://blog.nihilogic.dk/2008/11/digg-attack-javascript-game.html?digg=rules";
&lt;/script&gt;
&lt;script src='http://digg.com/tools/diggthis.js' type='text/javascript'&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=SL4spu"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=SL4spu" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=5Tx4N"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=5Tx4N" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=JjDUn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=JjDUn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Orp0n"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Orp0n" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Mh0cn"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Mh0cn" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=1c2CN"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=1c2CN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/8657505058806676481/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/11/digg-attack-javascript-game.html#comment-form" title="15 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/8657505058806676481?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/8657505058806676481?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/11/digg-attack-javascript-game.html" title="Digg Attack - A JavaScript Game" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_OjchJpvqFiw/SRRPAT4xgSI/AAAAAAAAARg/56PUStVZaqQ/s72-c/digg_attack_screenshot.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">15</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-8314957384377285220</id><published>2008-10-22T11:42:00.000-07:00</published><updated>2008-10-22T12:40:44.098-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-10-22T12:40:44.098-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="wiki" /><category scheme="http://www.blogger.com/atom/ns#" term="fixes and updates" /><title type="text">Wiki Summary Box 0.1.2 update</title><content type="html">&lt;span class='post-summary'&gt;
A few updates to the Wiki Summary Box.&lt;br/&gt;
&lt;br/&gt;
The first change is that it now uses the proper &lt;a href="http://www.mediawiki.org/wiki/API" target="_blank" rel="nofollow"&gt;Mediawiki API&lt;/a&gt; to retrieve the article text instead of relying on the AppJet gateway. Of course now the user's browser has to download and parse the entire article text instead of just getting the small summary bit, but this way still feels a lot better. &lt;br/&gt;
&lt;/span&gt;
&lt;br/&gt;
Second, there is now a list of Wiki sources that the script checks against, making it more a general Wiki box rather than something tied to Wikipedia. Any links that match this list will get the summary box. Sources supported out of the box include &lt;a href="http://www.wikipedia.org/" target="_blank" rel="nofollow"&gt;Wikipedia&lt;/a&gt;, &lt;a href="http://www.wikiquote.org/" target="_blank" rel="nofollow"&gt;Wikiquote&lt;/a&gt;, &lt;a href="http://species.wikimedia.org/" target="_blank" rel="nofollow"&gt;Wikispecies&lt;/a&gt;, &lt;a href="http://www.wikinews.org/" target="_blank" rel="nofollow"&gt;Wikinews&lt;/a&gt;, &lt;a href="http://www.wikisource.org/" target="_blank" rel="nofollow"&gt;Wikisource&lt;/a&gt;, &lt;a href="http://www.wikibooks.org/" target="_blank" rel="nofollow"&gt;Wikibooks&lt;/a&gt;, &lt;a href="http://www.wiktionary.org/" target="_blank" rel="nofollow"&gt;Wiktionary&lt;/a&gt; and &lt;a href="http://www.wikiversity.org/" target="_blank" rel="nofollow"&gt;Wikiversity&lt;/a&gt;. It's relatively easy to add more sources, just be sure that the Wiki is a Mediawiki and that the API is available. There is more info in the JavaScript file about this. And do note that if the Wiki is very different from Wikipedia, the script might not be able to extract anything and/or look odd. The Wiki text can of course be styled with CSS like anything else, but you'll have to find the class names / element id's yourself. This has already been done to hide some elements from Wiktionary and Wikispecies.&lt;br/&gt;
&lt;br/&gt;
If you know of any other Wikis that would be interesting to add, please leave a comment!&lt;br/&gt;
&lt;br/&gt;
An 'loading' indicator has been added. As it is now, it's just a simple text that says "Loading..." but it's easily changed and styled in the CSS file if that's not good enough.&lt;br/&gt;
&lt;br/&gt;
I've also added a small delay before showing and hiding the box, default is 200 and 300 ms, respectively. You can find these at the very top of the script if you want to alter them.&lt;br/&gt;
&lt;br/&gt;
Also, I had to make an ugly workaround to deal with IE's inability to handle relative paths in the href attribute on links. I hope I can find a better way..&lt;br/&gt;
&lt;br/&gt;
&lt;b&gt;Test links:&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
Wikiquote test: &lt;a class="wiki-summary-link" href="http://en.wikiquote.org/wiki/Albert_Einstein" target="_blank" rel="nofollow"&gt;Albert Einstein&lt;/a&gt;
&lt;br/&gt;
Wikinews test: &lt;a class="wiki-summary-link" href="http://en.wikinews.org/wiki/Church_of_Scientology_falsely_accuses_internet_group_%27Anonymous%27_of_2007_school_shooting" target="_blank" rel="nofollow"&gt;Scientology vs. Anonymous&lt;/a&gt;
&lt;br/&gt;
Wikisource test: &lt;a class="wiki-summary-link" href="http://en.wikisource.org/wiki/Barack_Obama%27s_Announcement_to_Run_for_U.S._President" target="_blank" rel="nofollow"&gt;Obama saves the day&lt;/a&gt;
&lt;br/&gt;
Wikispecies test: &lt;a class="wiki-summary-link" href="http://species.wikimedia.org/wiki/Tyrannosaurus_rex" target="_blank" rel="nofollow"&gt;Tyrannosaurus rex&lt;/a&gt;, &lt;a class="wiki-summary-link" href="http://species.wikimedia.org/wiki/Eukaryota" target="_blank" rel="nofollow"&gt;Eukaryota&lt;/a&gt;
&lt;br/&gt;
Wiktionary test: &lt;a class="wiki-summary-link" href="http://en.wiktionary.org/wiki/consequently" target="_blank" rel="nofollow"&gt;consequently&lt;/a&gt;
&lt;br/&gt;
Wikiversity test: &lt;a class="wiki-summary-link" href="http://en.wikiversity.org/wiki/Study_guide:Quantum_mechanics_I" target="_blank" rel="nofollow"&gt;Quantum mechanics study guide&lt;/a&gt;
&lt;br/&gt;
Wikibooks test: &lt;a class="wiki-summary-link" href="http://en.wikibooks.org/wiki/Linear_Algebra" target="_blank" rel="nofollow"&gt;Linear algebra&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;
Thanks for the feedback in the earlier post!&lt;br/&gt;
&lt;br/&gt;
Current version: 0.1.2&lt;br/&gt;
Files: &lt;a href="http://www.nihilogic.dk/labs/wikipedia_summary/sumbox.js" rel="nofollow"&gt;sumbox.js&lt;/a&gt; and 
&lt;a href="http://www.nihilogic.dk/labs/wikipedia_summary/sumbox.css" rel="nofollow"&gt;sumbox.css&lt;/a&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=v6D54n"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=v6D54n" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=k3m1M"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=k3m1M" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=4ldGm"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=4ldGm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=ZMb6m"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=ZMb6m" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Wfeim"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Wfeim" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=7vavM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=7vavM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/8314957384377285220/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/10/wiki-summary-box-012-update.html#comment-form" title="0 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/8314957384377285220?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/8314957384377285220?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/10/wiki-summary-box-012-update.html" title="Wiki Summary Box 0.1.2 update" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-3468119102513337787</id><published>2008-10-20T11:01:00.000-07:00</published><updated>2008-10-20T11:16:16.431-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-10-20T11:16:16.431-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="image" /><category scheme="http://www.blogger.com/atom/ns#" term="effects" /><title type="text">MojoZoom and MojoMagnify updates</title><content type="html">&lt;span class='post-summary'&gt;
&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SPzHwrUwrGI/AAAAAAAAANU/6vBeecNuwDE/s320-R/mojo.jpg" alt="MojoZoom and MojoMagnify - JavaScript image zoom and magnifying effects" style="float:left;margin-right:10px;" /&gt;
Looks like I promised a bug fix or two and failed to deliver. &lt;br/&gt;
&lt;br/&gt;
In case you missed the original posts, &lt;a href="http://www.nihilogic.dk/labs/mojozoom/"&gt;MojoZoom&lt;/a&gt; and &lt;a href="http://www.nihilogic.dk/labs/mojomagnify/"&gt;MojoMagnify&lt;/a&gt; are JavaScript effects that let you view high-res portions of images, creating a zoom- or magnification-like effect.&lt;/span&gt; You can read the original posts &lt;a href="http://blog.nihilogic.dk/2008/06/mojomagnify-javascript-image-magnifier.html"&gt;here&lt;/a&gt; and &lt;a href="http://blog.nihilogic.dk/2008/06/more-mojo.html"&gt;here&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;

They were initially created as a response to similar effects released by &lt;a href="http://www.magictoolbox.com" target="_blank" rel="nofollow"&gt;Magic Toolbox&lt;/a&gt;, the difference being that MojoZoom and MojoMagnify are free, released under the MIT license and uses only JavaScript and DOM.&lt;br/&gt;

&lt;h4&gt;MojoZoom&lt;/h4&gt;

There was a bug in IE where, if you moved the mouse really fast out of the image, the zoomed image would not disappear. This has been fixed.&lt;br/&gt;
&lt;br/&gt;
It was requested that it should be possible to make the zoomed image always show and not disappear on mouseout. For this purpose you can now use the attribute data-zoomalwaysshow="true" on the image (example on the demo page) just as an extra argument has been added to the MojoZoom.makeZoomable JavaScript function.&lt;br/&gt;
&lt;br/&gt;
It was also reported that MojoZoom would make IE7 crash, but I just can't get it to do that. If anyone has the same problem and feels like digging into the code a bit to try and find the cause, that would be much appreciated.&lt;br/&gt;
&lt;br/&gt;
Visit the &lt;a href="http://www.nihilogic.dk/labs/mojozoom/"&gt;MojoZoom page for demos and download links&lt;/a&gt;&lt;br/&gt;


&lt;h4&gt;MojoMagnify&lt;/h4&gt;

The same IE bug was present in MojoMagnify, so naturally that has been fixed as well. No other updates of note here.&lt;br/&gt;
&lt;br/&gt;
I also found some issues when the image was relative positioned that I think are resolved now.&lt;br/&gt;
&lt;br/&gt;
It still breaks if you use absolute positioning, but you can simply wrap the image in an absolutely positioned div if you need that.&lt;br/&gt;
&lt;br/&gt;
Visit the &lt;a href="http://www.nihilogic.dk/labs/mojomagnify/"&gt;MojoMagnify page for demos and download links&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Also, there have been some comments about the use of the data-* attributes and suggestions that I should consider using something else, but since they're just another one of the many great things to come from HTML5 and I'm a fanboy, I think I'm going to stick to them. If it really bothers your need for validation, it's really rather to find and replace it in the JavaScript files. Using the MojoMagnify.makeMagnifiable and MojoZoom.makeZoomable functions to add the effects eliminates this problem, of course.&lt;br/&gt;
&lt;br/&gt;

Finally, Giuseppe at &lt;a href="http://www.extrowebsite.com" target="_blank" rel="nofollow"&gt;extrowebsite.com&lt;/a&gt; has put up an &lt;a href="http://www.extrowebsite.com/articolojs.asp?id=50" target="_blank"&gt;Italian translation&lt;/a&gt; of much of the information on MojoMagnify and MojoZoom. Thanks!
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=SyCZDR"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=SyCZDR" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=QXQzM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=QXQzM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=WKH1m"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=WKH1m" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=9FIIm"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=9FIIm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=zMP6m"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=zMP6m" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=dPfyM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=dPfyM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/3468119102513337787/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/10/mojozoom-and-mojomagnify-updates.html#comment-form" title="1 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3468119102513337787?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3468119102513337787?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/10/mojozoom-and-mojomagnify-updates.html" title="MojoZoom and MojoMagnify updates" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_OjchJpvqFiw/SPzHwrUwrGI/AAAAAAAAANU/6vBeecNuwDE/s72-Rc/mojo.jpg" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-3411362031955038208</id><published>2008-10-16T07:25:00.000-07:00</published><updated>2008-10-16T07:55:42.733-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-10-16T07:55:42.733-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="image" /><category scheme="http://www.blogger.com/atom/ns#" term="flickr" /><category scheme="http://www.blogger.com/atom/ns#" term="graphics" /><category scheme="http://www.blogger.com/atom/ns#" term="ascii art" /><category scheme="http://www.blogger.com/atom/ns#" term="mashup" /><title type="text">Getting your ASCII on with Flickr</title><content type="html">&lt;span class='post-summary'&gt;
&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SPdPCv7JrgI/AAAAAAAAAM8/dhhBOTVxX84/s320-R/flickrasciishot.png" style="float:left;margin-right:10px;"/&gt;

&lt;a href="http://www.pixastic.com/labs/flickr_asciified/" target="_blank"&gt;&lt;img border="0" src="http://www.pixastic.com/labs/flickr_asciified/logo.png" style="border:none;" /&gt;&lt;/a&gt;&lt;br/&gt;
A while back I made a &lt;a href="http://blog.nihilogic.dk/2008/03/jsascii.html"&gt;JavaScript image-to-ASCII-art converter&lt;/a&gt; using the image data access available through the Canvas element. 
For this Thursday's afternoon of fun and code, I decided to pull it back out of the closet and see what else I could do with it. 
&lt;br /&gt;&lt;/span&gt;

I'd already worked a bit with the &lt;a href="http://www.flickr.com/services/api/" target="_blank" rel="nofollow"&gt;Flickr API&lt;/a&gt; and found it quite a &lt;a href="http://blog.nihilogic.dk/2008/07/wolfenflickr-3d-unlikely-mashup.html"&gt;pleasant experience&lt;/a&gt;, so I decided to make a small application that pulls out Flickr photos and asciifies them for retro fun and profit.&lt;br/&gt;

&lt;h4&gt;How it works&lt;/h4&gt;

You simply enter the search query of your choice and click the "Asciify" button. A request is then sent off to the Flickr server and any photos that match the query are returned. The image data is analyzed and turned into &lt;a href="http://en.wikipedia.org/wiki/ASCII" class="wiki-summary-link" target="_blank"&gt;ASCII characters&lt;/a&gt;. &lt;br/&gt;
&lt;br/&gt;
&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SPdVrVRrwrI/AAAAAAAAANM/idGaG8GGa4c/s320-R/shot2.png" style="float:right;margin-left:10px;" /&gt;
You can choose to have the characters colored the same color as the pixels they represent or simply leave them black/white. Optionally, you can have the background of the character colored as well by choosing "use blocks", making the final image more akin to a very blocky or pixelated version of the original, just made out of HTML rather than an actual image. Last, there's the option of having the background of the output be the average color of the original image. This may not look great for all images - and of course makes no sense if you're already using the blocks method.&lt;br/&gt;
&lt;br/&gt;
Be aware that far from all Flickr images are suitable for Asciifying and some of the options just mentioned look better on some images than on others.&lt;br/&gt;
&lt;br/&gt;
By default, the application will only ask for images that are licensed under the &lt;a href="http://en.wikipedia.org/wiki/Creative_Commons" target="_blank" class="wiki-summary-link"&gt;Creative Commons&lt;/a&gt; licenses to ensure that no feelings and/or intellectual property rights are hurt.&lt;br/&gt;
&lt;br/&gt;
Since the application relies on the Canvas element and image data access, so far only Firefox, Opera and recent WebKit nightlies are supported.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://www.pixastic.com/labs/flickr_asciified/"&gt;
Click here to start Asciifying Flickr
&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;

..or read on, if you're interested in&lt;br/&gt;

&lt;h4&gt;How it really works&lt;/h4&gt;

The Flickr search part is pretty straight forward. A single request is sent, calling the "flickr.photos.search" method. 
We then get a list of photos from Flickr, but we can't access the data in these directly due to the same-origin policy of the Canvas element. To get around this, we're using a small proxy script (written in PHP) that does nothing other than retrieve the image file and pass it straight through to the browser. &lt;br/&gt;
&lt;br/&gt;
The image is then painted (and downscaled since we're not using all pixels) on a hidden Canvas element, the image data is retrieved using getImageData() and each pixel in the image is analyzed. The brightness of the pixel is calculated using a simple RGB to brightness formula and this level of brightness is then mapped to a list of characters selected for their varying apparent brightness. The list used here is [ .,:;i1tfLCG08@] for black/white output and [ CGO08@] for colored output. &lt;br/&gt;
&lt;br/&gt;
If the output is black/white, we just write the character to a string and move on to the next. If we're using colored output, we create a span element styled with the appropriate color. All these spans are the reason it can appear a bit more sluggish when using colors than when using black/white output. If the "blocks" option is on, we simply set the background of the character span to be the same color as the character itself. This way, the block appears solid but we can still drag the mouse over the output and select the ASCII text. For the last option, background color, the original image is downscaled to a 1x1 pixel Canvas and the color of this single pixel is read and used as the background color of the containing element.&lt;br/&gt;
&lt;br/&gt;
Feel free to leave a comment or ask any questions.&lt;br/&gt;
&lt;a href="http://www.pixastic.com/labs/flickr_asciified/"&gt;
Get Asciified!
&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=yVaNK0"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=yVaNK0" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=7lcgM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=7lcgM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=iLMam"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=iLMam" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=RsGum"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=RsGum" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=9evCm"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=9evCm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=CUPmM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=CUPmM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/3411362031955038208/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/10/getting-your-ascii-on-with-flickr.html#comment-form" title="2 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3411362031955038208?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3411362031955038208?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/10/getting-your-ascii-on-with-flickr.html" title="Getting your ASCII on with Flickr" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_OjchJpvqFiw/SPdPCv7JrgI/AAAAAAAAAM8/dhhBOTVxX84/s72-Rc/flickrasciishot.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-288693787103403138</id><published>2008-10-08T07:15:00.000-07:00</published><updated>2008-11-04T13:09:04.466-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-11-04T13:09:04.466-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="appjet" /><category scheme="http://www.blogger.com/atom/ns#" term="mashup" /><title type="text">Embedding Wikipedia summaries in articles</title><content type="html">&lt;span class='post-summary'&gt;
&lt;span style="font-style:italic;"&gt;A small, light-weight Wikipedia summary/preview widget that lets you include the first bit of a Wikipedia article in popups in your blog post, article, etc.
&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;
Links to Wikipedia are found everywhere in &lt;a class="wiki-summary-link" target="_blank" href="http://en.wikipedia.org/wiki/Article_(publishing)"   rel="nofollow"&gt;articles&lt;/a&gt; and &lt;a class="wiki-summary-link" target="_blank" href="http://en.wikipedia.org/wiki/Blog_post"  rel="nofollow"&gt;blog posts&lt;/a&gt;, and I use them often myself when that extra level of information might be of interest to the reader but falls outside the scope of the actual article. However, sometimes a short blurb introducing the topic would be enough and would also keep the reader from disappearing into the time stealing rabbit hole that we all know Wikipedia can be.&lt;br/&gt;
&lt;/span&gt;
&lt;br/&gt;&lt;br/&gt;
Edit: The widget is now using the MediaWiki API rather than the AppJey gateway. &lt;a href="http://blog.nihilogic.dk/2008/10/wiki-summary-box-012-update.html"&gt;Read update here&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;

One solution is to popup a small box with a summary from the Wikipedia article when the &lt;a class="wiki-summary-link" target="_blank" href="http://en.wikipedia.org/wiki/Mouse_(computing)"  rel="nofollow"&gt;mouse&lt;/a&gt; moves over the word. There is one service that already provides something like this, the NBC owned &lt;a href="http://www.snap.com/" target="_blank"  rel="nofollow"&gt;Snap.com&lt;/a&gt;. Their SnapShot boxes display everything from website screenshots to Flickr images to Wikipedia summaries. That's cool, but I found it a bit too bulky just to display a few paragraphs of text and, as far I know, you don't get much in the way of customizing the appearance. &lt;br/&gt;
&lt;br/&gt;
So I decided to create my own simple Wikipedia box. Fortunately most of Wikipedia is pretty neat and the first section usually contains a decent summary of what the article is about. So we can simply pull out all the text between the two first headings. Some articles have info boxes on the right that are ignored, as to only get pure text.&lt;br/&gt;
&lt;br/&gt;
All this is done by a small &lt;a href="http://json-wikisummary.appjet.net/" target="_blank"&gt;AppJet JSON-P application&lt;/a&gt; that takes care of retrieving the article and locating the relevant portion of the text. The text is then processed a bit (ie. links are made to open in new windows and point to the absolute URL, reference ids are removed, etc) before it's all put in a nice little &lt;a class="wiki-summary-link" target="_blank" href="http://en.wikipedia.org/wiki/JSON" rel="nofollow"&gt;JSON&lt;/a&gt; package and returned to the client:&lt;br/&gt;
&lt;br/&gt;
&lt;textarea name="code" class="javascript" rows="1" cols="1"&gt;
// sample return value from 
// http://json-wikisummary.appjet.net/?keyword=mandelbrot_set&amp;amp;callback=callmeok
callmeok(
  {
    "url" : "http://en.wikipedia.org/wiki/mandelbrot_set", 
    "title" : "Mandelbrot set", 
    "lang" : "en", 
    "content" : "In mathematics, the Mandelbrot set ... bla bla."
  }
);
&lt;/textarea&gt;

The 5000 most recently accessed articles are &lt;a class="wiki-summary-link" target="_blank" href="http://en.wikipedia.org/wiki/Cache" rel="nofollow"&gt;cached&lt;/a&gt; (there's a 50MB storage limit on each AppJet app and I'd rather err on the safe side.) making sure that delivery is speedy and that it doesn't hit Wikipedia's servers more than necessary.&lt;br/&gt;
&lt;br/&gt;
The text is received by a bit of JavaScript which pops up a box containing the article summary and a small link to Wikipedia and the original article (and the GFDL license notice).&lt;br/&gt;
&lt;br/&gt;
The box itself is rather simple, consisting of 4 simple elements. I know this is 2008 and there are no rounded corners or whatever the kids are using these days, but I wanted to keep it basic. The included style sheet should be self-explanatory and easy to change for your liking, although you might have to dive into the JS if you want something radically changed.&lt;br/&gt;
&lt;br/&gt;
So, to use it, simply include the &lt;a href="http://www.nihilogic.dk/labs/wikipedia_summary/sumbox.css"&gt;CSS&lt;/a&gt; and &lt;a href="http://www.nihilogic.dk/labs/wikipedia_summary/sumbox.js"&gt;JS&lt;/a&gt; and start putting Wikipedia links in your text like this:&lt;br/&gt;
&lt;br/&gt;
&lt;textarea name="code" class="html" rows="1" cols="1"&gt;
The sky above the port was the color of &amp;lt;a class="wiki-summary-link" 
href="http://en.wikipedia.org/wiki/Television"&gt;television&amp;lt;/a&gt;, 
tuned to a dead channel.

The capital of Denmark is the great city of &amp;lt;a class="wiki-summary-link" 
href="http://en.wikipedia.org/wiki/Copenhagen"&gt;Copenhagen&amp;lt;/a&gt;, or 
&amp;lt;a class="wiki-summary-link"  href="http://da.wikipedia.org/wiki/KÃ¸benhavn"&gt;KÃ¸benhavn&amp;lt;/a&gt; 
as we call it.

I can't read Chinese: &amp;lt;a class="wiki-summary-link" 
href="http://zh.wikipedia.org/wiki/å¤–åˆ‡é«”è¤‡å�ˆç‰©"&gt;å¤–åˆ‡é«”è¤‡å�ˆç‰©&amp;lt;/a&gt;
&lt;/textarea&gt;

Example output (hover the mouse over the underlined words):&lt;br/&gt;
&lt;br/&gt;
&lt;div style="border: 1px dashed white; margin : 10px; padding:5px;"&gt;
The sky above the port was the color of &lt;a class="wiki-summary-link" href="http://en.wikipedia.org/wiki/Television" rel="nofollow"&gt;television&lt;/a&gt;, tuned to a dead channel.&lt;br/&gt;
&lt;br/&gt;
"It's not like I'm using," Case heard someone say, as he shouldered his way through the crowd around the door of the Chat. "It's like my body's developed this massive drug deficiency." It was a Sprawl voice and a &lt;a class="wiki-summary-link" href="http://en.wikipedia.org/wiki/The_Sprawl" rel="nofollow"&gt;Sprawl&lt;/a&gt; joke. The Chatsubo was a bar for professional &lt;a class="wiki-summary-link" href="http://en.wikipedia.org/wiki/expatriates" rel="nofollow"&gt;expatriates&lt;/a&gt;; you could drink there for a week and never hear two words in &lt;a class="wiki-summary-link" href="http://en.wikipedia.org/wiki/Japanese" rel="nofollow"&gt;Japanese&lt;/a&gt;.&lt;br/&gt;
&lt;span style="font-style:italic;"&gt;- Neuromancer by William Gibson&lt;/span&gt;
&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
As you can see from this sample code, you simply make links to the relevant Wikipedia articles and the script should locate them automatically and enable the summary box. &lt;br/&gt;
&lt;br/&gt;
Now, I'm not entirely sure whether or not this breaks the terms of use of Wikipedia. I do know they do not allow dynamically generated mirrors, but I'm not really sure in what category something like this would fall since the articles are dynamically downloaded (if not in cache) even if it isn't really a mirror as such. They used to have a crawl-delay of 1 page per second in their &lt;a class="wiki-summary-link" target="_blank" href="http://en.wikipedia.org/wiki/Robots.txt"  rel="nofollow"&gt;robots.txt&lt;/a&gt;, which is obeyed by the AppJet application. If you happen to get hit by that limitation (unlikely, I think) you'll be served a notice of that instead of the article text.&lt;br/&gt;
&lt;br/&gt;
Another thing is that I'm not sure what kind of bandwidth quotas, if any, you might run into with AppJet. If every blog in the world started hitting the same AppJet application, I'm sure it would cause trouble, but that's unlikely to happen. Either way, it's very easy to simply clone the AppJet app if you want to use it on your own site and be safe.&lt;br/&gt;
&lt;br/&gt;
I've tested the script in FF3, Opera 9.5, IE7, Safari 3.1 and Chrome and everything looks fine there.&lt;br/&gt;
&lt;br/&gt;
Finally, download the files here: 
&lt;a href="http://www.nihilogic.dk/labs/wikipedia_summary/sumbox.js"&gt;sumbox.js [4.8 KB]&lt;/a&gt; 
and 
&lt;a href="http://www.nihilogic.dk/labs/wikipedia_summary/sumbox.css"&gt;sumbox.css [1.0 KB]&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=oxAoYE"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=oxAoYE" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=wMYoM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=wMYoM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=T3eUm"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=T3eUm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=DKlrm"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=DKlrm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=icvim"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=icvim" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=br11M"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=br11M" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/288693787103403138/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/10/embedding-wikipedia-summaries-in.html#comment-form" title="11 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/288693787103403138?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/288693787103403138?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/10/embedding-wikipedia-summaries-in.html" title="Embedding Wikipedia summaries in articles" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">11</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-3225295815836962086</id><published>2008-10-02T02:09:00.000-07:00</published><updated>2008-10-13T11:46:16.379-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-10-13T11:46:16.379-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="graphics" /><category scheme="http://www.blogger.com/atom/ns#" term="math" /><title type="text">23 pretty JavaScript fractals</title><content type="html">&lt;span class='post-summary'&gt;&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SOSQadVdHsI/AAAAAAAAALU/uRi0TIe1tQs/s320-R/burningship.jpg" style="float:left;margin-right:15px;" alt="Burning Ship"/&gt;The previous post about the &lt;a href="http://blog.nihilogic.dk/2008/09/mandelbrot-in-less-than-128-bytes-of.html"&gt;size optimized Mandelbrot renderers&lt;/a&gt; didn't really do the &lt;a href="http://en.wikipedia.org/wiki/Mandelbrot_set" target="_blank" class="wiki-summary-link" rel="nofollow"&gt;Mandelbrot set&lt;/a&gt; justice in terms of mathematical and aesthetical prettiness. So, armed with my two good friends, Canvas and JavaScript, I set out to further explore the infinite beauty and complexity of both the Mandelbrot set and other &lt;a target="_blank" class="wiki-summary-link" href="http://en.wikipedia.org/wiki/Fractal" rel="nofollow"&gt;fractals&lt;/a&gt;.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The result is a &lt;a href="http://www.nihilogic.dk/labs/javascript_canvas_fractals/" target="_blank"&gt;small application&lt;/a&gt; that lets you view visualizations (colored or b/w) of different fractals and zoom in by simply clicking the mouse. There are a few different fractals available:&lt;br /&gt;&lt;br /&gt;
&lt;ul&gt;&lt;li&gt;&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SOSQgb_ZiCI/AAAAAAAAAL8/caVqBpV_Owg/s320-R/mandelbrot.jpg" style="float:right;margin-left:15px;" alt="Mandelbrot set" /&gt;&lt;b&gt;Mandelbrot set&lt;/b&gt; - The granddaddy of all fractals, the work of super smart mathemagician Benoît Mandelbrot. This one shouldn't need much introduction. Also available are a few &lt;b&gt;Multibrots&lt;/b&gt;, variations on the Mandelbrot theme created by raising z to higher powers, rather than the standard z^2 of the Mandelbrot.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;img border="0" src="http://3.bp.blogspot.com/_OjchJpvqFiw/SOSQmFvomLI/AAAAAAAAAMk/WMvH-W79jiU/s320-R/tricorn.jpg" style="float:right;margin-left:15px;" alt="Tricorn"/&gt;&lt;b&gt;Tricorn&lt;/b&gt; - Another variation of the Mandelbrot set, also sometimes called the Mandelbar.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Burning Ship&lt;/b&gt; - Another famous fractal, named after the neat structures that appear when zooming in along the x-axis on the positive side. This is the one depicted at the very beginning of this post.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Julia set&lt;/b&gt; - Created much like the Mandelbrot set, but using a constant &lt;a target="_blank" class="wiki-summary-link" href="http://en.wikipedia.org/wiki/Complex_number" rel="nofollow"&gt;complex number&lt;/a&gt; C. Depending on the complex number used, this will render in any number of different ways. A selection of numbers are available. Dendrite, Siegel Disk, Douady's Rabbit and San Marco are all also variations of the Julia set.&lt;br /&gt;&lt;br /&gt;&lt;div &gt;&lt;img border="0" src="http://4.bp.blogspot.com/_OjchJpvqFiw/SOSQbwW-GHI/AAAAAAAAALc/sQD61vC_LkI/s320-R/julia1.jpg" alt="Julia set #3"/&gt;&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SOSQcxuwywI/AAAAAAAAALk/6Wbpk4TZezs/s320-R/julia5.jpg" alt="Julia set #5" style="margin-left:20px;margin-right:20px;" /&gt;&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SOSQleKG1-I/AAAAAAAAAMc/4ZkFejiS_Qo/s320-R/rabbit.jpg"  alt="Douady's Rabbit" /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;div style="float:right;margin-left:15px;" &gt;&lt;img border="0" src="http://3.bp.blogspot.com/_OjchJpvqFiw/SOSQePKsjsI/AAAAAAAAALs/k9DY-nfao2k/s320-R/juliacubed.jpg"  alt="Julia cubed" /&gt;&lt;/div&gt;&lt;b&gt;Julia Cubed&lt;/b&gt; - A variation of the Julia set, using z^3 instead of z^2. Much like the Multibrot variations of the Mandelbrot set.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;div style="float:right;margin-left:15px;" &gt;&lt;img border="0" src="http://3.bp.blogspot.com/_OjchJpvqFiw/SOSQfTwvLJI/AAAAAAAAAL0/5oNr8p3hgRo/s320-R/juliasine3.jpg"  alt="Julia Sine #3" /&gt;&lt;/div&gt;&lt;b&gt;Julia Sine/Cosine&lt;/b&gt; - More variations of the Julia set, now using &lt;a target="_blank" class="wiki-summary-link" href="http://en.wikipedia.org/wiki/Trigonometry" rel="nofollow"&gt;trigonometric functions&lt;/a&gt; to create interesting structures. Note that these are a bit slower than the rest due to the many extra function calls.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;The controls should be fairly self-explanatory, but here they are anyway:&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Image size:&lt;/b&gt; The dimensions of the rendered image. Smaller = faster.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;Color scheme:&lt;/b&gt; The color used when painting the fractal. Black/white might be a bit faster.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;Smooth colors:&lt;/b&gt; A prettier but slower coloring algorithm. The image may look darker when using smooth colors. Only works well for Mandelbrot and Julia set (using z^2) and causes banding when zooming in.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;Zoom factor:&lt;/b&gt; How much to zoom in when clicking.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Note that changing some of the settings causes an immediate re-render of the image.&lt;br /&gt;&lt;br /&gt;Be warned that the further you zoom in on any of the fractals, the more CPU time is needed to render, and of course a large image size is more demanding than a small one. I've found Safari with latest &lt;a href="http://nightly.webkit.org/" target="_blank" rel="nofollow"&gt;WebKit nightly&lt;/a&gt; to be the fastest but YMMV. Firefox 3 seems to have memory issues when you zoom in more than a few times and there is of course no IE support. &lt;br /&gt;&lt;br /&gt;And for the finish, here are a few images from a zoomed-in Mandelbrot set.&lt;br /&gt;&lt;br /&gt;&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SOSQhq2deDI/AAAAAAAAAME/JTyLtaLhbWQ/s320-R/mandelbrot_zoom1.jpg" alt="Mandelbrot zoom sequence, image 1"/&gt;&lt;img border="0" src="http://4.bp.blogspot.com/_OjchJpvqFiw/SOSQigCvOjI/AAAAAAAAAMM/TVgZcfLriTY/s320-R/mandelbrot_zoom2.jpg" alt="Mandelbrot zoom sequence, image 2" style="margin-left:20px;margin-right:20px;"/&gt;&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SOSQjn8xk4I/AAAAAAAAAMU/KA5pjc1DJy4/s320-R/mandelbrot_zoom3.jpg" alt="Mandelbrot zoom sequence, image 3"/&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.nihilogic.dk/labs/javascript_canvas_fractals/"&gt;Play with JavaScript fractals here&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=cYTFae"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=cYTFae" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=GYvfM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=GYvfM" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=D2Mkm"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=D2Mkm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=onb5m"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=onb5m" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=TA9Gm"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=TA9Gm" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=45NMM"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=45NMM" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/3225295815836962086/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/10/23-pretty-javascript-fractals.html#comment-form" title="5 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3225295815836962086?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3225295815836962086?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/10/23-pretty-javascript-fractals.html" title="23 pretty JavaScript fractals" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_OjchJpvqFiw/SOSQadVdHsI/AAAAAAAAALU/uRi0TIe1tQs/s72-Rc/burningship.jpg" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-7368376210159556836</id><published>2008-09-20T16:33:00.000-07:00</published><updated>2008-10-13T11:47:29.697-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-10-13T11:47:29.697-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="ascii art" /><category scheme="http://www.blogger.com/atom/ns#" term="math" /><title type="text">Mandelbrot in less than 128 bytes of DHTML</title><content type="html">&lt;span class='post-summary'&gt;&lt;a href="http://www.nihilogic.dk/labs/mandelbrot/122b.htm" style="margin-left: 1em; margin-right: 1em; float:left; "&gt;&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SNWJ0Oo1K1I/AAAAAAAAALM/f-U92bEII4E/s320-R/mandelbrot_ascii.png" alt="Mandelbrot set" /&gt;&lt;/a&gt;A while ago, Mathieu "p01" Henri rendered the initial Mandelbrot set in 137 bytes of JavaScript and HTML, getting it down to 133 bytes with a few tweaks but still a few bytes short of his 128 byte goal. Since fractals are groovy, I decided to make my own, trying to get it below that magic number.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The smallest HTML overhead I could think of was to just have a single &amp;lt;body&amp;gt; tag with an onload event doing everything. Unfortunately this doesn't seem to work in Safari and Chrome, but FF, IE and Opera are all happy. Other than that, it's just a lot of tweaking and dirty tricks do shave off every possible byte. &lt;br /&gt;&lt;br /&gt;I first managed to get it down to 122 bytes. &lt;br /&gt;&lt;a href="http://www.nihilogic.dk/labs/mandelbrot/122b.htm" target="_blank"&gt;Check it out here&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Didn't take long for Mathieu to respond, though, and he shaved off a few more bytes down to just 117 bytes. Very cool! See his version &lt;a href="http://www.p01.org/releases/Demoscene/files/mandelbrot_117b.htm" target="_blank"&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;And if anyone finds a way to make it even smaller, please leave a comment.&lt;br /&gt;&lt;br /&gt;Updates: &lt;br /&gt;&lt;br /&gt;1: With the help of David 'HZR' Hasater, Mathieu's is now down to &lt;a href="http://is.gd/2TQB" target="_blank"&gt;115 bytes&lt;/a&gt;, losing IE support along the way.&lt;br /&gt;&lt;br /&gt;2: Final version so far only works in Firefox and is only &lt;a href="http://www.nihilogic.dk/labs/mandelbrot/114b.htm" target="_blank"&gt;114 bytes&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;3: Ok, one more. A slightly different look (less defined boundary) and another byte sent off: &lt;a href="http://www.nihilogic.dk/labs/mandelbrot/113b.htm" target="_blank"&gt;113 bytes&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=lMIUZy"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=lMIUZy" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=uCcEL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=uCcEL" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=J7Twl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=J7Twl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=JRnWl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=JRnWl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=0rWsl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=0rWsl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=JDUNL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=JDUNL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/7368376210159556836/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/09/mandelbrot-in-less-than-128-bytes-of.html#comment-form" title="9 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7368376210159556836?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7368376210159556836?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/09/mandelbrot-in-less-than-128-bytes-of.html" title="Mandelbrot in less than 128 bytes of DHTML" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_OjchJpvqFiw/SNWJ0Oo1K1I/AAAAAAAAALM/f-U92bEII4E/s72-Rc/mandelbrot_ascii.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">9</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-5788467995789911899</id><published>2008-09-18T14:15:00.000-07:00</published><updated>2008-09-18T14:38:54.456-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-18T14:38:54.456-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="misc" /><title type="text">Software Development Meme</title><content type="html">&lt;span class="post-summary"&gt;Whoops. Appears I've been tagged by &lt;a href="http://www.cuppadev.co.uk/misc/software-development-meme/" target="_blank"&gt;James Urquhart&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;How old were you when you first started programming?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;I was probably 11 or 12 when I first started throwing PEEKs and POKEs at my C64, although my understanding of what was actually happening was close to nonexistent. It wasn't until about 8 years later after a detour into graphics design that I redeveloped an interest in programming and actually started coding "for real".&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;How did you get started in programming?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;When I was a kid, I was just so fascinated with computers and seeing it act on something I had instructed it to was simply amazing. My first brush with programming was from magazines that had code listings ready to enter. Later, after I had lost a lot of my interest in programming, I was sort of forced into it as I got a job doing web design that eventually turned into a server side, ASP coding gig.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What was your first language?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;BASIC and then years later ASP (classic). I had forgotten almost everything by then and my years as an ASP developer almost scared me away from programming for good if I hadn't sought out other languages.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What was the first real program you wrote?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The first application I wrote would be a web portal for a long gone online game called Space Merchant, 8 years ago or so. I made just about every mistake you can make but somehow it got me my first job.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What languages have you used since you started programming?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;BASIC, ASP, SQL, PHP, Perl, Visual Basic, C, C++, JavaScript and right now I'm looking at Python. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;What was your first professional programming gig?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Doing small to medium sized ASP web applications for a small, local company.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;If you knew then what you know now, would you have started programming?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Yes, but I'd probably have skipped the "job" part and stayed at hobby programming.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;If there is one thing you learned along the way that you would tell new developers, what would it be?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Question everything. Don't believe in limitations set by traditional thinking. Code for fun.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What’s the most fun you’ve ever had programming?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The fun factor has grown dramatically after I quit my job (back in school now, studying physics) since it leaves me so much more energy for the projects that I find interesting. For that reason, everything on nihilogic.dk could qualify as the "most fun".&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Who’s next?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;I'm gonna throw this the way of Yahoo! and tag &lt;a href="http://scriptnode.com/" target="_blank"&gt;Matt Hackett&lt;/a&gt;, a fellow JavaScript hacker who's doing great stuff.&lt;br /&gt;&lt;br /&gt;I'd also like to tag &lt;a href="http://www.p01.org/" target="_blank"&gt;Mathieu "p01" Henri&lt;/a&gt;, but I don't think he's blogging much.
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=tJPtUO"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=tJPtUO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=rCgIL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=rCgIL" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=jFuGl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=jFuGl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=8OMZl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=8OMZl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=jwmLl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=jwmLl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=CDFtL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=CDFtL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/5788467995789911899/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/09/software-development-meme.html#comment-form" title="3 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5788467995789911899?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5788467995789911899?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/09/software-development-meme.html" title="Software Development Meme" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-7782558957355710798</id><published>2008-09-16T10:44:00.000-07:00</published><updated>2008-09-16T10:59:00.196-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-16T10:59:00.196-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="nihilogic" /><title type="text">Cool links</title><content type="html">&lt;span class='post-summary'&gt;I've been making a few small changes and additions to Nihilogic. One of them is a "Links" widget that is displayed in the sidebar on the front page, featuring interesting links related to the kind of JavaScript tricks found here on nihilogic.dk. You are more than welcome to &lt;a href="mailto:cupboy@gmail.com"&gt;send me a link&lt;/a&gt; to any interesting projects you're working on (or just something cool you found) that you feel fit the theme. A few of you have already done this (thanks!), but I've had no where to put them until now.&lt;br /&gt;&lt;br /&gt;There is also a feed that you can &lt;a href="http://feeds.feedburner.com/nihilogic_links" target="_blank" rel="alternate" type="application/rss+xml"&gt;subscribe&lt;/a&gt; to (look for the RSS icon).&lt;br /&gt;&lt;/span&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=rkRTg9"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=rkRTg9" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=O9zEL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=O9zEL" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=3qWgl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=3qWgl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=IeNRl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=IeNRl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=LbD4l"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=LbD4l" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=DiFML"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=DiFML" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/7782558957355710798/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/09/cool-links.html#comment-form" title="2 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7782558957355710798?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7782558957355710798?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/09/cool-links.html" title="Cool links" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-1826098123184752676</id><published>2008-09-09T09:00:00.000-07:00</published><updated>2008-09-10T14:17:41.140-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-10T14:17:41.140-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="games" /><category scheme="http://www.blogger.com/atom/ns#" term="canvas" /><category scheme="http://www.blogger.com/atom/ns#" term="physics" /><title type="text">Particle acceleration - the JavaScript way</title><content type="html">&lt;span class="post-summary"&gt;
&lt;a href="http://www.nihilogic.dk/labs/lhc_simulation/" onclick="window.open('http://www.nihilogic.dk/labs/lhc_simulation/','lhc','width=640,height=480,location=no,toolbar=no,menubar=no,resizable=no');return false;"&gt;&lt;img border="0" src="http://1.bp.blogspot.com/_OjchJpvqFiw/SMaguUxL8LI/AAAAAAAAALE/83MEWWNrdbg/s320-R/lhc.png" style="float: left; margin-right: 15px;" /&gt;&lt;/a&gt;In honor of the madly brilliant minds at CERN who are pushing the button tomorrow morning to fire up the &lt;a href="http://en.wikipedia.org/wiki/Large_Hadron_Collider" target="_blank"&gt;Large Hadron Collider&lt;/a&gt;, the largest particle accelerator ever built, here is a (100% scientifically correct) JavaScript simulation of how all that physics stuff works.&lt;br /&gt;&lt;/span&gt;
&lt;br /&gt;
By combining web technology with state of the art science you now have the chance to take on the role of a lone proton, just going about your business in the LHC awaiting inevitable collision. All delivered in classic monochrome arcade style, as if there was any other way.&lt;br /&gt;
&lt;br /&gt;
&lt;a href="http://www.nihilogic.dk/labs/lhc_simulation/" onclick="window.open('http://www.nihilogic.dk/labs/lhc_simulation/','lhc','width=640,height=480,location=no,toolbar=no,menubar=no,resizable=no');return false;"&gt;Click for particle fun!&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
Use the arrow keys if you feel like it, your faith has been sealed either way. Happy colliding!&lt;br /&gt;
&lt;br /&gt;
Works best in Firefox, Safari and Chrome, it seems. IE is rather slow due to excanvas Canvas emulation.&lt;br /&gt;
&lt;br /&gt;
Also, for more information about the safety of the LHC, please refer to this link: &lt;a href="http://www.hasthelhcdestroyedtheearth.com/" target="_blank"&gt;http://www.hasthelhcdestroyedtheearth.com/&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-size: 90%; font-style: italic;"&gt;Disclaimer: Any claims of this being an actual game and/or a correct physical simulation are complete bullocks. It is merely a few hours wasted for fun.&lt;/span&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=KWJKyG"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=KWJKyG" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=0MGrL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=0MGrL" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=BnKel"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=BnKel" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=ycfBl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=ycfBl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=BScyl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=BScyl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=rxKnL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=rxKnL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/1826098123184752676/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/09/particle-acceleration-javascript-way.html#comment-form" title="3 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/1826098123184752676?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/1826098123184752676?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/09/particle-acceleration-javascript-way.html" title="Particle acceleration - the JavaScript way" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_OjchJpvqFiw/SMaguUxL8LI/AAAAAAAAALE/83MEWWNrdbg/s72-Rc/lhc.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-5071754119755930165</id><published>2008-09-08T09:35:00.000-07:00</published><updated>2008-09-16T08:44:49.482-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-16T08:44:49.482-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="image" /><category scheme="http://www.blogger.com/atom/ns#" term="canvas" /><category scheme="http://www.blogger.com/atom/ns#" term="css" /><title type="text">Sandbag text wrapping with Canvas</title><content type="html">&lt;span class="post-summary"&gt;&lt;div style="float:right;clear:right;margin-left:15px;"&gt;&lt;img border="0" src="http://2.bp.blogspot.com/_OjchJpvqFiw/SMVmFg3gkLI/AAAAAAAAAK8/37ADoFxfrnE/s400-R/prettyfloat.png" width=150/&gt;&lt;div style="font-size:80%;font-style:italic;"&gt;Text wrap with sandbags&lt;/div&gt;&lt;/div&gt;A JavaScript/Canvas based approach to dynamically applying the sandbag technique to get pretty text wrapping around images. Building on the work done by Rob Swan, this is an attempt at mimicking the effect, making text flow nicely around shapes in images.&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;With CSS you can make text wrap around an image using the float property and for most purposes this is quite adequate. However, it doesn't take into account the actual image and treats it as one big block, even if you'd prefer the text to wrap around the actual content in the picture, magazine style.&lt;br /&gt;&lt;br&gt;Along came a technique called sandbag DIVs (first &lt;a href="http://www.alistapart.com/articles/sandbags" target="_blank"&gt;published by Rob Swan&lt;/a&gt; a few years ago, I believe) that solved the problem for those odd cases where you need something fancier than float:left. The idea is to build a structure of virtual "sandbags" out of DIV elements and then let the text flow around those instead of the image. This can be done either manually for each image or with a serverside script as shown in the &lt;a href="http://www.alistapart.com/articles/sandbags" target="_blank"&gt;ALA article.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Since we now have pixel access (in cool browsers, anyway) via the Canvas element, this technique can now be implemented dynamically with a bit of JavaScript.The approach is very similar to the one at ALA, in that we scan from either left or right looking for the first solid pixel and then use that information to create a bunch of DIVs of suitable dimensions, only we're doing it client side with JS. These DIVs are then styled with the original image as a background image, positioned to make it all appear as one whole image.&lt;br /&gt;&lt;br /&gt;Using the small script linked below you simply give your image a CSS class of either "sandbag-left" or "sandbag-right", depending on how your image should float. If the browser does not support Canvas and image data access, a fallback mechanism simply sets the CSS float property to "left" or "right", degrading to the old rectangular text wrap.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Example usage:&lt;/b&gt;&lt;br /&gt;&lt;pre class="html" name="code"&gt;&amp;lt;div&amp;gt;&amp;lt;img class="sandbag-left" src="image.png"&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;b&gt;Compatibility and issues&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Firefox 2 and 3 + Opera 9.5 looks fine here. IE and Chrome degrades to rectangular wrapping, as does Safari although it should hopefully get the image data methods soon.There are a few limitations, such as problems with opposing sandbagged images (one left-aligned, one right-aligned). &lt;br /&gt;You also must use a transparent background in your image, since the script relies on detecting the transparent pixels to create the DIVs.&lt;br /&gt;The page may look messed up until the sandbags have been created (can be minimized by also setting float:left/right on the image.)&lt;br /&gt;Finally, since the original image is replaced by DIVs with background images, accessibility could be a problem, depending on where it's used.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Live examples : &lt;/b&gt;&lt;a href="http://www.nihilogic.dk/labs/prettyfloat/example.htm"&gt;http://www.nihilogic.dk/labs/prettyfloat/example.htm&lt;/a&gt;&lt;br /&gt;&lt;b&gt;Download code : &lt;/b&gt;&lt;a href="http://www.nihilogic.dk/labs/prettyfloat/prettyfloat.js"&gt;prettyfloat.js&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=Uhgrx5"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=Uhgrx5" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=WvzjL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=WvzjL" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=wYsol"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=wYsol" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=HZfbl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=HZfbl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=wrsQl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=wrsQl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=5xfAL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=5xfAL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/5071754119755930165/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/09/sandbag-text-wrapping-with-canvas.html#comment-form" title="5 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5071754119755930165?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/5071754119755930165?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/09/sandbag-text-wrapping-with-canvas.html" title="Sandbag text wrapping with Canvas" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/_OjchJpvqFiw/SMVmFg3gkLI/AAAAAAAAAK8/37ADoFxfrnE/s72-Rc/prettyfloat.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-7745320883817787219</id><published>2008-09-07T13:57:00.000-07:00</published><updated>2008-09-18T12:55:02.358-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-18T12:55:02.358-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="mashup" /><category scheme="http://www.blogger.com/atom/ns#" term="digg" /><title type="text">A prettier, more styleable Digg button</title><content type="html">&lt;link href="http://www.nihilogic.dk/labs/digg_button/styles/default/styles.css" rel="stylesheet" type="text/css" /&gt;
&lt;link href="http://www.nihilogic.dk/labs/digg_button/styles/digg_guy/styles.css" rel="stylesheet" type="text/css" /&gt;
&lt;link href="http://www.nihilogic.dk/labs/digg_button/styles/badge/styles.css" rel="stylesheet" type="text/css" /&gt;
&lt;script type="text/javascript"&gt;&lt;!--
if (Digg) {
	Digg.setAPIKey("http://www.nihilogic.dk/");
}
var postURLTest = "http://blog.nihilogic.dk/2008/09/prettier-more-styleable-digg-button.html";
--&gt;&lt;/script&gt;


&lt;span class="post-summary"&gt;
Lately, I've been looking at APIs at some of the big sites (like &lt;a href="http://www.nihilogic.dk/labs/wolfenflickr" target="_blank"&gt;Flickr&lt;/a&gt;) and most recently I've been playing around with the Digg API. I've got something nice coming soon but as a simple intro project - and since I'm also working on a redesign of nihilogic.dk - I decided to pretty up the "Digg this" button as I've always found the official one rather ugly and inflexible. &lt;br&gt;
&lt;/span&gt;
&lt;br&gt;

&lt;div style="float:right;width:75px;height:120px;margin-left:10px;"&gt;
&lt;script type="text/javascript"&gt;
digg_url = 'http://blog.nihilogic.dk/2008/09/prettier-more-styleable-digg-button.html';
&lt;/script&gt;
&lt;script src="http://digg.com/tools/diggthis.js" type="text/javascript"&gt;&lt;/script&gt; 
&lt;span style="font-size:80%;font-style:italic;"&gt;Official Digg button&lt;/span&gt;
&lt;/div&gt;Even if including a dynamic "Digg this" button on your blog or website is easy as pie and only requires setting a few variables and including a JavaScript file from their server (which includes a few more files) it doesn't leave you a lot of options with regards to styling (ie. 2 different button sizes and a custom text color, that's about it). If you want it to blend better with your layout, you're stuck with a static link to Digg, trading appearance for interactivity.
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;A compromise&lt;/b&gt;&lt;br&gt;
&lt;br&gt;

But, like any other respectable Web 2.0 service, Digg also has an API for developers wanting to use their services in their own software so I was surprised that I couldn't really find anyone who had built their own custom Digg buttons with this. The API is unfortunately somewhat limited (for security reasons, no doubt) in that it only allows you to retrieve info &lt;b&gt;from&lt;/b&gt; Digg, ie. you cannot submit or vote for sites directly using the API. Still, this lets us at least get any information Digg has about the page in question so we can show something other than a dull "Digg This" link. &lt;br&gt;

&lt;br&gt;
Let's skip to the end result for a bit. Doing this (the bare minimum):
&lt;pre name="code" class="javascript"&gt;
Digg.createButton(document.getElementById("buttonParent"));
&lt;/pre&gt;
..will get you a Digg button that displays the number of Diggs the current page has gotten or, if it has not been submitted yet, the text "Submit". The first argument is required and is the DOM element the button will be added to. Clicking the button will take you to either the relevant page on Digg.com or to the submission page if it has not been submitted yet. The default button looks like this:

&lt;br&gt;
&lt;span id="digg_button_default_tets"&gt;&lt;/span&gt;
&lt;script&gt;Digg.createButton(document.getElementById("digg_button_default_tets"), {url : postURLTest});&lt;/script&gt;
&lt;br&gt;
&lt;br&gt;
&lt;b&gt;Options&lt;/b&gt;&lt;br&gt;
&lt;br&gt;

Optionally, you can pass an options object like this:
&lt;pre name="code" class="javascript"&gt;
Digg.createButton(
    document.getElementById("buttonParent"),
    {
        style : "digg_guy_dark",
        newWindow : true,
        autoUpdate : 30000
    }
);
&lt;/pre&gt;
This will give you a button in another style (more about those in a bit) which opens in a new window when clicked and automatically updates the displayed Digg count every 30 seconds.&lt;br&gt;
&lt;br&gt;

A few more settings are available, the full list being:&lt;br&gt;
&lt;br&gt;
&lt;li&gt;&lt;b&gt;url&lt;/b&gt;: Override the URL of the page. Useful for blog posts. Like "digg_url" for the official button.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;title&lt;/b&gt;: Title to submit the page with (when not already submitted). Like "digg_title" for the official button.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;description&lt;/b&gt;: Description to submit the page with (when not already submitted). Like "digg_bodytext" for the official button.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;topic&lt;/b&gt;: Topic to submit the page under (when not already submitted). Like "digg_topic" for the official button.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;media&lt;/b&gt;: Media to submit the page under (when not already submitted). Like "digg_media" for the official utton.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;style&lt;/b&gt;: Style of the button. See below.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;newWindow&lt;/b&gt;: If true, clicking the button will open a new window/tab.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;autoUpdate&lt;/b&gt;: If true, the Digg count will be updated automatically.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;updateInterval&lt;/b&gt;: Interval for the autoUpdate timer in miliseconds. Defaults to 30000, minimum is 10000.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;onlyIfDugg&lt;/b&gt;: Only displays the button if the page has already been submitted to Digg.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;submitText&lt;/b&gt;: Alternative text instead of "Submit", ie. "Digg This!" or whatever you fancy.&lt;/li&gt;
&lt;br&gt;
&lt;b&gt;Styles&lt;/b&gt;&lt;br&gt;
&lt;br&gt;

Different styles are available and it's rather easy to create your own. See the included CSS files for examples. The CSS classes use a naming pattern like this:&lt;br&gt;

&lt;br&gt;
dg_container_&amp;lt;keyword&amp;gt;&lt;br&gt;

dg_diggs_link_&amp;lt;keyword&amp;gt;&lt;br&gt;

... &lt;br&gt;
&lt;br&gt;

where keyword is the value of the "style" setting in the options object above.&lt;br&gt;
&lt;br&gt;

Ie. if you create your own style called "prettydigg", name your classes dg_container_prettydigg, dg_diggs_prettydigg, etc. and call Digg.createButton(parentNode, {style:"prettydigg"}).&lt;br&gt;
&lt;br&gt;

Below you'll see a selection of the styles in the package. There are only a couple and they're nothing fancy, but it's pretty easy to make your own.&lt;br&gt;
&lt;br&gt;

&lt;table style="width:340px;"&gt;

&lt;tr&gt;&lt;td&gt;&lt;span id="test1"&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;
&lt;script&gt;Digg.createButton(document.getElementById("test1"), {url : postURLTest});&lt;/script&gt;
Default style
&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;&lt;span id="test2"&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;
&lt;script&gt;Digg.createButton(document.getElementById("test2"), {url : postURLTest, style:"default_red"});&lt;/script&gt;
Default style (red)
&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;&lt;span id="test3"&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;
&lt;script&gt;Digg.createButton(document.getElementById("test3"), {url : postURLTest, style:"default_dark"});&lt;/script&gt;
Default style (dark)
&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;&lt;span id="test4"&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;
&lt;script&gt;Digg.createButton(document.getElementById("test4"), {url : postURLTest, style:"digg_guy_dark"});&lt;/script&gt;
"Digg Guy" style (dark)
&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;&lt;span id="test5"&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;
&lt;script&gt;Digg.createButton(document.getElementById("test5"), {url : postURLTest, style:"badge_dark"});&lt;/script&gt;
"Badge" style (dark)
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;br&gt;
There is one more method: Digg.setAPIKey(). Digg asks for an API key (that you decide) for each call, using the URL for your homepage or application is cool:
&lt;pre name="code" class="javascript"&gt;
 Digg.setAPIKey("http://www.nihilogic.dk/");
&lt;/pre&gt;
Anyway, that was a lot of words for a simple button. &lt;br&gt;
&lt;br&gt;
Get the files here: &lt;a href="http://www.nihilogic.dk/labs/digg_button/prettydigg-0.1.1.zip"&gt;prettydigg-0.1.1.zip [15 KB]&lt;/a&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=nlmpPA"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=nlmpPA" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=2HiUL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=2HiUL" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=mNttl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=mNttl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=yaOWl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=yaOWl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=acmDl"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=acmDl" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=XKURL"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=XKURL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/7745320883817787219/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/09/prettier-more-styleable-digg-button.html#comment-form" title="7 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7745320883817787219?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7745320883817787219?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/09/prettier-more-styleable-digg-button.html" title="A prettier, more styleable Digg button" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-4627112155371578511</id><published>2008-08-25T07:58:00.001-07:00</published><updated>2008-09-10T14:19:56.057-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-10T14:19:56.057-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="elsewhere" /><category scheme="http://www.blogger.com/atom/ns#" term="exif" /><title type="text">PhotoInfo - A Firefox extension that displays EXIF data</title><content type="html">Nicholas Ortenzio emailed to say that he has used the &lt;a href="http://blog.nihilogic.dk/2008/05/reading-exif-data-with-javascript.html"&gt;EXIF reader library&lt;/a&gt; to create a Firefox extension that reads EXIF tags from images on the pages you visit and displays them when the mouse hovers over the images.&lt;br /&gt;&lt;br /&gt;There are options for selecting which tags you want displayed, styling the display box, etc. Pretty cool! Check it out at the &lt;a href="http://photoinfo.downwith.us/" target="_blank"&gt;PhotoInfo website&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=hTslyL"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=hTslyL" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=q7aR6K"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=q7aR6K" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=khh5rk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=khh5rk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=q8fHdk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=q8fHdk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=RbB2Tk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=RbB2Tk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=DivJtK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=DivJtK" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/4627112155371578511/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/08/photoinfo-firefox-extension-that.html#comment-form" title="0 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/4627112155371578511?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/4627112155371578511?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/08/photoinfo-firefox-extension-that.html" title="PhotoInfo - A Firefox extension that displays EXIF data" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-1111588434599488818</id><published>2008-08-23T08:23:00.000-07:00</published><updated>2008-09-10T14:20:32.880-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-10T14:20:32.880-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="image" /><category scheme="http://www.blogger.com/atom/ns#" term="binary" /><title type="text">ImageInfo - reading image metadata with JavaScript</title><content type="html">&lt;span class="post-summary"&gt;&lt;span style="font-style: italic;"&gt;A small JavaScript library capable of reading metadata (format, dimensions, etc) from image files.&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
Trying to squeeze out the last drops of binary juice before moving on to something else, here's a small library much like the &lt;a href="http://blog.nihilogic.dk/2008/08/reading-id3-tags-with-javascript.html"&gt;ID3 reader&lt;/a&gt; but for images. It works pretty much the same as the ID3 library and as you'll see below, the code to use it is also very similar.&lt;br /&gt;&lt;/span&gt;
&lt;br /&gt;
It tries to detect the format of the image file and then reads the header and pulls out information about dimensions and color depth among other things. If the &lt;a href="http://www.nihilogic.dk/labs/exif/"&gt;EXIF data library&lt;/a&gt; is included, it will also gather any EXIF tags from JPEG files.&lt;br /&gt;
&lt;br /&gt;
Example usage:&lt;br /&gt;
&lt;pre class="html" name="code"&gt;
&amp;lt;!-- include these files --&amp;gt;
&amp;lt;script type="text/javascript" src="../binaryajax/binaryajax.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type="text/javascript" src="imageinfo.js" &amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- optionally include exif.js for Exif support --&amp;gt;
&amp;lt;script type="text/javascript" src="../exif/exif.js" &amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;
&lt;br /&gt;
And then a bit of JavaScript:&lt;br /&gt;
&lt;pre class="javascript" name="code"&gt;

// URL of the image (must be on the same domain!)
var file = "prettypicture.jpg";

// define your own callback function
function mycallback() {
   // either call the ImageInfo.getAllFields([file]) function which returns an object holding all the info
   alert(
       "All info about this file: " + ImageInfo.getAllFields(file).toSource()
   );

   // or call ImageInfo.getField([file], [field]) to get a specific field
   alert(
       "Format: " + ImageInfo.getField(file, "format") + ", dimensions : " + ImageInfo.getField(file, "width") + "x" + ImageInfo.getField(file, "height")
   );
}

// finally, load the data
ImageInfo.loadInfo(file, mycallback);

&lt;/pre&gt;
&lt;br /&gt;
File formats supported are JPEG, PNG, GIF and BMP.&lt;br /&gt;
&lt;br /&gt;
It was somewhat inspired the &lt;a href="http://img2json.appspot.com/" target="_blank"&gt;IMG2JSON&lt;/a&gt; AppEngine application by Adam Burnister so the field names have similar names. Calling the getAllInfo() function will get you an image info object containing the following fields:&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;format &lt;/span&gt;(one of "JPEG", "PNG", "GIF" or "BMP")&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;version &lt;/span&gt;(currently only used for GIF, ie. "89a")&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;width &lt;/span&gt;(width of image in pixels)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;height &lt;/span&gt;(height of image in pixels)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;bpp &lt;/span&gt;(bits per pixel, ie. 8, 16, 24, etc)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;alpha &lt;/span&gt;(true if alpha channel is present, only for PNGs)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;mimeType &lt;/span&gt;(the mime type sent by the server)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;byteSize &lt;/span&gt;(the file size as reported by the server)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-weight: bold;"&gt;exif &lt;/span&gt;(an object containing &lt;a href="http://blog.nihilogic.dk/2008/05/reading-exif-data-with-javascript.html"&gt;EXIF tag data&lt;/a&gt;, if present. Only for JPEGs)&lt;/li&gt;
&lt;br /&gt;
&lt;br /&gt;
These are also the fieldnames used in the getField() function.&lt;br /&gt;
&lt;br /&gt;
I might try to include more format specific information later (like color tables for indexed GIFs and PNGs, number of frames in animated GIFs and so on).&lt;br /&gt;
&lt;br /&gt;
Since the header information is usually only a very small portion of the image file, there's an option to only request a number of bytes from the beginning of the file. By setting &lt;span style="font-style: italic;"&gt;ImageInfo.useRanges = true&lt;/span&gt; and &lt;span style="font-style: italic;"&gt;ImageInfo.range = &amp;lt;n&amp;gt;&lt;/span&gt;, only the first &amp;lt;n&amp;gt; bytes will be downloaded. However, since the position of the header information in JPEG files isn't fixed (neither is the size of any EXIF data), this has been left as an option. If you're not using it with JPEG files or if you know your JPEGs don't have embedded thumbnails, you should be safe to set it to only get the first few KBs or so.&lt;br /&gt;
&lt;br /&gt;
See it in action here: &lt;a href="http://www.nihilogic.dk/labs/imageinfo/"&gt;http://www.nihilogic.dk/labs/imageinfo/&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
Download the code here: &lt;a href="http://www.nihilogic.dk/labs/imageinfo/imageinfo-0.1.1.zip"&gt;imageinfo-0.1.1.zip [8.29 KB]&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=1r9iiO"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=1r9iiO" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=4zL8PK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=4zL8PK" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=rA6OFk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=rA6OFk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=ta2Vak"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=ta2Vak" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Oz3Oik"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Oz3Oik" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=ZkoVoK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=ZkoVoK" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/1111588434599488818/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/08/imageinfo-reading-image-metadata-with.html#comment-form" title="5 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/1111588434599488818?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/1111588434599488818?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/08/imageinfo-reading-image-metadata-with.html" title="ImageInfo - reading image metadata with JavaScript" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-3393553335516366240</id><published>2008-08-19T04:34:00.000-07:00</published><updated>2008-09-10T05:06:05.072-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-10T05:06:05.072-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="binary" /><title type="text">Reading ID3 tags with JavaScript</title><content type="html">&lt;span style="font-style: italic;"&gt;A small JavaScript library capable of reading ID3 (v1) tags from MP3 files.&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
I figured I'd try to put the binary Ajax code to some other use than the &lt;a href="http://blog.nihilogic.dk/2008/06/exif-gps-info-google-maps.html"&gt;EXIF data library&lt;/a&gt;, and a simple project seemed to be the ID3 tags used to store artist, title, etc. in MP3's. For now, it's only capable of reading (the rather lacking) ID3v1 tags since these are very simple compared to the more fleshed out and robust ID3v2 tags. Maybe I'll try to add support for the v2 tags later.&lt;br /&gt;
&lt;br /&gt;
The script tries to only requesting partial data by using the Range request header if ranges are supported. This means we only have to download the actual tag data but also that we have to make a HEAD request first to get the file size and to ensure ranges are actually supported. &lt;br /&gt;
&lt;br /&gt;
It's rather simple to use:&lt;br /&gt;
&lt;br /&gt;
Two JS files are needed:&lt;br /&gt;
&lt;pre class="html" name="code"&gt;&amp;lt;script type="text/javascript" src="../binaryajax/binaryajax.js" &amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type="text/javascript" src="id3.js" &amp;gt;&amp;lt;/script&amp;gt;
&lt;/pre&gt;
&lt;br /&gt;
And a bit of JavaScript:&lt;br /&gt;
&lt;pre class="javascript" name="code"&gt;// URL of the mp3 file (must be on the same domain!)
var file = "mymusicfile.mp3";

// define your own callback function
function mycallback() {
 // either call the ID3.getAllTags([file]) function which returns an object holding all the tags
 alert(
  "All tags in this file: " + ID3.getAllTags(file).toSource()
 );

 // or call ID3.getTag([file], [tag]) to get a specific tag
 alert(
  "Title: " + ID3.getTag(file, "title") + " by artist: " + ID3.getTag(file, "artist")
 );
}

ID3.loadTags(file, mycallback);

&lt;/pre&gt;
&lt;br /&gt;
Tags available are: artist, title, album, year, album, comment, genre&lt;br /&gt;
&lt;br /&gt;
As with the EXIF reader, it does not work with Opera since I still haven't found a way to access binary data with that browser.&lt;br /&gt;
&lt;br /&gt;
Check out a demo here: &lt;a href="http://www.nihilogic.dk/labs/id3/" target="_blank"&gt;http://www.nihilogic.dk/labs/id3/&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
Download the files here: &lt;a href="http://www.nihilogic.dk/labs/id3/id3.zip"&gt;id3.zip [3.17 KB]&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=QF6qjZ"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=QF6qjZ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=SlXv3K"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=SlXv3K" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=lV6dOk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=lV6dOk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Ja6UDk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Ja6UDk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=nJrS0k"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=nJrS0k" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=kWZTpK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=kWZTpK" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/3393553335516366240/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/08/reading-id3-tags-with-javascript.html#comment-form" title="15 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3393553335516366240?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/3393553335516366240?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/08/reading-id3-tags-with-javascript.html" title="Reading ID3 tags with JavaScript" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">15</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-4667257316560784763</id><published>2008-08-17T12:33:00.000-07:00</published><updated>2008-08-17T12:59:23.019-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-08-17T12:59:23.019-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="appjet" /><category scheme="http://www.blogger.com/atom/ns#" term="server-side" /><title type="text">AppJet  + Random.org = True JSON randomness</title><content type="html">Oi, I've been busy for the past week, mostly with doing nothing at all and just enjoying the tail end of the summer. Got some good ideas I need to put some work in now but for now here's another small app I made while &lt;a href="http://blog.nihilogic.dk/2008/08/appjet-server-side-javascript-and.html"&gt;messing around with AppJet&lt;/a&gt; a few weeks ago. &lt;br /&gt;&lt;br /&gt;It's a simple JS gateway to the true random number generator at &lt;a href="http://Random.org"&gt;Random.org&lt;/a&gt; (created by Mads Haahr). It accesses the Random.org API, retrieves a number of random integers (maximum of 100 numbers), turns the response into JSON data and calls a callback function specified by you.&lt;br /&gt;&lt;br /&gt;Example usage:&lt;pre name="code" class="html"&gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;script&amp;gt;&lt;br /&gt;function randomcallback(res) {&lt;br /&gt;   alert( "A random number between 1 and 100: " + res.numbers[0] );&lt;br /&gt;}&lt;br /&gt;&amp;lt;/script&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;script src="http://json-random.appjet.net/?num=1&amp;min=1&amp;max=100&amp;callback=randomcallback" /&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;I'm not sure if I'll ever have a use case where a pseudo-random Math.random() call won't do, but usefulness is not really my game anyway..&lt;br /&gt;&lt;br /&gt;Check out the application and source here: &lt;a href="http://json-random.appjet.net/"&gt;http://json-random.appjet.net/&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=H7RDNR"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=H7RDNR" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=qMN9lK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=qMN9lK" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=gXmDrk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=gXmDrk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=xhyMEk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=xhyMEk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=cm4uak"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=cm4uak" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=H9PobK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=H9PobK" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/4667257316560784763/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/08/appjet-randomorg-true-json-randomness.html#comment-form" title="0 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/4667257316560784763?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/4667257316560784763?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/08/appjet-randomorg-true-json-randomness.html" title="AppJet  + Random.org = True JSON randomness" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-7742013529478790364</id><published>2008-08-02T05:56:00.000-07:00</published><updated>2008-09-10T14:21:32.949-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-10T14:21:32.949-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="server-side" /><category scheme="http://www.blogger.com/atom/ns#" term="youtube" /><title type="text">AppJet, Server-side JavaScript and YouTube Annotations</title><content type="html">&lt;span class="post-summary"&gt;Whenever I've needed something small done on the server-side, I've always ended up with PHP since I know it, there's no setup and it can do a whole bunch of stuff. I just don't enjoy writing PHP in any way and I just wish I could do stuff on the server with JavaScript as easily as with PHP. Last time I went looking (long time ago) there wasn't really any options that looked good enough but it seems that things have changed a bit. &lt;/span&gt;There are more than a few &lt;a href="http://en.wikipedia.org/wiki/Server-side_JavaScript" target="_blank"&gt;server-side JS solutions&lt;/a&gt; available today, but two of them struck me as interesting even if they were not exactly what I was looking for. One of them was &lt;a href="http://www.appjet.com/" target="_blank"&gt;AppJet&lt;/a&gt; which launched its service late last year. What it does is let you write your server-side JavaScript application in a simple online IDE and then host it at http://&amp;lt;appname&amp;gt;.appjet.com/ all with just a few clicks. &lt;br /&gt;
&lt;br /&gt;
I wouldn't attempt to put the next Facebook or Twitter on AppJet, but for the purpose of writing small and simple applications on the server in JavaScript, I think it's just awesome. The &lt;a href="http://json-ytann.appjet.net/"&gt;small app&lt;/a&gt; I wrote (click the "source" link at the bottom to view the source) to test it out is a proxy of sorts for the &lt;a href="http://blog.nihilogic.dk/2008/06/youtube-annotations-and-javascript.html"&gt;YouTube annotation script&lt;/a&gt; I posted a few months ago, and it was quite a pleasant experience due to the very short path from idea to actually seeing something happen. AppJet has of course all the needed JavaScript functionality and also provides a few extra features like persistent storage and HTTP access. Nothing really impressive, but there's also a &lt;a href="http://appjet.com/directory/libs" target="_blank"&gt;directory&lt;/a&gt; of user written JS libraries that you can import to add more functionality. Anyway, this &lt;a href="http://json-ytann.appjet.net/"&gt;YouTube annotation application&lt;/a&gt; simply retrieves the XML from Google's server, converts it to JSON data and either spits it out raw or calls a specified callback function. I've modified the proof-of-concept &lt;a href="http://www.nihilogic.dk/labs/youtubeannotations/"&gt;YouTube annotation player&lt;/a&gt; to use this instead of the PHP proxy it was using earlier, simplifying the client-side JS a lot.&lt;br /&gt;
&lt;br /&gt;
The other SSJS solution I've been looking at is &lt;a href="http://www.aptana.com/jaxer/" target="_blank"&gt;Aptana Jaxer&lt;/a&gt; which is something entirely different. I have only just gotten it up and running, but I hope to get time to take a deeper look at it when I return from a bit of vacationing in Paris next week. If you have any experience with any of the server-side JavaScript options, please leave a comment and share your thoughts!
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=HpNA6a"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=HpNA6a" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=YAt4TK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=YAt4TK" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=vkwd7k"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=vkwd7k" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Ke2bTk"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Ke2bTk" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=TyD8Ck"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=TyD8Ck" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=l3R0fK"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=l3R0fK" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/7742013529478790364/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/08/appjet-server-side-javascript-and.html#comment-form" title="13 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7742013529478790364?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/7742013529478790364?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/08/appjet-server-side-javascript-and.html" title="AppJet, Server-side JavaScript and YouTube Annotations" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">13</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-2128978359882291823</id><published>2008-07-29T06:07:00.000-07:00</published><updated>2008-09-10T14:22:24.256-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-10T14:22:24.256-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="games" /><title type="text">20 Lines JavaScript Super Mario Tribute</title><content type="html">&lt;span class="post-summary"&gt;
&lt;img border="0" id="BLOGGER_PHOTO_ID_5228425081544265346" src="http://bp2.blogger.com/_OjchJpvqFiw/SI8Y6QgwToI/AAAAAAAAAK0/FDqjls8FWFE/s200/mario20.png" style="float: left; margin: 0pt 10px 10px 0pt;" title="20 Lines JavaScript Super Mario Tribute" /&gt;
The good inmates over at the &lt;a href="http://www.ozoneasylum.com/" target="_blank"&gt;Ozone Asylum&lt;/a&gt; have a &lt;a href="http://www.ozoneasylum.com/30391" target="_blank"&gt;monthly JavaScript contest&lt;/a&gt; where the goal is to create something interesting in just 20 lines of "effective" code, each month having its own theme. I've been following it for a while and since this month's theme was "Your favourite video game", I figured it was about time I submitted something. 
&lt;/span&gt;
&lt;br&gt;&lt;br&gt;You may or may not know that I have a certain affection for both JavaScript game development and &lt;a href="http://blog.nihilogic.dk/2008/04/super-mario-in-14kb-javascript.html"&gt;Super&lt;/a&gt; &lt;a href="http://blog.nihilogic.dk/2008/05/javascript-super-mario-kart.html"&gt;Mario&lt;/a&gt;, so I saw this as a chance to go back, start from scratch and have another go at getting some JavaScript Mario action. However, rather than attempting a remake of the original SMB, this is a bit different. Each single-screen level has two pipes, start and finish. Before exiting you must bonk all the [?]-boxes, collect the coins they spit out and stomp all the Goombas. There are 6 levels after which you just get to play the same levels again.&lt;br /&gt;
&lt;br /&gt;
As with the previous Mario game, the tiles and sprites are all generated with pure JavaScript and DOM elements, no image files have been used. For this reason, the game is rather slow in Firefox 2. It seems to run best with IE7 but is also playable with Firefox 3, Opera 9.5 or Safari.&lt;br /&gt;
&lt;br /&gt;
Since the contest is still running for a few days, I'll probably be polishing it a bit until then.&lt;br /&gt;
&lt;br /&gt;
&lt;a href="http://www.nihilogic.dk/labs/20_lines_javascript/july08_super_mario/" target="_blank"&gt;Play JavaScript Super Mario Tribute!&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;Edit: For those wondering, the rules in these contests are rather lax as it's hard to define just what exactly defines a "line of code". Generally the rules say that literal object declarations count as one line. Function declaration do not count. Commas should not be used to put multiple instructions on a single line.&lt;/span&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=fsSjxf"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=fsSjxf" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=6Y86tJ"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=6Y86tJ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=vEwFFj"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=vEwFFj" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=Py01Ej"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=Py01Ej" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=7GFw4j"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=7GFw4j" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=9v5toJ"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=9v5toJ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/2128978359882291823/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/07/20-lines-javascript-super-mario-tribute.html#comment-form" title="26 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/2128978359882291823?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/2128978359882291823?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/07/20-lines-javascript-super-mario-tribute.html" title="20 Lines JavaScript Super Mario Tribute" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://bp2.blogger.com/_OjchJpvqFiw/SI8Y6QgwToI/AAAAAAAAAK0/FDqjls8FWFE/s72-c/mario20.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">26</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-4266270654297320794</id><published>2008-07-16T10:27:00.000-07:00</published><updated>2008-09-10T14:23:00.302-07:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-09-10T14:23:00.302-07:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="canvas" /><category scheme="http://www.blogger.com/atom/ns#" term="effects" /><title type="text">House of Canvas - Radiohead meets JavaScript</title><content type="html">&lt;span class="post-summary"&gt;
&lt;img alt="" border="0" height="134" id="BLOGGER_PHOTO_ID_5223665174343284914" src="http://bp3.blogger.com/_OjchJpvqFiw/SH4vzMZPeLI/AAAAAAAAAKk/4VGBoaPuPvA/s320/postimage.png" style="float: left; margin: 0pt 10px 10px 0pt;" title="JavaScript visualization of Radiohead 3D particle data" width="139" /&gt;You may know that Radiohead has gone and done the awesome thing of making a music video using not cameras but LASERS and DATA! Rock! Using neat tricks and technology, they made a visualization of 3D data captured by their magic laser thing and turned it into a music video for their House of Cards song. And to make it even awesomer, they released some of the data that went into making this video on &lt;a href="http://code.google.com/creative/radiohead/" target="_blank"&gt;Google Code!&lt;/a&gt;.
&lt;/span&gt;&lt;br&gt;
&lt;br /&gt;
I figured it would be a nice little experiment to try visualizing this data using JavaScript and Canvas so I went and &lt;a href="http://www.nihilogic.dk/labs/radiohead-meets-javascript/"&gt;did just that&lt;/a&gt;. The data is simply point clouds, meaning a whole bunch of points with x,y,z values (and intensity) for each frame. The data on Google Code is about 800 MB, so obviously a bit of trimming had to be done. You can't expect 30 fps with Javascript and this kind of data, so I've only used every 5 frames giving us a framerate of 6 fps, not great but acceptable. Then the actual points, each frame has more than 6,000 points. &lt;strike&gt;No way this will render with 6 fps in any browser&lt;/strike&gt;You need a good deal of power and/or &lt;a href="http://www.p01.org/tmp/house_of_optimizations.htm" target="_blank"&gt;Opera&lt;/a&gt; to get that rendering at 6+ fps, so again I've taken only 10% of the points. Additionally, I've tried to filter away the noise around Thom Yorke's head since that took up a good deal of points. The interesting bit is him singing, anyway. In the end, we have a dataset of about 4 MB (converted to a JS array) for the one minute clip they released.&lt;br /&gt;
&lt;br /&gt;
Now the data is in a more manageable state and the visualization can begin. It's not as good as the real thing, obviously, but I think it's ok (it's best when you look at Thom in profile). The &lt;a href="http://dl.google.com/code/creative/radiohead/data/hoc_loop.mp3" target="_bæank"&gt;audio clip&lt;/a&gt; is as usual played via &lt;a href="http://www.schillmania.com/projects/soundmanager2/" target="_blank"&gt;SoundManager 2&lt;/a&gt; which also gives us free timing information to sync the rendering to. I've played around and made a few different effects that you can toggle on and off (by pressing keys 1-9). While it is playing you can also rotate around the vertical axis by moving the mouse horizontally over the video. Also try clicking/doubleclicking.&lt;br /&gt;
&lt;br /&gt;
If you're interested in the JavaScript code, it's right &lt;a href="http://www.nihilogic.dk/labs/radiohead-meets-javascript/radiohead.js"&gt;here&lt;/a&gt;. Note that since it uses the Canvas element, it won't work in Internet Explorer!&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;Edit: I removed effect 3 (xor) since it wasn't working so well anymore and replaced it with some intensity coloring that looks more like what is used in the real video.&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a href="http://www.nihilogic.dk/labs/radiohead-meets-javascript/high-res/" onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" target="_blank"&gt;&lt;img alt="" border="0" id="BLOGGER_PHOTO_ID_5223946103798286514" src="http://bp0.blogger.com/_OjchJpvqFiw/SH8vTcKuyLI/AAAAAAAAAKs/9iMDjsxIFTI/s400/postimage2.png" style="cursor: pointer; float: right; margin: 0pt 0pt 10px 10px;" title="JavaScript visualization of high-res Radiohead 3D particle data" /&gt;&lt;/a&gt;&lt;span style="font-style: italic;"&gt;Edit 2: A new, &lt;a href="http://www.nihilogic.dk/labs/radiohead-meets-javascript/high-res/"&gt;high-res version&lt;/a&gt; has been posted. It's only one frame, so no animation (also no music), but it uses all the points from the dataset and now you can actually see that it's Thom Yorke. Since we're dealing with so many points, don't expect it to rotate smoothly. I'm only getting something like 2 fps with FF2. &lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;Edit 3: You can now press w and s to zoom in and out, respectively.&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a href="http://www.nihilogic.dk/labs/radiohead-meets-javascript/"&gt;Check it out here&lt;/a&gt;
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=kSOjFN"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=kSOjFN" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=sodiJJ"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=sodiJJ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=pKQnMj"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=pKQnMj" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=1K0wgj"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=1K0wgj" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=M70zRj"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=M70zRj" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=lSOnQJ"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=lSOnQJ" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/4266270654297320794/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/07/house-of-canvas-radiohead-meets.html#comment-form" title="22 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/4266270654297320794?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/4266270654297320794?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/07/house-of-canvas-radiohead-meets.html" title="House of Canvas - Radiohead meets JavaScript" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://bp3.blogger.com/_OjchJpvqFiw/SH4vzMZPeLI/AAAAAAAAAKk/4VGBoaPuPvA/s72-c/postimage.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">22</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8877325777086061039.post-383798847193158902</id><published>2008-07-14T01:46:00.000-07:00</published><updated>2008-11-28T09:23:21.305-08:00</updated><app:edited xmlns:app="http://purl.org/atom/app#">2008-11-28T09:23:21.305-08:00</app:edited><category scheme="http://www.blogger.com/atom/ns#" term="javascript" /><category scheme="http://www.blogger.com/atom/ns#" term="games" /><category scheme="http://www.blogger.com/atom/ns#" term="flickr" /><category scheme="http://www.blogger.com/atom/ns#" term="3d" /><category scheme="http://www.blogger.com/atom/ns#" term="mashup" /><title type="text">WolfenFlickr 3D - An unlikely mashup</title><content type="html">&lt;span class="post-summary"&gt;
&lt;img alt="" border="0" id="BLOGGER_PHOTO_ID_5222794284033227266" src="http://bp0.blogger.com/_OjchJpvqFiw/SHsXutK9ugI/AAAAAAAAAKM/ekZOwa6THzs/s200/wolfenflickr_1.png" title="WolfenFlickr 3D - A JavaScript / Wolfenstein 3D mashup" style="float:left;margin-right:10px;" /&gt;&lt;span style="font-style: italic;"&gt;Long after B.J. Blazkowicz left Castle Wolfenstein guns blazing, the castle still holds a few secrets. On a super secret floor stolen art in the form of Flickr images has been found and for the first time, this strange gallery is now open to the public.&lt;br /&gt;
&lt;/span&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;br/&gt;
&lt;span class="note"&gt;
If you're interested in building an engine such as this yourself, take a look at the &lt;a href="http://dev.opera.com/articles/view/creating-pseudo-3d-games-with-html-5-can-1/" target="_blank"&gt;Dev.Opera article&lt;/a&gt; I've written on this topic.
&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;

This is a (silly) mashup of &lt;a href="http://en.wikipedia.org/wiki/Wolfenstein_3D" target="_blank" class="wiki-summary-link" rel="nofollow"&gt;Wolfenstein 3D&lt;/a&gt; and &lt;a href="http://www.flickr.com/" target="_blank" rel="nofollow"&gt;Flickr&lt;/a&gt;. More specifically, it's a Javascript raycaster using Wolfenstein graphics that allows you to import Flickr images by username/search query and then walk around this odd gallery.&lt;br /&gt;
&lt;br /&gt;
If you don't care about the details and just want WolfenFlickr gallery action, go straight to the &lt;a href="http://www.nihilogic.dk/labs/wolfenflickr/" target="_blank"&gt;WolfenFlickr 3D demo page&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
This little experiment killed two birds with one stone. First, I wanted to get to know Flickr's API (and Flickr itself, actually, me not being a big photo nerd). Second, I wanted to do a Javascript raycasting engine. In a moment of unusual clarity, it came to me that these goals were not mutually exclusive and while the end result borders the useless (hey, most things here do), the project served its purpose well.&lt;br /&gt;
&lt;br /&gt;
&lt;img alt="" border="0" id="BLOGGER_PHOTO_ID_5222799484138310626" src="http://bp2.blogger.com/_OjchJpvqFiw/SHscdZEoS-I/AAAAAAAAAKU/74WqYLwD4AQ/s400/wolfenflickr_2.png" style="float: right; margin: 0pt 0pt 10px 10px;" alt="WolfenFlickr 3D - Flickr / Wolfenstein 3D JavaScript Mashup" /&gt;The Flickr API part turned out to be pretty simple. The Flickr guys are good people and provide very easy to use &lt;a href="http://www.flickr.com/services/api/" target="_blank" rel="nofollow"&gt;methods&lt;/a&gt;, JSON data and the option to specify callback JS functions making it a breeze to implement Flickr integration, at least on the level that I'm using here. So, we simply retrieve all photos from a specified user (or matching a search query) to create a list of images for our gallery. For performance reasons, only the first 20 Flickr images are used.&lt;br /&gt;
&lt;br /&gt;
The Wolfenstein part wasn't all too hard either, although lots of tinkering was needed to make it run semi-smoothly. Unlike the previous &lt;a href="http://www.nihilogic.dk/labs/wolf/"&gt;JavaScript Wolfenstein 3D&lt;/a&gt; experiments here, this one uses a raycasting engine and not the &lt;a href="http://blog.nihilogic.dk/2008/04/canvas-3d-better-textures.html"&gt;JavaScript 3D engine&lt;/a&gt;. If you want to read more about raycasting, check &lt;a href="http://www.permadi.com/tutorial/raycast/" target="_blank" rel="nofollow"&gt;this link&lt;/a&gt; or &lt;a href="http://en.wikipedia.org/wiki/Ray_casting" class="wiki-summary-link" target="_blank" rel="nofollow"&gt;Wikipedia&lt;/a&gt;.&lt;br /&gt;
&lt;br /&gt;
&lt;img alt="" border="0" id="BLOGGER_PHOTO_ID_5222800808767656018" src="http://bp2.blogger.com/_OjchJpvqFiw/SHsdqfs4EFI/AAAAAAAAAKc/TnZMAkgk86E/s400/wolfenflickr_3.png" style="float: left; margin: 0pt 10px 10px 0pt;" title="WolfenFlickr 3D - Flickr / Wolfenstein 3D JavaScript Mashup" /&gt;Basically, The screen is divided into X amount of vertical strips (div elements). Each of these strips contains an image element with all the wall textures making the strips serve as containers and masks for the actual lines. "Rays" are then cast out on the map for each strip and when the ray hits a wall, we simply move and scale the wall texture image in the strip according to which wall type, where on the wall the ray hit and how far away it is. Each strip also holds a copy of all the Flickr images positioned on top of the wall textures. Each wall block (with picture frame) is assigned a Flickr image and then it's just a matter of showing the appropriate part of the image on top of the texture. The pictures are stretched (and slightly cropped) to fit the frames, so it looks best with pictures that are not too tall/wide. There are a few things I need to fix and then maybe I'll do a more detailed post on the raycasting part if there's any interest?&lt;br /&gt;
&lt;br /&gt;
I also tried using canvas just to see what kind of performance that would give. It appeared to be roughly equal to the straight DOM approach but would get complicated (and probably slower) when sprites were added since the current approach utilizes the browser's own fast depth sorting via the z-index on the strips and sprites.&lt;br /&gt;
&lt;br /&gt;
Tested with FF2, FF3, Opera 9.51, IE7 (IE8b1 doesn't work), Safari 3.3.2. For some reason the recent WebKit nightlies are not working for me at all (crashes on any page, anyone else get that?), but Safari 4 dev preview works fine.&lt;br /&gt;
Safari is awesome and runs very smoothly for me. Opera 9.51 runs ok, IE7 and FF2 a little slower and for some reason FF3 is just horrible slow. Where FF2 takes a hit at the raycasting (ie. pure Javascript) and is quite fast at changing/rendering the DOM elements, it seems FF3 is just the opposite. Maybe I'll give the canvas approach another go and see how FF3 likes that.&lt;br /&gt;
&lt;span style="font-style: italic;"&gt;Edit: For better performance in Opera, turn off [Multimedia]-&amp;gt;"Interpolate images" in "opera:config" and it should run a lot faster.&lt;/span&gt;&lt;br /&gt;
The player position is for some reason not drawn on the minimap in IE (and the map might not render at all). Other than that, there shouldn't be any major problems (aside from speed).&lt;br /&gt;
&lt;br /&gt;
&lt;a href="http://www.nihilogic.dk/labs/wolfenflickr/"&gt;Take the WolfenFlickr 3D tour!&lt;/a&gt;&lt;br /&gt;
&lt;br/&gt;
Edit: I also found a &lt;a href="http://www.youtube.com/watch?v=ny6d0G3WIUE"&gt;Youtube video of WolfenFlickr in action&lt;/a&gt;. Check it out if you're having trouble with the real thing!&lt;br/&gt;
&lt;br/&gt;
And do leave a comment if you feel like it.
&lt;p&gt;&lt;a href="http://feeds.feedburner.com/~a/nihilogic?a=95dNy3"&gt;&lt;img src="http://feeds.feedburner.com/~a/nihilogic?i=95dNy3" border="0"&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=gnLw4J"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=gnLw4J" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=p1x7uj"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=p1x7uj" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=RjNIOj"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=RjNIOj" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=VLNXDj"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=VLNXDj" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~f/nihilogic?a=owfB2J"&gt;&lt;img src="http://feeds.feedburner.com/~f/nihilogic?i=owfB2J" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;</content><link rel="replies" type="application/atom+xml" href="http://blog.nihilogic.dk/feeds/383798847193158902/comments/default" title="Post Comments" /><link rel="replies" type="text/html" href="http://blog.nihilogic.dk/2008/07/wolfenflickr-3d-unlikely-mashup.html#comment-form" title="36 Comments" /><link rel="edit" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/383798847193158902?v=2" /><link rel="self" type="application/atom+xml" href="http://www.blogger.com/feeds/8877325777086061039/posts/default/383798847193158902?v=2" /><link rel="alternate" type="text/html" href="http://blog.nihilogic.dk/2008/07/wolfenflickr-3d-unlikely-mashup.html" title="WolfenFlickr 3D - An unlikely mashup" /><author><name>Jacob Seidelin</name><uri>http://www.blogger.com/profile/04783658679191587047</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://bp0.blogger.com/_OjchJpvqFiw/SHsXutK9ugI/AAAAAAAAAKM/ekZOwa6THzs/s72-c/wolfenflickr_1.png" height="72" width="72" /><thr:total xmlns:thr="http://purl.org/syndication/thread/1.0">36</thr:total></entry></feed>
