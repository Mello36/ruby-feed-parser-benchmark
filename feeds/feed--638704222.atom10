<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-8943097312547508745</id><updated>2008-12-10T17:35:45.165-08:00</updated><title type='text'>Alex Payne</title><subtitle type='html'>writes on the web here at &lt;a href="http://www.al3x.net"&gt;al3x.net&lt;/a&gt;.</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://www.al3x.net/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default'/><link rel='alternate' type='text/html' href='http://www.al3x.net/'/><link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default?start-index=26&amp;max-results=25'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>864</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-738983185294285425</id><published>2008-11-03T17:33:00.000-08:00</published><updated>2008-11-03T17:59:03.842-08:00</updated><title type='text'>Don't Assume You'll Be Voted For</title><content type='html'>Today, I've seen a number of my pro-&lt;a href="http://www.barackobama.com/"&gt;Obama&lt;/a&gt; friends linking to statistics and reports that Obama has the election in the bag. &amp;nbsp;This is dangerous and foolish. &amp;nbsp;&lt;a href="http://lessig.org/blog/2008/11/winning_tuesday_an_urgent_plea.html"&gt;Lawrence Lessig explains more&lt;/a&gt;:&lt;br /&gt;&lt;blockquote&gt;"We Democrats have trouble closing the deal. We have trouble continuing the push to the very last moment. We have repeatedly been blindsided by the fact that the other side votes regardless of the expected result, while we’re more contingent — making the effort if it seems necessary, relaxing when it doesn’t."&lt;/blockquote&gt;Nobody is voting in your stead. &amp;nbsp;Many people are voting against what you believe in. &amp;nbsp;Get out and &lt;a href="http://maps.google.com/vote"&gt;vote&lt;/a&gt;. &amp;nbsp;Do the right thing: vote for &lt;a href="http://barackobama.com/"&gt;Barack Obama&lt;/a&gt; and give America a chance at a brighter future.&lt;br /&gt;&lt;br /&gt;If you're in California,&amp;nbsp;&lt;a href="http://www.noonprop8.com/"&gt;Vote No on Prop 8&lt;/a&gt;&amp;nbsp;and encourage your friends, family, and coworkers to do the same. &amp;nbsp;Stand up against hate, bigotry, and injustice.&lt;br /&gt;&lt;br /&gt;Once you've voted, share your experience at &lt;a href="http://www.twittervotereport.com/"&gt;Twitter Vote Report&lt;/a&gt;.  Your report could save time for other voters and help pinpoint voter fraud and problematic polling places.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://maps.google.com/vote"&gt;Vote&lt;/a&gt;.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/738983185294285425'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/738983185294285425'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/11/dont-assume-youll-be-voted-for.html' title='Don&apos;t Assume You&apos;ll Be Voted For'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-8218133698866427991</id><published>2008-11-01T12:17:00.000-07:00</published><updated>2008-11-02T00:58:26.404-07:00</updated><title type='text'>An Open Reminder To Myself</title><content type='html'>A journalist's output is journalism. &amp;nbsp;A critic's output is criticism. &amp;nbsp;A programmer's output should be programs.&lt;br /&gt;&lt;br /&gt;I am a programmer who writes. &amp;nbsp;When I write, particularly when I write critically of technology, I should have programmatic solutions to offer along with my words. &amp;nbsp;If I don't have code to back up what I have to say, I haven't thought through the problem at hand thoroughly enough.&lt;br /&gt;&lt;br /&gt;There's no shortage of questions, but answers are scarce.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/8218133698866427991'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/8218133698866427991'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/11/open-reminder-to-myself.html' title='An Open Reminder To Myself'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-6735289222613933299</id><published>2008-10-28T16:01:00.000-07:00</published><updated>2008-10-28T17:00:01.586-07:00</updated><title type='text'>Lessons In Being Edited</title><content type='html'>Today, I learned something useful the hard way. Which is, incidentally, pretty much the way I learn everything.&lt;br /&gt;&lt;br /&gt;A couple months back I was invited to post on a web site that specializes in commentary about the future of the Internet. I did an interview with one of the site's editors.  In subsequent weeks, I found it hard to make the time to write a proper editorial-style piece for them.  I finally made the time this past weekend, and earlier today my piece was published in an edited form.&lt;br /&gt;&lt;br /&gt;I was given the opportunity to see the edits.  But I still had my original words so clearly in my head that I glossed over the edited version, checking only for glaring mistakes in grammar.  I should have taken more care — and this is entirely my fault — because portions of my original piece that were essential to a cogent argument were removed. &amp;nbsp;I don't think the editor had any ill intent, and it was my failed responsibility to ensure that I was happy with what got published.&lt;br /&gt;&lt;br /&gt;Presently, the piece is being torn into by commenters, and perhaps rightly so: without some of the material I originally included, it comes off as flimsy troll-bait. &amp;nbsp;I could post the edited-out paragraphs in a comment on the piece, but out of context they don't offer much.&lt;br /&gt;&lt;br /&gt;The experience has been a valuable lesson for me.  The next time someone wants to edit my writing, I need to take time and approach the edited version as a new reader would.  Had I done so, I wouldn't have allowed the piece to be published in its final form. &amp;nbsp;It's not really possible to retract something published on the web, nor is retraction in keeping with the informal ethics of blogging.  But like &lt;a href="http://www.avc.com/a_vc/2008/10/the-stupidest-q.html"&gt;Fred Wilson&lt;/a&gt; a few days ago, I just want to take it back.&lt;br /&gt;&lt;br /&gt;What I was hoping for was honest answers to an honest question: how much do we have to lose before we consider different strategies for Internet technologies?  Because I failed to take care with how my words were published, I'm not going to learn anything.  That's the real loss for me.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/6735289222613933299'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/6735289222613933299'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/10/lessons-in-being-edited.html' title='Lessons In Being Edited'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-3484710520648362031</id><published>2008-10-26T18:17:00.000-07:00</published><updated>2008-10-26T22:44:06.851-07:00</updated><title type='text'>I'm Writing A Book</title><content type='html'>At this year's &lt;a href="http://en.wikipedia.org/wiki/Foo_Camp"&gt;Foo Camp&lt;/a&gt; I had a chance to talk to O'Reilly editor &lt;a href="http://www.oreillynet.com/pub/au/29"&gt;Mike Loukides&lt;/a&gt; about my interests in emerging programming languages, particularly &lt;a href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Several weeks ago, I signed a contract to co-author a book on Scala for O'Reilly, tentatively titled &lt;em&gt;Programming Scala&lt;/em&gt; (perhaps a confusing title amidst the brief array of similarly-named Scala books, but one in keeping with O'Reilly's titling conventions).  My co-author is &lt;a href="http://www.deanwampler.com/"&gt;Dean Wampler&lt;/a&gt;, a specialist in "polyglot programming" — that is, integrating multiple languages in production systems.  We've not yet met in person, but so far Dean has been great to work with, as have Mike and the other O'Reilly staff that have helped us out.&lt;br /&gt;&lt;br /&gt;Presently, Dean is working on the second chapter of the book and I'm working on the third.  The first has been written by Dean and edited by me.  We intend to write our book in the open, as the &lt;a href="http://www.realworldhaskell.org/blog/"&gt;Real World Haskell&lt;/a&gt; authors did, so you'll soon be able to see our progress and contribute your suggestions, corrections, and critiques.&lt;br /&gt;&lt;br /&gt;It's difficult to express how thrilled I am to be working on this project.  Programming languages have become an obsession of mine, and I figured the opportunity to be working on a book about one would be a long ways off.  I know the hard parts of writing this book lay ahead, but so far, the process is a joy.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=3484710520648362031' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3484710520648362031'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3484710520648362031'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/10/im-writing-book.html' title='I&apos;m Writing A Book'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-939564345429031272</id><published>2008-10-22T14:51:00.000-07:00</published><updated>2008-10-22T17:52:02.316-07:00</updated><title type='text'>On The Flight to Old Text Editors</title><content type='html'>It's lately become vogue in the circle of programmers I follow to discontinue use of IDEs and modern text editors like TextMate in favor of Vim and Emacs. &amp;nbsp;The battlegrounds of the&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Editor_war"&gt;editor wars&lt;/a&gt;&amp;nbsp;are now&amp;nbsp;&lt;a href="http://weblog.jamisbuck.org/2008/10/10/coming-home-to-vim"&gt;blogs&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://search.twitter.com/search?q=&amp;amp;ors=emacs+vim+textmate"&gt;Twitter&lt;/a&gt;, and on those media I've watched a number of programmers I admire return to the editors they cut their teeth on. &amp;nbsp;As someone perpetually interested in how people approach the practice of programming, I've been considering this trend and its implications.&lt;br /&gt;&lt;br /&gt;The first thing I did to understand why programmers are returning to the editors of yore was to do the same myself. &amp;nbsp;I noticed more people flocking to Emacs than Vim, and I had less experience with Emacs, so I started there.&lt;br /&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;span style="font-size: 24px;"&gt;Emacs&lt;/span&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;The experience of choosing from the three major Emacs distributions (&lt;a href="http://aquamacs.org/"&gt;Aquamacs&lt;/a&gt;,&amp;nbsp;&lt;a href="http://homepage.mac.com/zenitani/emacs-e.html"&gt;Carbon Emacs&lt;/a&gt;, or the&amp;nbsp;&lt;a href="http://wfarr.org/posts/14-compiling-emacs-for-os-x"&gt;Emacs.app you can compile yourself&lt;/a&gt;) on the Mac is unpleasant enough. &amp;nbsp;Aquamacs is like installing a Linux distribution with every available package: everything you need is there, but it feels slow and unpredictable. &amp;nbsp;Carbon Emacs has "&lt;a href="http://en.wikipedia.org/wiki/Carbon_API"&gt;Carbon&lt;/a&gt;" in the name, making it all too clear that it's destined for deprecation. &amp;nbsp;My hand-compiled Emacs.app felt fast and clean, but lacked features like fullscreen editing.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;Configuration for all three is handled through a mess of Mac application preference windows, customization mode pseudo-GUIs, and Elisp configuration files. &amp;nbsp;I tried to accomplish as much as possible via the latter, which allowed me some flexibility in moving between the three distributions. &amp;nbsp;Still, having grasped the Emacs philosophy of &lt;em&gt;configuration über alles&lt;/em&gt;, I was willing to forgive the broken mapping between Emacs and my OS's conventions.&lt;br /&gt;&lt;br /&gt;Over the course of my experimentation I accrued a&amp;nbsp;&lt;a href="http://github.com/al3x/emacs/tree/master"&gt;fairly customized Emacs setup&lt;/a&gt;. &amp;nbsp;I read&amp;nbsp;&lt;a href="http://www.emacswiki.org/emacs/SteveYegge"&gt;Steve Yegge's posts&lt;/a&gt;&amp;nbsp;about the beauty of the editor and a fair bit of similar writing. &amp;nbsp;I made a serious attempt to use Emacs day-to-day, and my pinky smarted enough to prove it.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;The way I described my experience with Emacs to a colleague was that I came to appreciate the&amp;nbsp;&lt;span style="font-style: italic;"&gt;idea&lt;/span&gt;&amp;nbsp;of Emacs, but not the reality. &amp;nbsp;It would be great to have a completely customizable editor in which my modifications were first-class citizens if that editor was, well, better than Emacs. &amp;nbsp;Better OS integration. &amp;nbsp;A better configuration language (nothing against Lisps, but the gripes against Elisp are myriad and the inclusion of Common Lisp a copout). &amp;nbsp;Just better, through and through.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;That said, my beef with Emacs is ultimately more philosophical than practical. &amp;nbsp;I don't like that Emacs is everything plus the kitchen sink. &amp;nbsp;It bothers me that developers get so tied to their Emacs customizations that they build things like web browsers, mail readers, and Twitter clients into their editors. &amp;nbsp;This bothers me because I value craftsmanship in software, and most of these application-like Emacs modes are crude&amp;nbsp;solutions to the problems they attempt to solve. &amp;nbsp;They're deemed acceptable only because they have the feature of being Emacs-hosted and thus customized to the user's peculiarities. &amp;nbsp;They are not the Best Way To Solve The Problem Goddamit.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;That it takes an advanced Emacs developer like Yegge 11,600+ lines to express a feature-rich JavaScript mode also seems worth questioning. &amp;nbsp;Intuitively, it doesn't seem like it should take 11,600+ lines of code to do this job in an expressive, high-level language calling a set of rich APIs comprising an editor "platform". &amp;nbsp;That is to say, if one had a better platform for making a highly customized editor, it should take less code. &lt;br /&gt;&lt;br /&gt;But then, competition for such platforms isn't exactly stiff, which is precisely why programmers are going back to Emacs from IDEs and editors like TextMate. &amp;nbsp;I could be dead wrong on this point, and perhaps 11,600+ lines is a miracle of programming to get the functionality that Yegge's&amp;nbsp;&lt;a href="http://code.google.com/p/js2-mode/"&gt;js2-mode&lt;/a&gt;&amp;nbsp;offers, but with respect to his effort on the project, my suspicion is that many of those lines could/should be obviated by a better platform.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;br /&gt;&lt;span style="font-size: 24px;"&gt;Vim&lt;/span&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;I'm an accomplished Vim user, but I'd never bothered to establish a working Vim setup on my Mac since TextMate's release. &amp;nbsp;So I installed&amp;nbsp;&lt;a href="http://code.google.com/p/macvim/"&gt;MacVim&lt;/a&gt;&amp;nbsp;and added to it a number of customizations, including those mentioned by Jamis Buck in the post linked above that make Vim behave more like TextMate. &amp;nbsp;Having played around with it for a bit, the incentive to use Vim as one's primary editor nowadays is difficult for me to grasp. &amp;nbsp;Yes, it's familiar, but customizations in Vim feel unwieldy and bolted-on compared to those in Emacs or TextMate. &amp;nbsp;Vim gets the job done, but not beautifully. &amp;nbsp;There's more habit than Zen to it. &amp;nbsp;Enough said.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;br /&gt;&lt;span style="font-size: 24px;"&gt;Dissatisfaction&lt;/span&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;At the top of my list of computing heros you'll find&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Alan_Kay"&gt;Alan Kay&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Rob_Pike"&gt;Rob Pike&lt;/a&gt;. &amp;nbsp;Both men have consistently strived to surpass the conventions in computing we've come to accept, and in that process both have experimented with other ways of approaching programming.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;The&amp;nbsp;&lt;a href="http://wiki.squeak.org/squeak/4"&gt;Smalltalk development tools&lt;/a&gt;&amp;nbsp;offer a tight coupling of language to development environment that allows for a far more fluid development process than most IDEs can provide. &amp;nbsp;Kay frequently references the impressive applications that&amp;nbsp;&lt;span style="font-style: italic;"&gt;children&lt;/span&gt;&amp;nbsp;were able to build using this intuitive approach to programming. &amp;nbsp;It's testament to a rich development that isn't as tyrannous as an IDE.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;Pike offered the&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Acme_(text_editor)"&gt;Acme&lt;/a&gt;&amp;nbsp;editor in the&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs"&gt;Plan9&lt;/a&gt;&amp;nbsp;operating system, which follows Emacs in acknowledging that programmers will do most everything in their editor of choice, but structures both the implementation and interaction model of that editor far more rigidly. &amp;nbsp;Acme has a strong sense of design. &amp;nbsp;It offers conventions, rather than throwing up its hands, smiling, and saying "customize it until you like it". &amp;nbsp;Question its choice of mouse-heavy interaction, but it's incontrovertibly&amp;nbsp;an attempt to move text editing and programming into the future (of the early 1990s, admittedly, but oh how far we haven't come since).&lt;/div&gt;&lt;br /&gt;Glimpses of editors like these, coupled with my experiences using TextMate, make me dissatisfied with my choices when it comes to editing text. &amp;nbsp;It worries me that others are seemingly not dissatisfied with the old editors, and what's more, are content to use antiquated software that's been strung along for decades without any serious reengineering effort or thought towards user experience. &amp;nbsp;Were the situation simply old programmers using old software out of habit, I'd understand, but it's not.&lt;br /&gt;&lt;br /&gt;That a new generation of programmers flocking to these old tools is concerning, if for no reason more selfish than the desire for peers in my dissatisfaction. &amp;nbsp;Without a consensus that we can do better, there's no incentive, no motivation, no market for improvements. &amp;nbsp;If as modest a step towards a better editor as TextMate is abandoned, what hope is there for a true leap forward?</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/939564345429031272'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/939564345429031272'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/10/on-flight-to-old-text-editors.html' title='On The Flight to Old Text Editors'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-6915937895346026818</id><published>2008-10-05T15:31:00.000-07:00</published><updated>2008-10-05T16:06:24.616-07:00</updated><title type='text'>Treating Developers Right</title><content type='html'>I've had the idea for a quotation-capturing application for the Mac for some time. &amp;nbsp;It's been towards the top of my list of&amp;nbsp;&lt;a href="http://www.al3x.net/2008/02/on-side-projects.html"&gt;side-projects&lt;/a&gt;&amp;nbsp;for ages, held in place by Cocoa's steep learning curve (easy to get started, takes years of experience to do an app right).&lt;br /&gt;&lt;br /&gt;It recently occurred to me that this application would work even better on the iPhone, and that the smaller "surface area" of the iPhone SDK might make the project more approachable. &amp;nbsp;I applied to be an iPhone developer and began consuming Apple's materials for developers as I waited for approval.&lt;br /&gt;&lt;br /&gt;That was two weeks ago. &amp;nbsp;In the intervening time, Apple has &lt;a href="http://www.tuaw.com/2008/10/01/iphone-nda-dropped/"&gt;disbanded the NDA&lt;/a&gt; on the iPhone developer program, which indicates that they're responding to pressure from Android starting to materialize as a viable and open mobile development platform. &amp;nbsp;It's disheartening that it takes a market threat in order for Apple to do the right thing by their developers.&lt;br /&gt;&lt;br /&gt;My full-time job is looking after Twitter's developer community. &amp;nbsp;Twitter's and Apple's respective developer technologies are very different beasts, but it's hard to imagine treating our developers the way Apple treats theirs and still having a community to speak of.&lt;br /&gt;&lt;br /&gt;Let's be clear about Apple's iPhone developer program: you're paying them. &amp;nbsp;That means they should work for you. &amp;nbsp;If they don't, you should fire them. &amp;nbsp;If Apple can't afford to support their developer community at $99 per year per developer, they should charge more. &amp;nbsp;But in the two weeks that I've been &lt;span class="Apple-style-span" style="font-style: italic;"&gt;waiting for Apple to give me permission to pay them&lt;/span&gt;, I've come to realize that my free time is better spent on side-projects that I have more control over.&lt;br /&gt;&lt;br /&gt;At Twitter, our developers don't pay us a dime, and we don't currently have a formalized quality of service policy that obliges us to any particular behavior. &amp;nbsp;Still, leaving developers hanging without support for two weeks is unthinkable to me.&lt;br /&gt;&lt;br /&gt;Treating developers right isn't difficult: be open, be honest, and respect their time. &amp;nbsp;When we've failed to keep to those rules, developers are rightly pissed. &amp;nbsp;When we keep to them, our developers are happy. &amp;nbsp;For the sake of my friends in the Mac development community, I hope Apple figures these simple rules out.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/6915937895346026818'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/6915937895346026818'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/10/treating-developers-right.html' title='Treating Developers Right'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-4174803695732648852</id><published>2008-09-30T17:58:00.000-07:00</published><updated>2008-09-30T18:00:12.153-07:00</updated><title type='text'>Freedom</title><content type='html'>&lt;blockquote&gt;"The really important kind of freedom involves attention, and awareness, and discipline, and effort, and being able truly to care about other people and to sacrifice for them, over and over, in myriad petty little unsexy ways, every day. That is real freedom."&lt;/blockquote&gt;- &lt;a href="http://www.guardian.co.uk/books/2008/sep/20/fiction/print"&gt;David Foster Wallace&lt;/a&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4174803695732648852'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4174803695732648852'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/09/freedom.html' title='Freedom'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-1094869843478636098</id><published>2008-09-08T13:04:00.000-07:00</published><updated>2008-09-17T10:09:52.584-07:00</updated><title type='text'>al3x's Rules for Computing Happiness</title><content type='html'>A list.&lt;br /&gt;&lt;ol&gt;&lt;h4&gt;Software&lt;/h4&gt;&lt;li&gt;Use as little software as possible.&lt;/li&gt;&lt;li&gt;Use software that does one thing well.&lt;/li&gt;&lt;li&gt;Do not use software that does many things poorly.&lt;/li&gt;&lt;li&gt;Do not use software that must sync over the internet to function.&lt;/li&gt;&lt;li&gt;Do not use web applications that should be desktop applications.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Do not use desktop applications that should be web applications.&lt;/li&gt;&lt;li&gt;Do not use software that isn't made specifically for your operating system. (You'll know it when you see it because it won't look right or work correctly.)&lt;/li&gt;&lt;li&gt;Do not run beta software unless you &lt;a href="http://stevenf.com/archive/reporting-bugs-in-mac-os-x-apps.php"&gt;know how to submit a bug report&lt;/a&gt; and are eager to do so.&lt;/li&gt;&lt;li&gt;Use a plain text editor that you know well. &amp;nbsp;Not a word processor, a plain text editor.&lt;/li&gt;&lt;li&gt;Do not use your text editor for tasks other than editing text.&lt;/li&gt;&lt;li&gt;Use a &lt;a href="http://agilewebsolutions.com/products/1Password"&gt;password manager&lt;/a&gt;. You shouldn't know any of your passwords save the one to your primary email account and the one to your password manager.&lt;/li&gt;&lt;li&gt;Do not use software that's unmaintained.&lt;/li&gt;&lt;li&gt;Pay for software that's worth paying for, but only after evaluating it for no less than two weeks.&lt;/li&gt;&lt;li&gt;Thoroughly delete all traces of software that you no longer use.&lt;/li&gt;&lt;h4&gt;Hardware&lt;/h4&gt;&lt;li&gt;Do not buy a desktop computer unless your daily computing needs include video/audio editing, 3D rendering, or some other hugely processor-intensive computing task. &amp;nbsp;Buy a portable computer instead.&lt;/li&gt;&lt;li&gt;Do not use your phone/smartphone/PDA/UMPC for tasks that would be more comfortably and effectively accomplished on a full-fledged&amp;nbsp;computer. &lt;/li&gt;&lt;li&gt;Use a Mac for personal computing.&lt;/li&gt;&lt;li&gt;Use Linux or BSD on commodity hardware for server computing.&lt;/li&gt;&lt;li&gt;Do not use anything other than a Mac at home and Linux/BSD on the server.&lt;/li&gt;&lt;li&gt;The only peripheral you absolutely need is a hard disk or network drive to put backups on.&lt;/li&gt;&lt;li&gt;Buy as large an external display as you can afford if you'll be working on the computer for more than three hours at a time.&lt;/li&gt;&lt;li&gt;Use hosted services in lieu of hosting on your own hardware (or virtual hardware) for all but the most custom applications.&lt;/li&gt;&lt;h4&gt;File Formats&lt;/h4&gt;&lt;li&gt;Keep as much as possible in plain text. &amp;nbsp;Not Word or Pages documents, plain text.&lt;/li&gt;&lt;li&gt;For tasks that plain text doesn't fit, store documents in an open standard file format if possible.&lt;/li&gt;&lt;li&gt;Do not buy digital media crippled by rights restriction technologies unless your intention is to rent the content for a limited period of time.&lt;/li&gt;&lt;/ol&gt;These are my rules and they make me happy. &amp;nbsp;I hope they make you happy too. &amp;nbsp;If you have computing rules of your own that make you happy, I encourage you to publish them.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/1094869843478636098'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/1094869843478636098'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/09/al3xs-rules-for-computing-happiness.html' title='al3x&apos;s Rules for Computing Happiness'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-3098149758591532125</id><published>2008-09-06T12:35:00.001-07:00</published><updated>2008-09-06T12:35:53.294-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mac'/><category scheme='http://www.blogger.com/atom/ns#' term='events'/><title type='text'>Liveblogging C4[2]: Objective-J</title><content type='html'>&lt;a href="http://cappuccino.org/"&gt;Objective-J&lt;/a&gt; is a new language on top of JavaScript, recently open sourced, that aims to circumvent the slow-moving standards bodies and provide an easier, better way to develop rich applications for the web.&lt;br /&gt;&lt;br /&gt;The speaker runs through some features.  Objective-J is lightweight and interoperable with JavaScript.  It has a runtime object model and supports message sending like Objective-C (and Smalltalk before it).  They support categories, import statements, and will soon support optional static typing.&lt;br /&gt;&lt;br /&gt;Cappuccino is a re-implementation of Cocoa for Objective-J.  They've provided most of AppKit, many widgets, the event system, and more.  The "NS" prefix common to Cocoa libraries, inherited from the NeXTSTEP days, is replaced by a "CP" prefix.  &lt;br /&gt;&lt;br /&gt;The speaker cautions that using Cap is very much an investment in "Cocoa-land", and that the framework is new, incomplete, and complex.  "We're not very good API designers," he says by way of explanation for borrowing so much from Apple.  "We're starting with the desktop.  [...]  It's a mistake to discount all the lessons of the GUI world."&lt;br /&gt;&lt;br /&gt;Next, a demo of porting a simple random number generator from a Cocoa application to a Cappuccino application.  The speaker makes a series of small changes to translate several methods from Objective-C to JavaScript.  Adding buttons to the application is a manual process, one that normally would be handled by Interface Builder.  For the trainspotters, the speaker is editing in SubEthaEdit.  A category is added to CPNumber to provide a cssString method.  Once added, the demo works.  Much clapping.  Six minutes from Cocoa app to Cappuccino app.&lt;br /&gt;&lt;br /&gt;Another demo: a Twitter client (woo).  It's not a lot of code, and we get a quick tour of it.  Sadly, the demo doesn't work.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=3098149758591532125' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3098149758591532125'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3098149758591532125'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/09/liveblogging-c42-objective-j.html' title='Liveblogging C4[2]: Objective-J'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-3628840747236534402</id><published>2008-09-06T10:38:00.001-07:00</published><updated>2008-09-06T10:38:42.969-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mac'/><category scheme='http://www.blogger.com/atom/ns#' term='events'/><title type='text'>Liveblogging C4[2]: Rich Siegel on "Red Meat and Gin"</title><content type='html'>This is the second talk of the second day of the C4[2] conference.  I didn't blog the first talk because it was &lt;a href="http://www.slideshare.net/al3x/why-scala-presentation/"&gt;my own&lt;/a&gt;.  The speaker is the founder of Bare Bones Software, and his topic is explaining the longevity of his company in an industry of short-lived businesses and products.&lt;br /&gt;&lt;br /&gt;Siegel opens by exploring their lineup of products.  Some products (BBEdit, Yojimbo) are keeping on.  Others (Mailsmith, Super Get Info) have more or less been discontinued.  The challenge is picking non-obvious problems to solve.&lt;br /&gt;&lt;br /&gt;Bare Bones aims for a "built to last" engineering approach.  They don't suffer compiler warnings and they mandate code freezes.  They encourage the creation of processes to make life easier, and only ship when a product is ready.  Siegel asserts like dependability translates into reputation, which translates into a stable business.&lt;br /&gt;&lt;br /&gt;The next topic is support.  Siegel encourages "writing software that needs as little support as possible", and to design for "supportability".  Providing good documentation and resources is essential, as is measuring the "support noise" generated by particular bugs and working to reduce that noise.  Support is part of the cost of doing business, and can be viewed as a kind of marketing.&lt;br /&gt;&lt;br /&gt;Siegel cautions against being driven by the "echo chamber", particularly when it comes to business issues like software pricing.  "Charge what your product is worth," he says.  "I want people to walk away with the message that my product is dependable."&lt;br /&gt;&lt;br /&gt;On the subject of dealing with Apple as an independent developer, Siegel points out that there are effectively two Apples, and the "stock-ticker Apple" cares more about selling iPod socks.  Set your own deadlines and don't get caught up in the hype of developer conferences, MacWorld, etc.&lt;br /&gt;&lt;br /&gt;Siegel ends with some simple values: think about the long term in the ways that matter;  don't get locked in or pushed around; never be afraid of adjust or rethink your plans.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=3628840747236534402' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3628840747236534402'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3628840747236534402'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/09/liveblogging-c42-rich-siegel-on-meat.html' title='Liveblogging C4[2]: Rich Siegel on &amp;quot;Red Meat and Gin&amp;quot;'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-4912013965171974406</id><published>2008-08-08T00:16:00.001-07:00</published><updated>2008-08-08T00:17:22.325-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='culture'/><category scheme='http://www.blogger.com/atom/ns#' term='technology'/><category scheme='http://www.blogger.com/atom/ns#' term='programming'/><category scheme='http://www.blogger.com/atom/ns#' term='mac'/><title type='text'>Computing Simplicity, Minimalism, and Trust</title><content type='html'>A while back I wrote about &lt;a href="http://www.al3x.net/2007/11/minimalism-in-code.html"&gt;minimalism in code&lt;/a&gt;.  Lately, I've been thinking about that topic again, but not just as it applies to programming.  As I mentioned in &lt;a href="http://www.al3x.net/2008/08/ikvetch.html"&gt;my most recent post&lt;/a&gt;, my relationship with technology is becoming more turbulent with every year I work in the field, and I attribute a good deal of that to frustration with needless, harmful complexity.&lt;br /&gt;&lt;h4&gt;Simplicity in Hardware and in Software&lt;/h4&gt;Trust comes, in part, from simplicity.  When something is simple, it's possible to understand it in fullness.  When you understand a thing, you can trust it.  Simplicity and modern computing are at conceptual odds, however. &lt;br /&gt;&lt;br /&gt;The hardware that composes the average desktop computer is enormously complex, and in itself contains elaborate software systems.  Most hardware vendors don't even aim for simplicity at a surface level.  Apple hardware may have a minimalist patina, but it's no less complex under the hood than, say, &lt;a href="http://davidreport.com/blog/wp-content/uploads/2007/08/apple_imac.jpg"&gt;ugly, complicated-looking Dell hardware&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;A step above hardware, operating system software is no less complex.  &lt;a href="http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs"&gt;Plan 9&lt;/a&gt; was arguably the only desktop operating system to ever properly embody minimalist design principles, taking the UNIX philosophy of simple, reusable components even further and rallying around the filesystem metaphor to accomplish many goals.  Windows Vista is the accumulation of millions of lines of code and two decades of legacy software support.  Linux, as both a kernel and a distributed operating system, is a chaotic amalgam; just &lt;a href="http://futurist.se/gldt/gldt76.png"&gt;look&lt;/a&gt; at the &lt;a href="http://futurist.se/gldt/"&gt;GNU/Linux Distro Timeline&lt;/a&gt; or &lt;a href="http://en.wikipedia.org/wiki/History_of_the_Linux_kernel"&gt;read about&lt;/a&gt; the history of the kernel. Mac OS X is an intricate fusion of UNIX-world and proprietary technologies; the leading text on the system's internals is &lt;a href="http://www.amazon.com/gp/product/0321278542/"&gt;1680&lt;/a&gt; pages.&lt;br /&gt;&lt;br /&gt;Atop the operating system is the software we use day-to-day.  Arguing that user-facing software is complex practically requires no evidence; the travails of personal computing have long since graduated from truism to sad joke.  The current trend of web applications is trading one set of complexities (developing, distributing, and updating desktop software) for another (scaling, multi-browser support, synchronization, data portability, offline access).  Even the decision about whether or not to use a desktop or web application for a given goal adds complexity to the average user's computing day.&lt;br /&gt;&lt;br /&gt;From applications down to microchips, it should be uncontroversial to say that personal computers are monuments to complexity.&lt;br /&gt;&lt;h4&gt;Hope, Mobilized&lt;/h4&gt;Mobile phones are our best hope for a renewed focus on simplicity in technology.  More so than general purpose computers, mobile devices are good candidates for the application of minimalist design principles because their set of user goals is finite, or at least more easily quantified.&lt;br /&gt;&lt;br /&gt;At the high end of the mobile market, engineering simplicity is being tossed out for the shortest path to more feature-rich devices.  Thus the rise of phones that are tiny computers, powered by full-fledged operating systems from the list above: Windows Mobile, various flavors of Linux, Mac OS X in your pocket.  The manufacturers of these devices seek to leverage existing development platforms and developer communities as well as existing code bases.  While such reuse is pragmatic from a business perspective, these mobile devices inherit all the troubles of their desktop counterparts.&lt;br /&gt;&lt;br /&gt;The majority of the world, however, doesn't use the "smartphones" that are increasingly dominating the US market.  Most of the world uses cheap, durable Nokia phones with a very limited set of functionality.  Though I strongly believe that those outside of the first world should be afforded the same technical opportunities, in some parochial sense I look forward to the impact of a generation of global consumers whose concept of computing has nothing to do with a convoluted desktop metaphor.&lt;br /&gt;&lt;h4&gt;Simplify, Simplify&lt;/h4&gt;I'm increasingly looking for ways to simplify my relationship with technology.  My frustrations with the iPhone led me to question whether Apple products were still my best bet for a rewardingly minimal experience, and what alternatives are available.  As I've said before, I want tools I can trust, and I implicitly trust simple tools more.&lt;br /&gt;&lt;br /&gt;On the software side, I'm intrigued by the purported simplicity of tiling window managers like &lt;a href="http://www.suckless.org/wmii/"&gt;wmii&lt;/a&gt;, and a general &lt;a href="http://en.wikipedia.org/wiki/Computing_minimalism"&gt;computing minimalist&lt;/a&gt; approach that encourages the use of small, simple programs that cooperate through dead-simple standards like files of ASCII text.  I'm ultimately unconvinced, however, that using such tools on a complex, notoriously fiddly operating system like Linux would be a marked improvement.  Again, one set of complexities (OS X's too-rich graphical environment) is traded for another (the seemingly endless configuration necessary to run Linux as a desktop operating system).&lt;br /&gt;&lt;br /&gt;On the hardware side, I have yet to see hardware that is either less complex in its engineering or industrial design than Apple's.  The &lt;a href="http://en.wikipedia.org/wiki/ThinkPad"&gt;ThinkPad&lt;/a&gt; is arguably the only other personal computing product still in production with a rich history of product design, and the design choices in the current ThinkPad product line hardly suggest simplicity: exaggerated bezels, input devices with multiple and potentially conflicting human interfaces, an excess of iconography, unnecessary single-purpose displays of device activity.  Other PC manufacturers occasionally produce hardware that doesn't visually offend, but that's about as much as can be said when it comes to the world of metal and plastic.&lt;br /&gt;&lt;br /&gt;Lastly, I looked for simple mobile phones.  The &lt;a href="http://en.wikipedia.org/wiki/Motorola_FONE_F3"&gt;Motophone&lt;/a&gt; was an intriguing experiment in radical simplicity, but a failed one from both an end-user and a sales perspective.  My mobile carrier, AT&amp;amp;T, currently offers a single phone for which simplicity is an advertised feature: the &lt;a href="http://www.pantechusa.com/web/guest/breeze"&gt;Pantech Breeze&lt;/a&gt;.  Having owned a number of mobiles over the years, it's difficult for me to see in what way the Breeze is more or less simple than most any other low/mid-range phone.  Its interface looks remarkably that of the &lt;a href="http://en.wikipedia.org/wiki/Sony_Ericsson_T610"&gt;Sony Ericsson T616&lt;/a&gt;, the best phone I've ever owned (but not a particularly simple one).  For all the iPhone's complexity and resulting instability, it has the most simple, usable user experience of any phone on the US market.  It's worth noting that it's actually not possible to walk into an AT&amp;amp;T Wireless store and purchase the same stripped-down Nokia that most of the world uses.&lt;br /&gt;&lt;br /&gt;Having surveyed the landscape, I'm reasonably convinced that I'm better off staying with Apple products if I value simplicity and some degree of minimalism.  I remain unsatisfied with particular design choices that Apple makes, but at the end of the day I respect their commitment to a unified hardware and software platform that eschews the complexity of supporting a universe of hardware and software that other operating systems contend with.  What Apple does is not strictly minimalist, but it's closer than anyone else gets.&lt;br /&gt;&lt;h4&gt;Concluding, Simply&lt;/h4&gt;An intellectual focus on simplicity, minimalism, and constraints is something I've found valuable.  These concepts provide a useful lens through which to make engineering and design decisions, and perhaps consumer decisions as well.  Consider the trust to be gained from judicious application of minimalist principles, and the joy that can be derived from that trust.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=4912013965171974406' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4912013965171974406'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4912013965171974406'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/08/computing-simplicity-minimalism-and.html' title='Computing Simplicity, Minimalism, and Trust'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-2730220379960242083</id><published>2008-08-04T18:56:00.001-07:00</published><updated>2008-08-04T18:56:33.910-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mac'/><title type='text'>iKvetch</title><content type='html'>My friends and coworkers have endured my unending complaints about the iPhone ever since the App Store-enabled 2.0 firmware landed.  Now, you can too.  Hooray for blogs.&lt;br /&gt;&lt;h4&gt;Background&lt;/h4&gt;The 1.0 iPhone was the best phone I've ever owned.  It was simple but powerful and utterly reliable.  It worked so well that it was difficult to have much of a conversation about it when it was still a conversation piece.  "Yup, love it, works great, buy one."&lt;br /&gt;&lt;br /&gt;The 2.0 iPhone, conversely, is not the best phone I've ever owned.  It's maybe third- or fourth-best; doesn't really matter.  What matters is that I don't trust the thing anymore.  Once you lose trust, all the beauty falls away.  (That's a life lesson, kids; it applies to more than phones.)&lt;br /&gt;&lt;br /&gt;Before the iPhone launched, I &lt;a href="http://www.al3x.net/2007/01/what-closed-iphone-means_11.html"&gt;thought I wanted native third-party applications&lt;/a&gt;.  I thought that web applications weren't enough.  Now that I have native third-party applications on the iPhone, I regret ever wanting them.  For some web applications like &lt;a href="http://www.instapaper.com/"&gt;Instapaper&lt;/a&gt; that have put out iPhone apps, I've actually gone back to the web versions because I like things that, y'know, work.&lt;br /&gt;&lt;h4&gt;The Suck&lt;/h4&gt;I'm gonna put 'em on the table.  &lt;strong&gt;There hasn't been an app released yet that improves my iPhone experience.&lt;/strong&gt;  Sure, there are a bunch that &lt;em&gt;would&lt;/em&gt; improve my iPhone experience if they &lt;em&gt;worked reliably&lt;/em&gt;, but they don't.  With one baffling exception.&lt;br /&gt;&lt;br /&gt;Games.  &lt;em&gt;Enigmo&lt;/em&gt; looks beautiful and works flawlessly on the iPhone.  It's doing all sorts of 3D and physics simulations and environmental audio and I think maybe my taxes in the background.  So what the shit is going on with applications that display a few rows of text and — LET'S NOT GET CRAZY HERE — an image or two? &lt;br /&gt;&lt;br /&gt;The answer, as I understand it, is that the text view class that Apple provides to developers is feature-crippled.  This necessitates hacks and abuses of WebKit views, which in turn results in the molasses-slow user experience that most iPhone applications inflict.  Couple that with whatever bugs and leaks abound in firmware 2.0 and my iPhone feels like I'm operating it through a tub of vaseline most of the time.  The only thing it does quickly anymore is crash.&lt;br /&gt;&lt;br /&gt;A couple of longtime Apple developers have more informed commentary on this topic than I do.  &lt;a href="http://www.mikeash.com/?page=pyblog/welcome-to-iphone-your-crappy-mac-of-tomorrow-today.html"&gt;Mike Ash&lt;/a&gt; has some user-side horror stories, and thinks Apple is setting a gloomy standard with its treatment of iPhone developers and the roadmap one can extrapolate from there.  &lt;a href="http://mjtsai.com/blog/2008/08/03/welcome-to-iphone/"&gt;Michael Tsai&lt;/a&gt; gets the importance of trust, and enumerates Apple's, uh, &lt;em&gt;miscommunications&lt;/em&gt; about the iPhone as a platform.&lt;br /&gt;&lt;h4&gt;Competition&lt;/h4&gt;I feel the same dismay about the iPhone as I did about my Mac &lt;a href="http://www.al3x.net/2007/10/if-i-didn-use-mac.html"&gt;last October&lt;/a&gt;.  At that time, the main thing that kept me from moving away from Apple was hardware alternatives (there still aren't any I'm aware of).  In the mobile space, there aren't good alternatives to the iPhone hardware- &lt;em&gt;or&lt;/em&gt; software-wise. &lt;br /&gt;&lt;br /&gt;I've &lt;a href="http://www.juixe.com/techknow/index.php/2008/06/13/google-io-android/"&gt;boned up Android&lt;/a&gt;.  It's a nice platform.  The primary selling point to developers is through-and-through openness.  You can swap out &lt;em&gt;anything&lt;/em&gt; on that bad boy.  There's no centralized App Store, but I'm willing to bet that the App Store will be a market efficiency bottleneck, long-term.  Point is, Android is neat (in a vacuum, under glass).  &lt;a href="http://www.pocket-lint.co.uk/news/news.phtml/16610/17634/htc-confirms-android-handsets-schedule.phtml"&gt;Might even ship this year&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Unfortunately, &lt;a href="http://www.washingtonpost.com/wp-dyn/content/article/2008/07/14/AR2008071401406.html"&gt;Android doesn't seem to be going so well&lt;/a&gt;.  Third-party developers are pissed that Google is cherry-picking who gets platform updates, which makes the openness story more of a fairy tale.  Rumor around the Bay Area tech community is that key Android team members have split over Google's mishandling of the project. &lt;br /&gt;&lt;br /&gt;Best I can tell, Android is the stand-out contender for the iPhone's future-of-mobile title.  Is there an emoticon that expresses nervous tugging at one's collar?&lt;br /&gt;&lt;h4&gt;Conclusion&lt;/h4&gt;Like Ash says, "I'm going to keep using this thing. Despite all the flaws, it's still a useful device to have[.]"  There isn't an alternative, and I don't particularly want to go back to a phone that would provide less functionality and require me to carry other devices (music player, navigation system).&lt;br /&gt;&lt;br /&gt;The more I work with technology, the more love/hate my relationship with technology becomes.  I'm to the point that I don't want to look at a computer come the weekend.  If my mobile works the way it should, I shouldn't need to.  I should be able to trust the device I carry with me all the time.  But I don't trust iPhone 2.0.  It takes me farther away from how I want technology to fit into my life. &lt;br /&gt;&lt;br /&gt;And that's why I complain about it so goddamn much.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=2730220379960242083' title='5 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2730220379960242083'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2730220379960242083'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/08/ikvetch.html' title='iKvetch'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-2871408959270464331</id><published>2008-07-31T18:15:00.001-07:00</published><updated>2008-08-01T02:02:10.048-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='culture'/><title type='text'>On Hipsters</title><content type='html'>I've been in the challenging position of having to describe what a hipster is more than once.  Describing punk, goth, rave: piece of cake compared to hipster subculture.  I've almost come to relish the conversational opportunity just to hone my verbal illustration skills.  If you can describe a hipster, you can describe most any complex sociocultural phenomenon. &lt;br /&gt;&lt;br /&gt;I loathe Adbusters, but I have to hand it to them for &lt;a href="http://www.adbusters.org/magazine/79/hipster.html"&gt;"Hipster: The Dead End of Western Civilization"&lt;/a&gt;.  Sure, it's up to their usual standards of doomy hysterics, but if you ignore the bit at the end it's the best damn portrait of hipster culture I've yet seen.&lt;br /&gt;&lt;br /&gt;What distinguishes hipsters for me is that they believe in nothing, but unconsciously so.  It's not nihilism, because nihilism is well-considered position.  Hipsters are, to my mind, the first utterly apolitical, a-philosolphical subculture of the postwar era.&lt;br /&gt;&lt;br /&gt;Even the slacker generation believed in, well, slacking: they valued an opposition to the competitive mindset of the preceding generation.  That may be a shallow thing to value, but it provides the groundwork for some sort of political/cultural stance.  Hipsters have no such political or philosophical foundation.  I'd go on to argue that they lack even the cultural foundation to contribute meaningfully to the arts.&lt;br /&gt;&lt;br /&gt;As a child, I observed the trends each year when I went to buy clothes for school: the '60s were back, then the '70s, then the '80s.  I wondered what would happen when the oroborus of retro-cultural appropriation finally consumed its tail.   What's left when every identifiable era has been mined to provide sigils and significance to a time without substance?  Hipsters, I think are the answer.&lt;br /&gt;&lt;br /&gt;Hipster music, art, and fashion is tapped from gnarled, post-postmodern roots.  When hip-hop artists first appropriated the sampling techniques of the avant-garde Futurist movement for popular music, the result was deeply meaningful; in their borrowing, a message, a heritage, a narrative.  When punk designers like Vivienne Westwood destroyed high street English fashions with rips and safety pins, a wearable criticism of class emerged.  Layer remixes upon samples upon riffs upon outright theft, though, and nothing of substance remains.  Hipster art is strictly for entertainment, valuing not even the purely aesthetic.&lt;br /&gt;&lt;br /&gt;The question, though: does any of the above matter?  Adbusters seems to think that because a portion of youth culture subscribes to this meaningless lifestyle that Western civilization as we know it is doomed.  Their mistake is to assume that those who choose hipsterdom had the potential to be meaningful cultural contributors in the first place.  If you'll allow the analogy, hipsters are the thieves that would never be customers.  If they valued anything in the first place, they wouldn't have made the unconscious choice to value nothing.&lt;br /&gt;&lt;br /&gt;Adbusters noted the signature peculiarity of hipster culture: hipsters refuse to identify as hipsters.  They failed, however, to explain this phenomenon.  The explanation is that  hipsters &lt;em&gt;are the mainstream&lt;/em&gt;, and the mainstream is incapable of identifying itself as such.&lt;br /&gt;&lt;br /&gt;Nobody places the sort of political demands on mainstream culture that are placed on subcultures.  The majority is too big, too lumbering, and too anonymous to politicize.  Extract hipsters from the species of &lt;em&gt;subculture&lt;/em&gt;  and move them one higher in the cultural taxonomy.  Their political burden is lifted. &lt;br /&gt;&lt;br /&gt;Western civilization isn't doomed because it's never depended on the majority culture for forward progress.  Progress emerges on the fringes and gradually impacts the majority.  Hipsters will continue to be the young reflections of the dull majority culture and it &lt;em&gt;doesn't matter&lt;/em&gt;.  Put your hope into that which hasn't yet emerged.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=2871408959270464331' title='10 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2871408959270464331'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2871408959270464331'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/07/on-hipsters.html' title='On Hipsters'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>10</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-7011837439020824027</id><published>2008-07-16T10:15:00.001-07:00</published><updated>2008-07-16T10:15:21.524-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='metablogging'/><category scheme='http://www.blogger.com/atom/ns#' term='twitter'/><category scheme='http://www.blogger.com/atom/ns#' term='scala'/><title type='text'>Elsewhereblogging, Mid-July 2008 Edition</title><content type='html'>At &lt;a href="http://twitter.com"&gt;Twitter&lt;/a&gt;, we just acquired &lt;a href="http://www.crunchbase.com/company/summize"&gt;Summize&lt;/a&gt;, a search startup that built a superb way to find tweets about whatever interests you.  We &lt;a href="http://blog.twitter.com/2008/07/finding-perfect-match.html"&gt;announced the acquisition&lt;/a&gt; on our main blog, and I &lt;a href="http://dev.twitter.com/2008/07/summize-and-future-of-twitter-api.html"&gt;wrote up&lt;/a&gt; the impact it'll have on the Twitter developer community for the Twitter Technology Blog.  I'm excited.&lt;br /&gt;&lt;br /&gt;Then there's &lt;a href="http://www.gracelessfailures.com/"&gt;Graceless Failures&lt;/a&gt;, described as "a group blog of tips, tricks, missteps, and minor revelations on the path to &lt;a href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt; wisdom."  It's a way for those of us experimenting with Scala at Twitter to share our discoveries with each other and help out the community in the process.  You can find out more in the &lt;a href="http://www.gracelessfailures.com/2008/06/test-post.html"&gt;introductory post&lt;/a&gt;.  I'm hoping to get some non-Twitterers interested in contributing.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=7011837439020824027' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/7011837439020824027'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/7011837439020824027'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/07/elsewhereblogging-mid-july-2008-edition.html' title='Elsewhereblogging, Mid-July 2008 Edition'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-5348563079996399591</id><published>2008-07-06T12:28:00.001-07:00</published><updated>2008-07-06T12:46:56.387-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='personal'/><category scheme='http://www.blogger.com/atom/ns#' term='technology'/><title type='text'>All The al3x That's Fit to Print</title><content type='html'>I'm in the &lt;a href="http://www.nytimes.com/2008/07/06/technology/06outage.html"&gt;New York Times&lt;/a&gt; today.  It feels weird.&lt;br /&gt;&lt;br /&gt;I talked to the reporter over the phone three weeks ago.  A week later, they decided to get the story ready for press and sent out a photographer.  I happened to be at my father's home in Northern Virginia on a trip back to the DC area.  Hence the wallpaper.&lt;br /&gt;&lt;br /&gt;I'm happy with my place in the story, but part of me wishes it was a project I was more passionate about.  I made &lt;a href="http://downforeveryoneorjustme.com/"&gt;downforeveryoneorjustme.com&lt;/a&gt; for a friend on a whim, utterly unconnected to my work at Twitter.  I've spent maybe six hours on the site, total, ever.  Most of that was setting up the domain and hosting and doing the original Ruby implementation.  I then spent a couple hours moving it over to Python for &lt;a href="http://appengine.google.com/"&gt;Google App Engine&lt;/a&gt; with the idea that I wouldn't have to think about uptime.  As the story mentions, that didn't exactly work out, but it's been better than futzing with a VPS or three.&lt;br /&gt;&lt;br /&gt;It's good that a conversation about the cultural and business implications of downtime is starting, or perhaps continuing and deepening.  It's certainly something I've been forcibly immersed over the last year and a half of helping to keep Twitter afloat.  But it's also a conversation I'm weary of. &lt;br /&gt;&lt;br /&gt;Of late, I've tried as much as possible to focus my time at Twitter on building a new system that works at scale and does so predictably and measurably.  That's not easy when the current system is still on fire.  So much of the last year of my professional life has been spent reaching for buckets of water that it's hard to stop myself from trying to stomp out every new blaze.  If I don't, though, the new components that we hope will make the system work get pushed out further and further.&lt;br /&gt;&lt;br /&gt;Figuring out how to work on version 2.0 while part of the team is maintaining the 1.x series is a classic software development management problem, and one that's only become more complicated in the web application development space.  The web offers incredible freedom to see if an idea will succeed in the marketplace.  The trade-off is that once you have a successful idea, you only have so long to make it as dependable as death and taxes. &lt;br /&gt;&lt;br /&gt;At Twitter, we're well aware that we have essentially the most patient and forgiving set of users we could ever hope for.  I don't intend to test their patience a moment longer than we have to.  In the meantime, seeing our site occasionally float to the top of the request patterns for &lt;a href="http://downforeveryoneorjustme.com/"&gt;downforeveryoneorjustme.com&lt;/a&gt; is a stark reminder of all the work we have left to do.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=5348563079996399591' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/5348563079996399591'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/5348563079996399591'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/07/all-al3x-that-fit-to-print.html' title='All The al3x That&amp;#39;s Fit to Print'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-8213004671366008175</id><published>2008-05-10T10:19:00.001-07:00</published><updated>2008-05-10T22:14:01.944-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='programming'/><category scheme='http://www.blogger.com/atom/ns#' term='events'/><category scheme='http://www.blogger.com/atom/ns#' term='scala'/><title type='text'>Scala lift-off: Martin Odersky Keynote</title><content type='html'>I'm at the &lt;a href="http://scalaliftoff.com/"&gt;Scala lift-off&lt;/a&gt; today in San Francisco, an &lt;em&gt;unconference&lt;/em&gt; organized by &lt;a href="http://blog.lostlake.org/"&gt;Dave Pollak&lt;/a&gt;, author of the &lt;a href="http://liftweb.net/"&gt;lift&lt;/a&gt; web framework and frequent hanger-out at the &lt;a href="http://twitter.com/"&gt;Twitter&lt;/a&gt; office (or &lt;em&gt;Twoffice&lt;/em&gt; if you will).&lt;br /&gt;&lt;br /&gt;&lt;a href="http://lampwww.epfl.ch/~odersky/"&gt;Martin Odersky&lt;/a&gt;, author of the &lt;a href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt; programming language, is kicking off the day.  Martin teaches at EPFL in Switzerland, and has a background in functional languages.  Before Scala, he's had a hand in several functional languages on the JVM, as well as rewriting the Java compiler for performance and correctness.  The Scala effort started in 2002, but the community has really been growing since 2006 when a redesigned implementation of the language was released.  This week has seen quite a bit of Scala buzz at JavaOne, including an endorsement of Scala as the premier alternative JVM language by Java author James Gosling.&lt;br /&gt;&lt;br /&gt;Odersky opens with an argument for a &lt;em&gt;scalable&lt;/em&gt; language: one that's suitable for small and large programs, from parsing to scripting, from extension scripts to heavy lifting libraries, one that embraces Domain-Specific Languages (DSLs) rather than a reliance on external languages.&lt;br /&gt;&lt;br /&gt;In one sense, Odersky suggests, Scala is a scripting language.  It's possible to simply type code into an interpreter and have it evaluated.  There can be very little boilerplate code in Scala, and most types can be inferred.&lt;br /&gt;&lt;br /&gt;In another sense, Scala is the "Java of the future."  Scala boasts most every language feature Java currently has, and many that are still pending or under debate in the Java community, such as closures, traits, and pattern matching.  Scala complies down to &lt;tt&gt;.class&lt;/tt&gt; files, and Odersky jokes that he should know, given that he's written two versions of the shipping Sun Java compiler. Scala's performance and operational profile is thus the same as Java's, give or take special cases and the use of alternative libraries.&lt;br /&gt;&lt;br /&gt;In still another sense, Scala is a "composition language", one with a new approach to modular systems.  In Scala, components are classes or traits that can be composed via mixins.  Abstraction is accomplished through abstract members, parameters, or self types; essentially, both functional and OOP metaphors for abstraction are available.&lt;br /&gt;&lt;br /&gt;For all that, Scala is trying to avoid becoming a "kitchen-sink language".  Scala is comparable in feature count to Java, but has far fewer features than C++ or C#.  Scala removes the following from the Java feature set: static members, primitive types, break, continue, special treatment of interfaces, wildcards, raw types, and enums.  Scala "concentrates on the glue", not on features.  Leveraging abstraction, users can implement the features they need in the language, rather than the language itself supporting every possible use case.  The same set of constructs are intended to support both small and large programs.&lt;br /&gt;&lt;br /&gt;Scala's lightweight syntax comes from a number of features: semicolon inference, type inference, lightweight classes, extensible APIs, and closures as control abstractions.  On average, Odersky predicts a 2x reduction in lines of code between a Java program and a Scala port.&lt;br /&gt;&lt;br /&gt;Odersky suggests that "scalability demands extensibility."  As an example, he notes all the different data types traditionally used for numerics in programming languages: int, long, float, double, complex, rational, interval, polynomial, etc.  While a language could support every possible numeric data type, Scala's extensibility strategy encourages abstractions and additions to existing types and methods to provide new numeric data types seamlessly. For example, it's possible to define &lt;tt&gt;+&lt;/tt&gt; and &lt;tt&gt;-&lt;/tt&gt; methods, essential to dropping in YourFancyNumeric class without pain.&lt;br /&gt;&lt;br /&gt;As another example of Scala's extensibility, Oderksy demonstrates adding new control structures.  A &lt;tt&gt;using&lt;/tt&gt; method executes a block of operations on a resource, then closes that resource.  It's a simple pattern with a short implementation, but the terse code is expressive and requires intimate understanding of Scala's type system to understand what's going on.&lt;br /&gt;&lt;br /&gt;Scala makes its scalability claims on the tight integration of functional and object-oriented programming.  One of the important concepts here is that functions themselves are objects in Scala.  Additionally, Scala offers Erlang-style Actors for high-concurrency programs, contributing to "scalability" in the operational/performance sense.&lt;br /&gt;&lt;br /&gt;Like Erlang, Scala provides Actors with mailboxes for messages passed to them.  Conventionally, a programmer has her Actors process received messages with a pattern match.  Odersky notes that the Actor features of Scala are libraries, not core language features, and argues that this is a testament to the strength of libraries and an extensible approach to language design.  Actors in Scala are implemented atop the FJ Framework; the event-driven flavor of Actors  (using &lt;tt&gt;react&lt;/tt&gt;) scale up to hundreds of thousands of processes in tests.&lt;br /&gt;&lt;br /&gt;The next problem to be solved for Scala is maintaining expressiveness while keeping programs safe and verifiable.  A project on "pluggable type systems" is underway, but is unlikely to yield changes to Scala for several years.&lt;br /&gt;&lt;br /&gt;Odersky notes a number of companies working in Scala: Google, Buy-a-Feature, Gump-It, Joberator, EDP Training, Reaktor Innovations, Sygneca.  Scala tools are improving, from the language's own complier, background complier, and interactive shell to testing frameworks and plugins for all the major Java IDEs.  Rounding out, the "official" &lt;a href="http://www.artima.com/shop/forsale"&gt;Scala book&lt;/a&gt; will be coming out soon.&lt;br /&gt;&lt;h4&gt;Question time!&lt;/h4&gt;Are Scala classes open?  No, because that defeats static typing.  But: mixins, etc.&lt;br /&gt;&lt;br /&gt;Does calling into Scala code from Java necessitate reflection?  [Answer not captured, sorry.]&lt;br /&gt;&lt;br /&gt;How stable is the language and what's the path for future features?  We've agreed to slow the development of the language.  There will be a standard distribution and an experimental branch.&lt;br /&gt;&lt;br /&gt;Is there a project to add Scala support to the Java compiler so you can mix the two languages in the same project/file?  Yes!  Eclipse has this working to some degree, other projects are underway.&lt;br /&gt;&lt;br /&gt;Because of the unconference format, more questions will be asked of Martin throughout the day and the Q&amp;amp;A session was cut short.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=8213004671366008175' title='5 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/8213004671366008175'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/8213004671366008175'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/05/scala-lift-off-martin-odersky-keynote.html' title='Scala lift-off: Martin Odersky Keynote'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-4627780829355138792</id><published>2008-05-03T18:11:00.001-07:00</published><updated>2008-05-04T02:14:07.961-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='culture'/><title type='text'>A Thought on Business Size and Happiness</title><content type='html'>We take for granted that startups tend to be small, productive, and fun, and that behemoth companies are usually bureaucratic, dreary, and slow to produce.  What's frequently left unexplored is the growth stage between these polar opposites.  The small-to-mid-sized company transition process is something I've been thinking about a lot lately.&lt;br /&gt;&lt;br /&gt;In some sense, the middle stage between startup and established business is the hardest in an organization's growth.  Startups may be just barely scraping by, but they can have fun doing it.  Big businesses may not have fun, but they have security and stability and process and usually enough money to sort most anything out.  Mid-sized businesses, though, seemingly have the potential to be both animals: fun and stable, profitable and agile, and so forth.  But clearly, given the culture of most large businesses that were once mid-sized businesses, having your cake and eating it too is a clearance shelf management book pipe dream.&lt;br /&gt;&lt;br /&gt;Consensus seems to be that any business larger than about five people won't be a "fun" place to work in the purest sense.  That doesn't mean it won't be successful, profitable, exciting, etc.  But the shared sense of goals, culture, aesthetics, and velocity that makes an infant business exciting seems to cap out at around five bodies.  Bigger than that and you'll never again be without the sort of communication problems that eat away at employee happiness and overall productivity.&lt;br /&gt;&lt;br /&gt;This is clearly an unfinished thought.  What I'd like to figure out is how to achieve that balance in a growing company.  What I'll more likely end up figuring out is how to mitigate the uncomfortable transition from small to big on a person-by-person basis.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=4627780829355138792' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4627780829355138792'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4627780829355138792'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/05/thought-on-business-size-and-happiness.html' title='A Thought on Business Size and Happiness'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-3563313214872696046</id><published>2008-04-08T12:31:00.001-07:00</published><updated>2008-04-08T12:31:00.899-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='personal'/><category scheme='http://www.blogger.com/atom/ns#' term='culture'/><category scheme='http://www.blogger.com/atom/ns#' term='technology'/><category scheme='http://www.blogger.com/atom/ns#' term='music'/><title type='text'>Recent Heros</title><content type='html'>&lt;img src="http://lh3.google.com/al3xanderpayne/R_vHcRQeMZI/AAAAAAAAAG8/Yf1jI__wRQ8/5155208E-5B45-4F04-8F4F-C1A7645D9EA2.jpg?imgmax=800" alt="5155208E-5B45-4F04-8F4F-C1A7645D9EA2.jpg" border="0" width="225" height="300" /&gt;&lt;br /&gt;&lt;a href="http://en.wikipedia.org/wiki/Steve_Albini"&gt;Steve Albini&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://lh3.google.com/al3xanderpayne/R_vHkRQeMaI/AAAAAAAAAHE/9-u89VWucT8/B0CAA4D8-D889-4CFF-BA8F-86A2CEA50373.jpg?imgmax=800" alt="B0CAA4D8-D889-4CFF-BA8F-86A2CEA50373.jpg" border="0" width="450" height="460" /&gt;&lt;br /&gt;&lt;a href="http://en.wikipedia.org/wiki/John_Rawls"&gt;John Rawls&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://lh5.google.com/al3xanderpayne/R_vH1xQeMbI/AAAAAAAAAHM/Al17Aai8oR0/8D59B826-4A9F-4DC7-8FAD-891749E71823.jpg?imgmax=800" alt="8D59B826-4A9F-4DC7-8FAD-891749E71823.jpg" border="0" width="290" height="241" /&gt;&lt;br /&gt;&lt;a href="http://en.wikipedia.org/wiki/Alan_Kay"&gt;Alan Kay&lt;/a&gt;</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=3563313214872696046' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3563313214872696046'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/3563313214872696046'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/04/recent-heros.html' title='Recent Heros'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-4089283210330599371</id><published>2008-04-08T12:24:00.001-07:00</published><updated>2008-04-09T00:28:20.882-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='technology'/><title type='text'>Mulling On Google App Engine</title><content type='html'>Google &lt;a href="http://code.google.com/appengine/"&gt;provided all the facts&lt;/a&gt;.  Everything else is opinion, preference, and hearsay.  Here's mine:&lt;br /&gt;&lt;br /&gt;The thing I'm most likely to use App Engine for in the short term is to whip together those tiny site ideas I've had floating around; stuff that's probably not going to make me any money and therefore doesn't make sense to spend money on hosting for.  EC2 can't compete here, as even a tiny site means at least $70/month, and even that doesn't automatically scale.  A cheap VPS also can't offer me easy scaling if a small project blows up.  This is the first visible deploy-and-forget offering out there.&lt;br /&gt;&lt;br /&gt;I like that the way to give your App Engine app a custom domain is via &lt;a href="http://google.com/a"&gt;Google Apps &lt;/a&gt; (nee For Your Domain).  It's too bad Google Apps accounts accounts are still second-class citizens in Google-land.  &lt;del&gt;You actually can't get an App Engine account with a Google Apps account.&lt;/del&gt;  Or use Google Groups with an Apps account.  Or sign up for AdSense with an Apps account.  Etc. etc. etc. ad nauseam.&lt;br /&gt;&lt;br /&gt;Python.  Is anybody surprised?  Python is easy to learn, clean, clear, and fast enough.  Google employs &lt;a href="http://www.python.org/~guido/"&gt;Python's author&lt;/a&gt;, so cooking up a sandboxed version of the language probably wasn't so bad.  Python web frameworks still lag a year behind Rails in features, but it doesn't matter.  Python is a better fit, and people will learn it just to play in the big leagues.&lt;br /&gt;&lt;br /&gt;Clever developers will build service-oriented architectures around App Engine.  Many applications won't fit Google's constraints, and it's bad business to be completely dependent on an inaccessible vendor.  But people will want some Google magic, and they'll build REST services as App Engine apps to backend sites hosted elsewhere.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=4089283210330599371' title='4 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4089283210330599371'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4089283210330599371'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/04/mulling-on-google-app-engine.html' title='Mulling On Google App Engine'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-2228378441715348066</id><published>2008-03-17T19:01:00.001-07:00</published><updated>2008-03-17T19:02:29.598-07:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='projects'/><title type='text'>My Side-Projects: Let Me Show You Them</title><content type='html'>I wrote about the value of &lt;a href="http://www.al3x.net/2008/02/on-side-projects.html"&gt;side-projects&lt;/a&gt; back in February, in part because I had a total lack of them at the time.  Shortly thereafter, that changed.  Rather than picking up the side-projects I mentioned in that post, I've ended up spending a few spare hours on other things entirely&lt;br /&gt;&lt;h4&gt;git-wiki&lt;/h4&gt;&lt;div style="text-align:center;"&gt;&lt;img src="http://lh4.google.com/al3xanderpayne/R98WiGPIiNI/AAAAAAAAAGc/odcyiUms5mM/home.jpg?imgmax=800" alt="home.jpg" border="0" width="380" height="290" /&gt;&lt;/div&gt;&lt;br /&gt;&lt;a href="http://github.com/al3x/git-wiki/tree/master"&gt;git-wiki&lt;/a&gt; is a web-based wiki whose data store is a Git repository of plain text files.  I found the original implementation by &lt;a href="http://atonie.org/2008/02/git-wiki"&gt;Simon Rozet&lt;/a&gt; while browsing recent commits on &lt;a href="http://github.com/"&gt;GitHub&lt;/a&gt; and got inspired.&lt;br /&gt;&lt;br /&gt;I kicked some patches around with &lt;a href="http://overstimulate.com/"&gt;Jesse Andrews&lt;/a&gt;, and pretty soon our version was a good ways beyond where Simon started.  I've gotten permission from Simon to fork the project under a new (ideally, sexier) name, but nothing has come to me just yet.  Others are creating their own forks of git-wiki and contributing improvements,  expect it to be a pretty solid wiki for personal use or small teams fairly soon.  If nothing else, it's got a simple, clean design courtesy of &lt;a href="http://www.timoni.org/"&gt;Timoni&lt;/a&gt;.&lt;br /&gt;&lt;h4&gt;Down for everyone or just me?&lt;/h4&gt;The other day a friend Twittered "is LiveJournal down for everyone, or just me?"  It was about the billionth time I've seen someone on a forum, IRC, IM, or Twitter ask if a site was down.  See, sometimes bad things happen to good internet connections, and there's no telling if someone upstream from you biffed the DNS server or if your destination is actually unreachable.  &lt;a href="http://downforeveryoneorjustme.com/"&gt;downforeveryoneorjustme.com&lt;/a&gt; is one trivial answer to this perennial question.&lt;br /&gt;&lt;br /&gt;Here's how it works: you type in a domain, we transform what you typed in to something sane, and then we do a HEAD request against "/" for that domain.  If the site responds in 4 seconds, it's up.  If it doesn't, we report that it "looks down from here".  This is, of course, totally cheesy.  But it also tells you what you need to know 90% of the time.&lt;br /&gt;&lt;br /&gt;Obviously, this is not a pro-grade monitoring solution.  This is for quick, simple checks against popular domains.  It gives you a quick answer and lets you go on your way, only encumbering you with some tasteful AdWords (not that I see them with my ad-blocker on).  If it's not the level of detail you're looking for, there are a ton of tools that do geographically multi-homed monitoring, historical reports, etc.&lt;br /&gt;&lt;br /&gt;I've done nothing to promote the site other than Twitter about it and put it on &lt;a href="http://del.icio.us/al3x"&gt;my del.icio.us&lt;/a&gt; since bringing it online this past Thursday evening.  In that time it's had over 85,000 visits and over 232,000 pageviews according to Google Analytics, which is pretty much insane.  It's running off of a tiny &lt;a href="http://gandi.net/"&gt;Gandi&lt;/a&gt; VPS and the code is a couple hundred lines (including templates) of  Ruby, powered by the &lt;a href="http://sinatra.rubyforge.org/"&gt;Sinatra&lt;/a&gt; micro web framework.  I'm running four instances of the application behind &lt;a href="http://nginx.net/"&gt;Nginx&lt;/a&gt;, and save for the occasional slow request it's been standing up pretty well (low load on the box, response times are usually fast).  I'll probably switch from serving via Mongrel to &lt;a href="http://code.macournoyer.com/thin/"&gt;Thin&lt;/a&gt; fairly soon, once traffic has calmed down a bit.&lt;br /&gt;&lt;h4&gt;Where Is Britt?&lt;/h4&gt;The future of geolocation is &lt;a href="http://whereisbritt.com/"&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;h4&gt;What I've Learned&lt;/h4&gt;While &lt;a href="http://downforeveryoneorjustme.com/"&gt;downforeveryoneorjustme.com&lt;/a&gt; has quickly become popular, it's more responsibility than I really wanted out of a quick hack.  If it gives someone a wrong answer, that sucks, but I don't have the time or resources or desire to build the ideal solution.  I hope that some big ISP or networking outfit takes the simple design and puts it in front of a proper setup.  In the meantime, it's novel to be making a few bucks off of AdWords, which I've never tried before.&lt;br /&gt;&lt;br /&gt;Working on git-wiki is, like most developer-oriented projects I've spent time on, much more rewarding.  Other developers are the best customers.  But I'm actually spending more time hacking on it than, say, putting stuff in my personal wiki.   I have the feeling that the quote-management application I've been dreaming of would be the same sort of affair: put hours into building it, use it for mere minutes.&lt;br /&gt;&lt;br /&gt;Honestly, what I've learned is that I need a hobby that isn't coding.  I haven't understood why so many programmers get involved with gaming when coding is, for me, really enjoyable.  But it's hard to code something worthwhile and exciting that doesn't leave you beholden to supporting that code and its users.  Really good personal projects quickly become jobs.  Sometimes that's what you want, but one job is enough for me at this point in time.&lt;br /&gt;&lt;br /&gt;Ultimately, I've ended up with a quandry: how do you keep side-projects manageable?</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=2228378441715348066' title='8 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2228378441715348066'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2228378441715348066'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/03/my-side-projects-let-me-show-you-them.html' title='My Side-Projects: Let Me Show You Them'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>8</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-8638282684019484731</id><published>2008-02-27T11:05:00.001-08:00</published><updated>2008-02-27T11:05:48.001-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='technology'/><category scheme='http://www.blogger.com/atom/ns#' term='events'/><title type='text'>al3x at Web 2.0</title><content type='html'>&lt;a href="http://sf.web2expo.com"&gt;&lt;img src="http://en.oreilly.com/webexsf2008/public/asset/asset/1098" width="125" height="125"  border="0"  alt="Web 2.0 Expo San Francisco 2008" title="Web 2.0 Expo San Francisco 2008" align="right" /&gt;&lt;/a&gt;When rounding up my schedule for the next couple of months, I forgot to mention that I'll be speaking at &lt;a href="http://sf.web2expo.com"&gt;O'Reilly's Web 2.0 Expo&lt;/a&gt; right here in San Francisco in late April.&lt;br /&gt;&lt;br /&gt;On Wednesday, April 23rd, &lt;a href="http://mike.teczno.com/"&gt;Michal Migurski&lt;/a&gt; (of &lt;a href="http://www.stamen.com/"&gt;Stamen&lt;/a&gt;) and I will be presenting a talk called &lt;a href="http://en.oreilly.com/webexsf2008/public/schedule/detail/2266"&gt;Design Your API: Learnings from Twitter and Stamen&lt;/a&gt;.  It's kind of a cool session, we think: Mike talks about consuming APIs from a developer/design perspective, and I talk about creating and maintaining APIs from a provider perspective.  There's going to be war stories and pretty graphs.  I'm excited.&lt;br /&gt;&lt;br /&gt;Funnily enough, there's a panel at SXSW called &lt;a href="http://2008.sxsw.com/interactive/programming/panels_schedule/?action=show&amp;id=IAP060350"&gt;Building Developer-Friendly Web Service APIs&lt;/a&gt; that's on the same tip.  With &lt;a href="http://www.programmableweb.com/"&gt;APIs continuing to crop up left and right&lt;/a&gt;, it's no surprise that people want to nosh on some best practices.  Michal and I intend to deliver, so join us in San Francisco!</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=8638282684019484731' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/8638282684019484731'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/8638282684019484731'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/02/al3x-at-web-20.html' title='al3x at Web 2.0'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-2657098919558129115</id><published>2008-02-26T15:15:00.001-08:00</published><updated>2008-02-26T15:15:16.581-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mac'/><title type='text'>Defeated By Upgrades</title><content type='html'>I've waited and waited and then waited some more for a new &lt;a href="http://www.apple.com/macbookpro/"&gt;MacBook Pro&lt;/a&gt;.  I've not just been waiting for an upgrade but for a whole new machine, something as refreshingly different as the MacBook Air while retaining serious performance under the hood.&lt;br /&gt;&lt;br /&gt;My current MacBook Pro is two years old.  While it's worked well, the fact that it's not 64-bit has started to be an issue (ex: sharing virtual machines with coworkers).  So when Apple &lt;a href="http://www.macworld.com/article/132255/2008/02/macbookair.html"&gt;announced&lt;/a&gt; upgraded (but not new) MacBook Pros today, I bit the bullet.  My new decked-out 15" MacBook Pro (with a glossy screen, after much debate on Twitter) should arrive next week. &lt;br /&gt;&lt;br /&gt;While I'm sure the new MacBook Pro will be superb, it's still a bit disappointing to wait for ages and still be purchasing a machine that's an incremental variation on a &lt;a href="http://en.wikipedia.org/wiki/PowerBook_G4#Titanium_PowerBook_G4"&gt;seven year old design&lt;/a&gt;.  But then, if I cared more about design than performance, I would've gone for an Air.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=2657098919558129115' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2657098919558129115'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/2657098919558129115'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/02/defeated-by-upgrades.html' title='Defeated By Upgrades'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-1845115085358613573</id><published>2008-02-17T17:43:00.001-08:00</published><updated>2008-02-17T17:44:16.127-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='projects'/><category scheme='http://www.blogger.com/atom/ns#' term='personal'/><category scheme='http://www.blogger.com/atom/ns#' term='programming'/><title type='text'>On Side-Projects</title><content type='html'>Side-projects are important to every programmer I admire.  Google's much-publicized &lt;a href="http://en.wikipedia.org/wiki/Google#.22Twenty_percent.22_time"&gt;20% time&lt;/a&gt; is a corporate codification of the importance of side-projects; even a company that's worth billions knows that you can't keep good people working on the same thing all the time. &lt;br /&gt;&lt;h4&gt;Side-Projects and You&lt;/h4&gt;There are lots of good reasons to always have some side-projects going:&lt;ul&gt;&lt;li&gt;Projects keep you learning.  New programming languages, new technologies, new ideas.&lt;/li&gt;&lt;li&gt;Projects are mentally refreshing.   Taking a step away from the problems you normally deal with is relaxing, and can lend a new perspective on how you work.&lt;/li&gt;&lt;li&gt;Projects can be fun.  Fun is fun.&lt;/li&gt;&lt;li&gt;Projects can be profitable.  Little ideas can turn into products and services that people want to pay for (or at least click ads on).  Unusual ideas can forge new markets.&lt;/li&gt;&lt;li&gt;Projects make you friends. Getting involved with a community is rewarding personally and professionally.&lt;/li&gt;&lt;/ul&gt;All that may seem  obvious if you've made a habit of having side-projects, but I'm always surprised by how many people don't bother.  But then, you don't hear about those people because they don't blog, attend meetups and conferences, or generally do things that would make them visible.  Side-projects are a sign that you care.  They're something we ask about when interviewing at &lt;a href="http://twitter.com/"&gt;Twitter&lt;/a&gt;.&lt;br /&gt;&lt;h4&gt;Side-Projects and Me&lt;/h4&gt;I've had two side-projects on my to-do list for ages.  The first and oldest is Peeramour, which is more or less a dating site for bloggers that emphasizes one's existing online presence rather than requiring yet another half-baked profile.  I've been wanting to build this for about the last three years.  Peeramour was conceived to scratch a personal itch, but I think there's a business opportunity there too.  It's also something that I think would make people happy, and I feel an obligation to give something back to the web community that's been so good to me.  Peeramour isn't hard to build, but I want to build it right, both aesthetically and technically. &lt;br /&gt;&lt;br /&gt;The second project I've wanted to work on is Quotidian, a Mac OS X (Cocoa) application with which you can store, tag, and organize your favorite quotations.  I've also considered building a web compliment to Quotidian that would allow you to share your favorite quotes with friends and interested strangers, but &lt;a href="http://trsly.com/"&gt;Trsly&lt;/a&gt; pretty much gets this job done to my satisfaction.  My goal for Quotidian is mostly educational: I use a Mac every day, but I have a relatively limited sense of how I'd build a native Mac tool for myself to use.  I'm also concerned that too many of my eggs are in the web-programming basket.  Web apps may be vogue, but desktop application programming isn't going to disappear any time soon.  It's tough to be a skilled generalist, though, and while I've learned a bunch of theory about how to write Mac software, I haven't had time to get into the nitty-gritty with this project.  Once again, the difference is between doing it and doing it &lt;em&gt;right&lt;/em&gt;, and the latter requires a ton of knowledge about a development platform with a nearly 20-year heritage.&lt;br /&gt;&lt;br /&gt;One of my old side-projects, &lt;tt&gt;acts_as_sanitized&lt;/tt&gt;, has been forked and surpassed (with my hearty blessing) by &lt;a href="http://code.google.com/p/xssterminate/"&gt;xss_terminate&lt;/a&gt;, written by Luke Francl, who's &lt;a href="http://railspikes.com/2008/1/28/auto-escaping-html-with-rails"&gt;blogged about it here&lt;/a&gt;.  &lt;tt&gt;acts_as_sanitized&lt;/tt&gt; was released just before I got swamped by work on Twitter, and I owe Luke for making it something useful again.  It's a lesson in the value of open-sourcing, and it leads me to what follows.&lt;br /&gt;&lt;h4&gt;Side-Projects and Twitter&lt;/h4&gt;Working at Twitter is more than a full-time job.  As I mentioned in &lt;a href="http://www.al3x.net/2008/01/work-with-me-here.html"&gt;a previous post&lt;/a&gt;, we're still a very small technical team (presently five people writing code and two looking after servers).  There's always something work-related I could/should be working on, which means that there's basically no room in my life for guilt-free side-projects.  No surprise, right?  We're a startup. &lt;br /&gt;&lt;br /&gt;One of my goals is that Twitter gets big enough that we have room for side-projects.  Right now it just doesn't make business sense.  We barely have time to open-source projects like &lt;a href="https://rubyforge.org/projects/starling/"&gt;Starling&lt;/a&gt; that can benefit from the community's support, much less to code up our own off-the-wall ideas.  Compared to our peers in the Bay Area Ruby community we open-source a pathetic amount of code, and I'm eager for that to change.  Part of making that happen is approaching our internal goals with the idea that the solutions need to be generic enough that they can be readily opened-up to outside contribution.&lt;br /&gt;&lt;br /&gt;The people I'm really excited about working with are all big open-source contributors, and I don't think I'm alone in that.  As part of scouting for talent becomes evaluating open-source work, it's going to become a standard part of every good company's growth to standardize policies around open-source contribution and side-projects.  After all, Twitter started out as a side-project, which pretty much says it all.</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=1845115085358613573' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/1845115085358613573'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/1845115085358613573'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/02/on-side-projects.html' title='On Side-Projects'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-6862725077071266739</id><published>2008-02-17T15:56:00.001-08:00</published><updated>2008-02-17T15:56:51.144-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ruby'/><category scheme='http://www.blogger.com/atom/ns#' term='travel'/><category scheme='http://www.blogger.com/atom/ns#' term='events'/><title type='text'>al3x in Austin, al3x in NYC</title><content type='html'>...in that order!&lt;br /&gt;&lt;br /&gt;From Friday, March 7th to Tuesday, March 11th I'll be in toasty Austin, Texas for &lt;a href="http://2008.sxsw.com/interactive/"&gt;SXSW Interactive 2008&lt;/a&gt;.  I'm not speaking at SXSW itself, but my colleague &lt;a href="http://www.romeda.org/"&gt;Blaine Cook&lt;/a&gt; and I will be giving an informal presentation on where Twitter is going at &lt;a href="http://barcamp.org/BarCampAustinIII"&gt;BarCamp Austin III&lt;/a&gt;, probably on Saturday.  Mostly, I'm going to SXSW to party and bullshit.  Those seem to be the primary activities given my experience last year, so this year I'm coming prepared.&lt;br /&gt;&lt;br /&gt;In April I'll be speaking at &lt;a href="http://2008.goruco.com/"&gt;GoRuCo 2008&lt;/a&gt;, the Gotham Ruby Conference.  It's a one-day conference on Saturday, April 26th, and I'm one of just six speakers (eep!).  I'll be talking about Twitter from a code-first perspective.  We've done our share of conference sessions in 2007, but I'm hoping to go a bit more in-depth with this one, particularly now that we're open-sourcing bits and pieces of our stack.  &lt;br /&gt;&lt;br /&gt;You can find information about my travels on &lt;a href="http://www.dopplr.com/traveller/al3x"&gt;Dopplr&lt;/a&gt;, which is now open to the public and a joy to use.  I put my trips on Dopplr and on this blog because I'm eager to meet you.  If you'd like to meet up in Austin or NYC to talk about Twitter, Ruby, social software, bitchin' records, whatever, drop a line!</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=6862725077071266739' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/6862725077071266739'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/6862725077071266739'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/02/al3x-in-austin-al3x-in-nyc.html' title='al3x in Austin, al3x in NYC'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-8943097312547508745.post-4193782818248207921</id><published>2008-01-19T20:19:00.001-08:00</published><updated>2008-01-20T21:41:41.944-08:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='twitter'/><title type='text'>Work With Me Here</title><content type='html'>Since &lt;a href="http://evhead.com/2008/01/startup-developers-telling-schmucks.asp"&gt;Ev mentioned it&lt;/a&gt;, I'll mention it: Twitter is still &lt;a href="http://twitter.com/help/jobs"&gt;hiring&lt;/a&gt;.  We principally need engineers and operations people.  You don't have to know Ruby or Rails or any particular thing.  You mostly have to be smart, passionate, and nice. &lt;br /&gt;&lt;br /&gt;The biggest thing we're working on at Twitter right now is stability.  We know that we're incredibly lucky that our users put up with the site's frequent hiccups and outages.  Explaining what's behind those hiccups is complicated, but the point is that if you want to help turn Twitter into a world-class, rock-solid part of the web's infrastructure, now's the time to get on board.&lt;br /&gt;&lt;br /&gt;I'm not sure most people realize how small a company Twitter is.  We're four engineers, two operations guys, and eight others that comprise user support, product management, interaction design, and various keep-the-business running type things.  Similarly, we've been doing a lot more traffic than people think on way fewer servers than people think.  We're happy that we've been able to get by, but it's time to take it to the next level.  It's time to grow.&lt;br /&gt;&lt;br /&gt;If you're interested, I'm happy to answer any questions.  We've just hired a great VP of Engineering &amp;amp; Operations who'd also like to talk to you; ask him about &lt;em&gt;writing the first version of QuickTime.  &lt;span class="Apple-style-span" style="font-style: normal;"&gt;Twitter is a great place to work, and the people are the best part.&lt;/span&gt;&lt;/em&gt;</content><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=8943097312547508745&amp;postID=4193782818248207921' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4193782818248207921'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/8943097312547508745/posts/default/4193782818248207921'/><link rel='alternate' type='text/html' href='http://www.al3x.net/2008/01/work-with-me-here.html' title='Work With Me Here'/><author><name>Alex Payne</name><uri>http://www.blogger.com/profile/04911568994014997196</uri><email>noreply@blogger.com</email></author><thr:total xmlns:thr='http://purl.org/syndication/thread/1.0'>1</thr:total></entry></feed>
