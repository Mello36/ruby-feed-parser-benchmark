<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="http://weblogs.asp.net/utility/FeedStylesheets/atom.xsl" media="screen"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><title type="html">ScottGu's Blog</title><subtitle type="html">Scott Guthrie lives in Seattle and builds a few products for Microsoft</subtitle><id>http://weblogs.asp.net/scottgu/atom.aspx</id><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/default.aspx" /><link rel="self" type="application/atom+xml" href="http://weblogs.asp.net/scottgu/atom.aspx" /><generator uri="http://communityserver.org" version="3.0.20510.895">Community Server</generator><updated>2008-09-02T05:21:59Z</updated><entry><title>Dec 2nd Links: ASP.NET, ASP.NET Dynamic Data, ASP.NET AJAX, ASP.NET MVC, Visual Studio, Silverlight/WPF</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/12/02/dec-2nd-links-asp-net-asp-net-dynamic-data-asp-net-ajax-asp-net-mvc-visual-studio-silverlight-wpf.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/12/02/dec-2nd-links-asp-net-asp-net-dynamic-data-asp-net-ajax-asp-net-mvc-visual-studio-silverlight-wpf.aspx</id><published>2008-12-02T08:43:00Z</published><updated>2008-12-02T08:43:00Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;I'm flying out later today on a pretty intense business trip (22,000 miles, 5 countries, 3 continents, 1 week, no sleep... :-), so my blog activity over the next week and a half will be pretty light.&amp;#160; To keep you busy till I return, here is the latest in my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/11/06/nov-6th-links-asp-net-asp-net-ajax-jquery-asp-net-mvc-silverlight-and-wpf.aspx"&gt;link-listing series&lt;/a&gt;.&amp;#160; Also check out my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/ASP.NET-2.0-Tips_2C00_-Tricks_2C00_-Recipes-and-Gotchas.aspx"&gt;ASP.NET Tips, Tricks and Tutorials page&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-posts.aspx"&gt;Silverlight Tutorials page&lt;/a&gt; for links to popular articles I've done myself in the past.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.hanselman.com/blog/TheWeeklySourceCode37GeolocationGeotargetingReverseIPAddressLookupInASPNETMVCMadeEasy.aspx"&gt;Geolocation/Geotargeting Reverse IP Lookup Code&lt;/a&gt;: Scott Hanselman has a cool sample that demonstrates how to perform IP address lookups on users visiting your site to determine where they are located on the globe (down to the latitude and longitude).&amp;#160; Pretty cool stuff.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://dotnetslackers.com/articles/aspnet/Tracking-User-Activity.aspx"&gt;Tracking User Activity&lt;/a&gt;: Scott Mitchell has a nice article that discusses how to track end-user activity when visiting an ASP.NET web site.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/10/itunes_data_grid_skin.html?source=feed"&gt;iTunes Data Grid Skin&lt;/a&gt;: Matt Berseth continues his cool series showing off cool new skins you can apply to ASP.NET controls (especially the GridView and DetailsView controls).&amp;#160; This post shows off a pretty sweet iTunes like skin.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/tess/archive/2008/11/06/troubleshooting-appdomain-restarts-and-other-issues-with-etw-tracing.aspx"&gt;Using ETW to Troubleshoot AppDomain Restarts and other Issues&lt;/a&gt;: Tess Ferrandez has another great post that demonstrates how to use the ETW tracing features built-into ASP.NET and Windows to trouble-shoot runtime issues.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET Dynamic Data&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.asp.net/learn/3.5-SP1/"&gt;ASP.NET Dynamic Data Videos:&lt;/a&gt; Joe Stagner has 6 nice ASP.NET Dynamic Data &amp;quot;How Do I?&amp;quot; videos posted on &lt;a target="_blank" href="http://www.asp.net"&gt;www.asp.net&lt;/a&gt; that you can check out to learn about the new ASP.NET Dynamic Data feature in .NET 3.5 SP1.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/davidebb/archive/2008/10/25/a-many-to-many-field-template-for-dynamic-data.aspx"&gt;A &amp;quot;Many to Many&amp;quot; field template for Dynamic Data&lt;/a&gt;: David Ebbo has a great post that talks about how to enable Many To Many scenarios with ASP.NET Dynamic Data.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/lduveau/archive/2008/11/28/customizing-asp-net-dynamic-data.aspx"&gt;Customizing ASP.NET Dynamic Data&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/lduveau/archive/2008/12/01/asp-net-dynamic-data-customize-a-template-field.aspx"&gt;Customizing a Template Field&lt;/a&gt;: Laurent Duveau has two nice posts in a series he is doing on using ASP.NET Dynamic Data and customizing the UI generated from it.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://rachelappel.com/asp-net-dynamic-data/asp-net-dynamic-data-routing/"&gt;ASP.NET Dynamic Data Routing&lt;/a&gt;: Rachel Appel has a nice post that talks about how to use the new ASP.NET routing features with ASP.NET Dynamic Data to enable customized URLs.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/davidebb/archive/2008/11/26/fun-with-t4-templates-and-dynamic-data.aspx"&gt;Fun with T4 Templates and Dynamic Data:&lt;/a&gt; David Ebbo has a cool post on how to use the T4 templating engine built-into Visual Studio to automate ASP.NET Dynamic Data form generation.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/davidebb/archive/2008/11/25/using-user-controls-as-page-templates-in-dynamic-data.aspx"&gt;Using User Controls as Page Templates in Dynamic Data:&lt;/a&gt; David Ebbo has another nice post that talks about how to use user controls with ASP.NET Dynamic Data.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET AJAX&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/infinitiesloop/archive/2008/11/09/asp-net-ajax-4-0-observing-updates-to-pojos-plain-ole-javascript-objects.aspx"&gt;ASP.NET AJAX - Observing Updates to Plain Old JavaScript Objects:&lt;/a&gt; Dave Reed has a great blog post about one of the new features coming in ASP.NET AJAX - support for observing updates on plain old javascript objects.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/10/17/using-the-power-of-binding-to-animate-changes.aspx"&gt;Using the Power of Binding to Animate Changes&lt;/a&gt;: Bertrand Le Roy has a nice post that talks about the new ASP.NET AJAX binding features coming and how you can use them with jQuery to animate changes.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/11/28/instantiating-components-on-template-markup.aspx"&gt;Instantiating Components on template markup&lt;/a&gt;: Bertrand Le Roy has a nice post that talks about client-side AJAX templating approaches and some of the new features coming in ASP.NET AJAX.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/11/21/putting-more-than-one-behavior-on-one-element.aspx"&gt;Putting more than one behavior on one element&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/11/22/getting-a-reference-to-a-behavior.aspx"&gt;Getting a Reference to a Behavior&lt;/a&gt;: Bertrand Le Roy has two nice articles that talk about how to use the client-side behaviors feature of ASP.NET AJAX.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.dotnetcurry.com/ShowArticle.aspx?ID=236"&gt;Check/Uncheck all Items in an ASP.NET Checkbox List using jQuery:&lt;/a&gt; A nice article by Suprotim Agarwal that shows how to write client-side jQuery code to enable check/uncheck for all items within a checkbox list.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET MVC&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://haacked.com/archive/2008/11/26/asp.net-mvc-on-iis-6-walkthrough.aspx"&gt;How to Setup ASP.NET MVC on IIS6&lt;/a&gt;: Phil Haack has a great post that walks-through how to enable ASP.NET MVC on IIS6 servers (including how to enable it on a hosting server that you can't install anything on).&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://flux88.com/blog/fluent-route-testing-in-asp-net-mvc/"&gt;Fluent Route Testing in ASP.NET MVC&lt;/a&gt;: Ben Scheirman has a nice post where he blogs about new helper methods he is creating that make it easier to unit test ASP.NET MVC routes using a fluent API. &lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://farazt.blogspot.com/2008/10/autocomplete-using-jquery-mvc-and-json.html"&gt;Autocomplete using jQuery, ASP.NET MVC and JSON&lt;/a&gt;: Faraz Tabibian has a nice blog sample that demonstrates how to implement an autocomplete textbox using jQuery and ASP.NET MVC.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/mikebosch/archive/2008/11/25/hierarchical-treeview-with-asp-net-mvc-jquery.aspx"&gt;Hierarchical TreeView with ASP.NET MVC &amp;amp; jQuery&lt;/a&gt;: Mike Bosch has a cool sample that demonstrates how to add treeview UI to an ASP.NET MVC site using jQuery.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;Visual Studio&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://codeclimber.net.nz/archive/2008/11/27/mstest-tip-double-click-to-go-to-failing-test.aspx"&gt;MSTest Tip: Double-Click to Go to Failing Test&lt;/a&gt;: Simone Chiaretta has a cool tip that can speed up navigating to a test when it fails in the built-in VS 2008 unit test runner.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/saraford/archive/2008/11/26/did-you-know-how-to-add-a-linked-item-to-a-project-365.aspx"&gt;How to Add a Linked Item to a Project&lt;/a&gt;: Sara Ford has a nice post that talks about how to add linked items to your VS projects.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/webdevelopertips/archive/2008/11/25/tip-28-did-you-know-that-go-to-definition-is-supported-for-css-class.aspx"&gt;Go to Class Definition for CSS&lt;/a&gt;: Nice post from the VS web tools team that talks about the &amp;quot;Go To Class Definition&amp;quot; feature in VS 2008 for CSS.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/webdevelopertips/archive/2008/11/07/tip-21-did-you-know-how-to-set-a-fixed-port-for-the-developer-web-server.aspx"&gt;How to Set a fixed Port for the VS Development WebServer&lt;/a&gt;: Another nice post from the VS web tools team that discusses how to assign a fixed HTTP port to an ASP.NET project within Visual Studio.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;WPF / Silverlight&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://channel9.msdn.com/shows/Continuum/XAMLPowerToys/"&gt;XAML Power Toys - Instant Form Creation&lt;/a&gt;: Karl Shifflett has a great video that shows off his XAML Power Toys tool that integrates into Visual Studio and enables rapid forms creation for WPF and Silverlight.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.jeff.wilcox.name/2008/11/24/autocompletebox-missing-guide/"&gt;AutoCompleteBox Control - The Missing Guide&lt;/a&gt;: Jeff Wilcox has an awesome post that talks about the new Silverlight AutoCompleteBox control in the Silverlight Toolkit.&amp;#160; Very useful reading.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.hanselman.com/blog/TheWeeklySourceCode36PDCBabySmashAndSilverlightCharting.aspx"&gt;Silverlight Charting and BabySmash:&lt;/a&gt; Scott Hanselman has a cool post where he talks about how he integrated the new Silverlight Chart control with his BabySmash sample from his &lt;a target="_blank" href="http://channel9.msdn.com/pdc2008/TL49/"&gt;awesome talk at the PDC&lt;/a&gt;.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.codeplex.com/SilverlightValidator"&gt;Silverlight Validator &amp;amp; Input Toolkit&lt;/a&gt;: A really nice new CodePlex project that enables validation controls for Silverlight - making form input scenarios a lot easier.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6762530" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="Silverlight" scheme="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" /><category term="Link Listing" scheme="http://weblogs.asp.net/scottgu/archive/tags/Link+Listing/default.aspx" /><category term="MVC" scheme="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx" /></entry><entry><title>New ASP.NET Charting Control: &lt;asp:chart runat="server"/&gt;</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/11/24/new-asp-net-charting-control-lt-asp-chart-runat-quot-server-quot-gt.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/11/24/new-asp-net-charting-control-lt-asp-chart-runat-quot-server-quot-gt.aspx</id><published>2008-11-25T06:38:14Z</published><updated>2008-11-25T06:38:14Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Microsoft recently released a cool new ASP.NET server control - &amp;lt;asp:chart /&amp;gt; - that can be used for free with ASP.NET 3.5 to enable rich browser-based charting scenarios:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a target="_blank" href="http://www.microsoft.com/downloads/details.aspx?FamilyID=130f7986-bf49-4fe5-9ca8-910ae6ea442c&amp;amp;DisplayLang=en"&gt;Download the free Microsoft Chart Controls&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://www.microsoft.com/downloads/details.aspx?familyid=1D69CE13-E1E5-4315-825C-F14D33A303E9&amp;amp;displaylang=en"&gt;Download the VS 2008 Tool Support for the Chart Controls&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://code.msdn.microsoft.com/mschart/Release/ProjectReleases.aspx?ReleaseId=1591"&gt;Download the Microsoft Chart Controls Samples&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://www.microsoft.com/downloads/details.aspx?FamilyId=EE8F6F35-B087-4324-9DBA-6DD5E844FD9F&amp;amp;displaylang=en"&gt;Download the Microsoft Chart Controls Documentation&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://social.msdn.microsoft.com/Forums/en-US/MSWinWebChart/threads/"&gt;Visit the Microsoft Chart Control Forum&lt;/a&gt; &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Once installed the &amp;lt;asp:chart/&amp;gt; control shows up under the &amp;quot;Data&amp;quot; tab on the Toolbox, and can be easily declared on any ASP.NET page as a standard server control:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/chart/step0.png" /&gt; &lt;/p&gt;    &lt;p&gt;&amp;lt;asp:chart /&amp;gt; supports a rich assortment of chart options - including pie, area, range, point, circular, accumulation, data distribution, ajax interactive, doughnut, and more.&amp;#160; You can statically declare chart data within the control declaration, or alternatively use data-binding to populate it dynamically.&amp;#160; At runtime the server control generates an image (for example a .PNG file) that is referenced from the client HTML of the page using a &amp;lt;img/&amp;gt; element output by the &amp;lt;asp:chart/&amp;gt; control.&amp;#160; The server control supports the ability to cache the chart image, as well as save it on disk for persistent scenarios.&amp;#160; It does not require any other server software to be installed, and will work with any standard ASP.NET page. &lt;/p&gt;    &lt;p&gt;To get a sense of how to use the &amp;lt;asp:chart /&amp;gt; control I recommend &lt;a target="_blank" href="http://code.msdn.microsoft.com/mschart/Release/ProjectReleases.aspx?ReleaseId=1591"&gt;downloading the Microsoft Chart Controls Sample Project&lt;/a&gt;.&amp;#160; This includes over 200 ASP.NET sample pages that you can run locally.&amp;#160; Just open the web project in VS 2008 and hit run to see them in action - you can then open the .aspx source of each to see how they are implemented.&lt;/p&gt;    &lt;p&gt;The below example (under Chart Types-&amp;gt;Line Charts-&amp;gt;3D Line and Curve Charts) demonstrates how to perform Line, Spline and StepLine charting:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/chart/step1.png" /&gt; &lt;/p&gt;    &lt;p&gt;The below example (under Chart Types-&amp;gt;Pie and Doughnut Charts) demonstrates a variety of pie and 3D doughnut options:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/chart/step2.png" /&gt; &lt;/p&gt;    &lt;p&gt;The below example (under Chart Types-&amp;gt;Advanced Financial Charts) demonstrates some graph charts:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/chart/step3.png" /&gt; &lt;/p&gt;    &lt;p&gt;In addition to the above samples, you can download the &lt;a target="_blank" href="http://www.microsoft.com/downloads/details.aspx?FamilyId=EE8F6F35-B087-4324-9DBA-6DD5E844FD9F&amp;amp;displaylang=en"&gt;Microsoft Chart Control Documentation&lt;/a&gt; or ask questions on the &lt;a target="_blank" href="http://social.msdn.microsoft.com/Forums/en-US/MSWinWebChart/threads/"&gt;Chart Controls Forum&lt;/a&gt; to learn more.&lt;/p&gt;    &lt;p&gt;This should provide a useful (and free) addition to your standard ASP.NET toolkit of functionality, and enable you to easily add richer visualization and data workflow scenarios to your ASP.NET applications.&lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt;    &lt;p&gt;&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6753034" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /></entry><entry><title>jQuery Intellisense in VS 2008</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx</id><published>2008-11-21T10:07:17Z</published><updated>2008-11-21T10:07:17Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Last month I blogged about &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/09/28/jquery-and-microsoft.aspx"&gt;how Microsoft is extending support for jQuery&lt;/a&gt;.&amp;#160; Over the last few weeks we've been working with the jQuery team to add great jQuery intellisense support within Visual Studio 2008 and Visual Web Developer 2008 Express (which is free).&amp;#160; This is now available to download and use.&lt;/p&gt;    &lt;h3&gt;Steps to Enable jQuery Intellisense in VS 2008&lt;/h3&gt;    &lt;p&gt;To enable intellisense completion for jQuery within VS you'll want to follow three steps:&lt;/p&gt;    &lt;p&gt;&lt;u&gt;&lt;strong&gt;Step 1: Install VS 2008 SP1&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;VS 2008 SP1 adds richer JavaScript intellisense support to Visual Studio, and adds code completion support for a broad range of JavaScript libraries. &lt;/p&gt;    &lt;p&gt;You can download VS 2008 SP1 and Visual Web Developer 2008 Express SP1 &lt;a target="_blank" href="http://msdn.microsoft.com/en-us/vstudio/cc533448.aspx"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Step 2: Install VS 2008 Patch KB958502 to Support &amp;quot;-vsdoc.js&amp;quot; Intellisense Files&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;Two weeks ago we shipped a patch that you can apply to VS 2008 SP1 and VWD 2008 Express SP1 that causes Visual Studio to check for the presence of an optional &amp;quot;-vsdoc.js&amp;quot; file when a JavaScript library is referenced, and if present to use this to drive the JavaScript intellisense engine.&lt;/p&gt;    &lt;p&gt;These annotated &amp;quot;-vsdoc.js&amp;quot; files can include XML comments that provide help documentation for JavaScript methods, as well as additional code intellisense hints for dynamic JavaScript signatures that cannot automatically be inferred.&amp;#160; You can learn more about this patch &lt;a target="_blank" href="http://blogs.msdn.com/webdevtools/archive/2008/11/07/hotfix-to-enable-vsdoc-js-intellisense-doc-files-is-now-available.aspx"&gt;here&lt;/a&gt;.&amp;#160; You can download it for free &lt;a target="_blank" href="http://code.msdn.microsoft.com/KB958502/Release/ProjectReleases.aspx?ReleaseId=1736"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Step 3: Download the jQuery-vsdoc.js file&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;We've worked with the jQuery team to put together a jQuery-vsdoc.js file that provides help comments and support for JavaScript intellisense on chained jQuery selector methods.&amp;#160; You can download both jQuery and the jQuery-vsdoc file from the &lt;a target="_blank" href="http://docs.jquery.com/Downloading_jQuery#Download_jQuery"&gt;official download page&lt;/a&gt; on the jQuery.com site:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step1.png" /&gt; &lt;/p&gt;    &lt;p&gt;Save the jquery-vsdoc.js file next to your jquery.js file in your project (and make sure its naming prefix matches the jquery file name):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step2.png" /&gt; &lt;/p&gt;    &lt;p&gt;You can then reference the standard jquery file with an html &amp;lt;script/&amp;gt; element like so:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step3.png" /&gt; &lt;/p&gt;    &lt;p&gt;Or alternatively reference it using the &amp;lt;asp:scriptmanager/&amp;gt; control, or by adding a /// &amp;lt;reference/&amp;gt; comment at the top of a standalone .js file.&amp;#160; &lt;/p&gt;    &lt;p&gt;When you do this VS will now look for a -vsdoc.js file in the same directory as the script file you are referencing, and if found will use it for help and intellisense.&amp;#160; The annotated &lt;/p&gt;    &lt;p&gt;For example, we could use jQuery to make a JSON based get request, and get intellisense for the method (hanging off of $.):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step4.png" /&gt; &lt;/p&gt;    &lt;p&gt;As well as help/intellisense for the $.getJSON() method's parameters:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step5.png" /&gt;&amp;#160;&lt;/p&gt;    &lt;p&gt;The intellisense will continue to work if you nest a callback function within the method call.&amp;#160; For example, we might want to iterate over each JSON object returned from the server:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step6.png" /&gt; &lt;/p&gt;    &lt;p&gt;And for each of the items we could execute another nested callback function:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step7.png" /&gt; &lt;/p&gt;    &lt;p&gt;We could use the each callback function to dynamically append a new image to a list (the image src attribute will point to the URL of the returned JSON media image):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step8.png" /&gt; &lt;/p&gt;    &lt;p&gt;And on each dynamically created image we could wire-up a click event handler so that when it is pressed it will disappear via an animation:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step10.png" /&gt; &lt;/p&gt;    &lt;p&gt;Notice how the jQuery intellisense works cleanly at each level of our code.&amp;#160; &lt;/p&gt;    &lt;h3&gt;JavaScript Intellisense Tips and Tricks&lt;/h3&gt;    &lt;p&gt;Jeff King from the Web Tools team &lt;a target="_blank" href="http://blogs.msdn.com/webdevtools/archive/2008/11/18/jscript-intellisense-faq.aspx"&gt;wrote up a great post&lt;/a&gt; earlier this week that answers a number of common questions about how JavaScript intellisense works with VS 2008.&amp;#160; I highly recommend reading it.&lt;/p&gt;    &lt;p&gt;One trick he talks about which I'll show here is a technique you can use when you want to have JavaScript intellisense work within user-controls/partials (.ascx files).&amp;#160; Often you don't want to include a JavaScript library &amp;lt;script src=&amp;quot;&amp;quot;/&amp;gt; reference&amp;#160; within these files, and instead have this live on the master page or content page the user control is used within.&amp;#160; The problem of course when you do this is that by default VS has no way of knowing that this script is available within the user control - and so won't provide intellisense of it for you.&lt;/p&gt;    &lt;p&gt;One way you can enable this is by adding the &amp;lt;script src=&amp;quot;&amp;quot;/&amp;gt; element to your user control, but then surround it with a server-side &amp;lt;% if %&amp;gt; block that always evaluates to false at runtime:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquerynov/step11.png" /&gt; &lt;/p&gt;    &lt;p&gt;At runtime ASP.NET will never render this script tag (since it is wrapped in an if block that is always false).&amp;#160; However, VS &lt;em&gt;will&lt;/em&gt; evaluate the &amp;lt;script/&amp;gt; tag and provide intellisense for it within the user-control.&amp;#160; A useful technique to use for scenarios like the user control one.&amp;#160; Jeff has even more details in his &lt;a target="_blank" href="http://blogs.msdn.com/webdevtools/archive/2008/11/18/jscript-intellisense-faq.aspx"&gt;FAQ post&lt;/a&gt; as well as his &lt;a target="_blank" href="http://blogs.msdn.com/webdevtools/archive/2008/10/28/rich-intellisense-for-jquery.aspx"&gt;original jQuery intellisense post&lt;/a&gt;.&amp;#160; Rick Strahl also has a good post about using jQuery intellisense &lt;a target="_blank" href="http://www.west-wind.com/Weblog/posts/536756.aspx"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;h3&gt;More Information&lt;/h3&gt;    &lt;p&gt;To learn more about jQuery, I recommend watching Stephen Walther's &lt;a target="_blank" href="http://channel9.msdn.com/pdc2008/PC31/"&gt;ASP.NET and jQuery&lt;/a&gt; PDC talk. &lt;a target="_blank" href="http://weblogs.asp.net/stephenwalther/archive/2008/10/29/jquery-and-asp-net-ajax-demo-code.aspx"&gt;Click here&lt;/a&gt; to download his code samples and powerpoint presentation.&lt;/p&gt;    &lt;p&gt;Rick Strahl also has a really nice &lt;a href="http://www.west-wind.com/presentations/jQuery/default.aspx"&gt;Introduction to jQuery&lt;/a&gt; article that talks about using jQuery with ASP.NET.&amp;#160; Karl Seguin has two nice jQuery primer posts &lt;a target="_blank" href="http://dotnetslackers.com/articles/ajax/JQuery-Primer-Part-1.aspx"&gt;here&lt;/a&gt; and &lt;a target="_blank" href="http://dotnetslackers.com/articles/ajax/JQuery-Primer-Part-2.aspx"&gt;here&lt;/a&gt; that provide shorter overviews of some of the basics of how to use jQuery.&amp;#160; &lt;/p&gt;    &lt;p&gt;I also highly recommend the &lt;a target="_blank" href="http://www.amazon.com/gp/product/1933988355/102-4745100-5076967?ie=UTF8&amp;amp;tag=scoblo04-20&amp;amp;linkCode=xm2&amp;amp;camp=1789&amp;amp;creativeASIN=1933988355"&gt;jQuery in Action&lt;/a&gt; book.&lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6749212" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Atlas" scheme="http://weblogs.asp.net/scottgu/archive/tags/Atlas/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /></entry><entry><title>Update on Silverlight 2 - and a glimpse of Silverlight 3</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/11/16/update-on-silverlight-2-and-a-glimpse-of-silverlight-3.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/11/16/update-on-silverlight-2-and-a-glimpse-of-silverlight-3.aspx</id><published>2008-11-17T07:01:49Z</published><updated>2008-11-17T07:01:49Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;We &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/10/14/silverlight-2-released.aspx"&gt;shipped Silverlight 2&lt;/a&gt; last month.&amp;#160; Over the last 4 weeks, the final release of Silverlight 2 has been downloaded and installed on more than 100 million consumer machines.&amp;#160; It has also recently been published to corporate administrators via the Microsoft SMS and Microsoft Update programs to enable them to automatically deploy across enterprises.&amp;#160; Over 1 in 4 computers on the Internet now have some version of Silverlight installed.&lt;/p&gt;    &lt;p&gt;Silverlight 2 was a major release, and delivered an impressive set of cross-browser, cross-platform functionality for Media and Rich Internet Application experiences.&amp;#160; It has been great watching new sites launch using it.&lt;/p&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Media Experiences&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;Silverlight 2 enables the highest quality video on the web, and delivers it with the lowest TCO of any media platform.&lt;/p&gt;    &lt;p&gt;One of the capabilities built-into Silverlight 2 is its support for &amp;quot;adaptive streaming&amp;quot; - which enables video to be delivered at multiple bitrates (for example: 400Kbits, 800Kbits, 1.5Mbits, 2Mbits) with Silverlight dynamically choosing the optimal bitrate to use depending on the network bandwidth and CPU capability of the client (it can also automatically switch bitrates seamlessly if conditions change later).&amp;#160; &lt;/p&gt;    &lt;p&gt;Silverlight's adaptive streaming support is extensible.&amp;#160; &lt;strong&gt;Move Networks&lt;/strong&gt; (who helped pioneer the concept of adaptive streaming) have already integrated their adaptive streaming solution with Silverlight.&amp;#160; Silverlight 2 and Move were used to stream the &lt;strong&gt;Democratic National Convention&lt;/strong&gt; live on the web this summer.&amp;#160; &lt;/p&gt;    &lt;p&gt;Last month we announced that Microsoft will be adding adaptive streaming support as a free feature of our IIS7 web-server.&amp;#160; IIS Smooth Streaming will provide an integrated way to deliver HD quality adaptive video over the web. Visit &lt;strong&gt;Akamai's&lt;/strong&gt; &lt;a target="_blank" href="http://www.smoothhd.com"&gt;www.smoothhd.com&lt;/a&gt; site to see some awesome examples of Silverlight 2 and IIS Smooth Streaming in action (with adaptive streaming up to 2.5Mbits).&lt;/p&gt;    &lt;p&gt;The &lt;strong&gt;NBC Olympics&lt;/strong&gt; site used Silverlight 2 to serve more than 3,500 hours of live and on-demand Olympic coverage to over 60 million unique visitors this summer.&amp;#160; Visitors to the site watched an &lt;em&gt;average&lt;/em&gt; of 27 minutes of video - which is stunningly high for online video.&amp;#160; The site used the new Silverlight adaptive streaming capability to support 1.5Mbit bitrates - which helped deliver an awesome video experience: &lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slnovpost/nbc.png" /&gt; &lt;/p&gt;    &lt;p&gt;In addition to powering the Olympics experience in the US, Silverlight was also used in France (by &lt;strong&gt;FranceTV&lt;/strong&gt;), the Netherlands (by &lt;strong&gt;NOS&lt;/strong&gt;), Russia (by &lt;strong&gt;Sportbox.ru&lt;/strong&gt;) and Italy (by &lt;strong&gt;RAI&lt;/strong&gt;).&amp;#160; In addition to video quality, a big reason behind these broadcasters decision to use Silverlight was the TCO and streaming cost difference Silverlight provided.&amp;#160; In the August 2008 edition of Web Designer Magazine (a Dutch publication) a NOS representative reported that they were able to serve 100,000 concurrent users using Silverlight and 40 Windows Media Servers, whereas it would have required 270 servers if they had used Flash Media Servers.&lt;/p&gt;    &lt;p&gt;Over the last month we've seen several major new deployments of Silverlight for media scenarios.&amp;#160; For example: &lt;strong&gt;CBS College Sports&lt;/strong&gt; is now using Silverlight to stream NCAA events from its 170 partner colleges and university.&amp;#160; &lt;strong&gt;Blockbuster&lt;/strong&gt; is replacing Flash with Silverlight for its MovieLink application. And &lt;strong&gt;Netflix &lt;/strong&gt;two weeks ago rolled out its new Instant Watch service using Silverlight.&amp;#160; &lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slnovpost/netflix.png" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Rich Internet Applications (RIA) Experiences&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;Silverlight 2 delivers a cross-browser, cross-platform subset of the .NET Framework, and enables developers to build Rich Internet Applications.&amp;#160; &lt;/p&gt;    &lt;p&gt;Developers can use either VS 2008 or the free Visual Web Developer 2008 Express to open and edit Silverlight 2 projects, and get a powerful code-focused .NET development environment.&amp;#160; Designers can use Expression Blend 2 SP1 to open and edit the same projects and use a creative tool to sculpt and create rich user experiences.&amp;#160; I recently blogged about the nice developer/designer workflow this enables &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/11/14/styling-a-silverlight-twitter-application-with-expression-blend-2.aspx"&gt;here&lt;/a&gt;.&amp;#160; Two weeks ago at the PDC we also shipped the first release of our &lt;a target="_blank" href="http://blogs.msdn.com/sburke/archive/2008/10/28/silverlight-toolkit-now-available-for-download.aspx"&gt;Silverlight Toolkit&lt;/a&gt; - an open source project which adds additional runtime controls and components for Silverlight 2 development (including new charting controls).&amp;#160; &lt;/p&gt;    &lt;p&gt;A number of customers have already launched Internet-facing Silverlight 2 RIA solutions (including &lt;strong&gt;Renault&lt;/strong&gt;, &lt;strong&gt;Hard Rock&lt;/strong&gt; and &lt;strong&gt;Toyota&lt;/strong&gt;). For example, last month&lt;strong&gt; AOL&lt;/strong&gt; launched their new &lt;a target="_blank" href="http://beta.aol.com/projects.php?project=webmailria&amp;amp;loc=0"&gt;AOL Mail&lt;/a&gt; RIA using Silverlight 2:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slnovpost/aol.png" /&gt; &lt;/p&gt;    &lt;p&gt;Silverlight 2 is also now being used in a variety of enterprise solutions.&amp;#160; For example, &lt;strong&gt;K2&lt;/strong&gt; recently launched their new &lt;a target="_blank" href="http://www.k2.com/en/displaycontent.aspx?id=973"&gt;Blackpoint workflow management solution&lt;/a&gt; for Microsoft SharePoint using Silverlight:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slnovpost/k2.png" /&gt; &lt;/p&gt;    &lt;p&gt;Microsoft is also deploying new Silverlight based RIA experiences.&amp;#160; The &lt;strong&gt;Windows Live Team's &lt;/strong&gt;new photo application (&lt;a target="_blank" href="http://photos.live.com"&gt;photos.live.com&lt;/a&gt;) and video communications application (&lt;a target="_blank" href="http://videomessages.live.com"&gt;videomessages.live.com&lt;/a&gt;) are both built with Silverlight 2, as is the new &lt;a target="_blank" href="http://newmsntoolbar.com"&gt;MSN Toolbar&lt;/a&gt; (it uses Silverlight to customize the browser frame).&amp;#160; Last month at the PDC we also gave a first sneak-peak demo of some of the new Office 14 Web Companion RIA applications which use Silverlight. &lt;/p&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Silverlight 3&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;Next year we will ship our next major Silverlight release -- Silverlight 3.&amp;#160; &lt;/p&gt;    &lt;p&gt;Silverlight 3 will include major media enhancements (including H.264 video support), major graphics improvements (including 3D support and GPU hardware acceleration), as well as major application development improvements (including richer data-binding support and additional controls).&amp;#160; Note these are just a small sampling of the improvements - we have plenty of additional cool features we are going to keep up our sleeves a little longer. ;-)&lt;/p&gt;    &lt;p&gt;Next year Visual Studio and Visual Web Developer Express will also support a fully editable and interactive designer for Silverlight, and add tool support for data-binding:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slnovpost/vs.png" /&gt; &lt;/p&gt;    &lt;p&gt;We are pretty excited about where Silverlight is today, as well as the roadmap in place over the next year.&amp;#160; It has been really great to watch customers go live with cool solutions.&amp;#160; The next year is going to be a fun one as more and more sites launch with Silverlight 2, and as even bigger scenarios are enabled with Silverlight 3 and beyond. :-)&lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6743135" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="Silverlight" scheme="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" /></entry><entry><title>Styling a Silverlight Twitter Application with Expression Blend 2</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/11/14/styling-a-silverlight-twitter-application-with-expression-blend-2.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/11/14/styling-a-silverlight-twitter-application-with-expression-blend-2.aspx</id><published>2008-11-14T10:15:09Z</published><updated>2008-11-14T10:15:09Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Silverlight 2 provides a rich platform for building cross-browser/cross-platform RIA applications.&amp;#160; &lt;/p&gt;    &lt;p&gt;One of the things that makes Silverlight so powerful is the ease with which developers and designers can collaborate together on projects.&amp;#160; Developers can use Visual Studio to open and edit Silverlight 2 projects and get a powerful code-focused .NET development environment, and designers can use Expression Blend 2 SP1 to open and edit the exact same project and use a creative tool to sculpt and create optimal user experience designs.&lt;/p&gt;    &lt;p&gt;The WPF UI framework shipped in Silverlight further enables a great designer/developer workflow by supporting concepts like layout management, controls, styles, templates, and resources - which help avoid scenarios where designers and developers end up tripping over each other when integrating functionality, behavior and expressive design.&lt;/p&gt;    &lt;p&gt;&lt;strong&gt;Silverlight 2 Twitter Sample&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;Last month I posted an &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-2-end-to-end-tutorial-building-a-digg-search-client.aspx"&gt;in-depth blog tutorial&lt;/a&gt; on how to build a Silverlight 2 Digg application which you can read &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-2-end-to-end-tutorial-building-a-digg-search-client.aspx"&gt;here&lt;/a&gt;.&amp;#160; This tutorial was aimed primarily at developers, and focused on introducing the fundamental programming concepts involved when building a Silverlight 2 application.&amp;#160; &lt;/p&gt;    &lt;p&gt;Today Celso Gomes and Peter Blois posted a &lt;a target="_blank" href="http://channel9.msdn.com/posts/Dan/Celso-Gomes-Styling-a-Silverlight-based-Twitter-application-with-Expression-Blend-2/"&gt;cool 10 minute video tutorial&lt;/a&gt; that shows off using Expression Blend to stylize a Silverlight 2 Twitter Messenger application.&amp;#160; You can watch the video &lt;a target="_blank" href="http://channel9.msdn.com/posts/Dan/Celso-Gomes-Styling-a-Silverlight-based-Twitter-application-with-Expression-Blend-2/"&gt;here&lt;/a&gt;.&amp;#160; You can download the source code for the completed Silverlight Twitter application &lt;a target="_blank" href="http://blogs.msdn.com/expression/attachment/9067153.ashx"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;The video does a nice job demonstrating how designers can re-style a Silverlight application without having to mess with the code behind it.&amp;#160; In the process it shows some of the power and capability that Expression Blend 2 provides to build really rich user experiences.&amp;#160; Celso starts with a developer version of the application, and then customizes and sculpts the UI to have a fun twitter character theme:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/twitter/screen01.png" width="373" height="299" /&gt; &lt;img src="http://www.scottgu.com/blogposts/twitter/screen02.png" width="375" height="301" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;b&gt;The Application Model&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;The Silverlight Twitter client is hosted within an ASP.NET server application that exposes a web service that enables the Silverlight Twitter application to communicate to the Twitter service (since Twitter does not allow direct access from client applications). Communication between the Silverlight client and the ASP.NET web server is done using Windows Communication Foundation (WCF).&lt;/p&gt;    &lt;p&gt;The client application uses a Model-View-Presenter (MVP) pattern (also known as the Model-View-ViewModel pattern) which is commonly used in large WPF applications. Even though this is a fairly simple application they wanted to take advantage of the flexibility that MVP allows and allow room for future growth.&amp;#160; &lt;/p&gt;    &lt;p&gt;Maintaining the separation between the visuals and the application logic also enables designers to make fairly complex visual changes without impacting the basic application flow.&amp;#160; The video goes through some examples of the styling flexibility this architecture facilitates.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;The Styling Process&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;In the video, Celso highlights how Resources can help designers quickly change colors.&amp;#160; A common Brush Resource, for example, can be used to change the color of all the text elements in the application:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/twitter/screen03.png" /&gt; &lt;/p&gt;    &lt;p&gt;Celso shows how easy is to create new User Controls from graphics using Expression Blend 2 SP1 (just select multiple elements in the designer, right-click, and choose the &amp;quot;Make Control&amp;quot; menu option):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/twitter/screen04.png" /&gt; &lt;/p&gt;    &lt;p&gt;And also how to create new states inside this new User Control (using the Visual State Manager feature - which is also now supported with WPF), to animate the bird (fly, blink, etc...)&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/twitter/screen05.png" /&gt; &lt;/p&gt;    &lt;p&gt;Celso also shows how to create animations for each state, changing advanced properties like Key Spline curves, and Repeat Behavior:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/twitter/screen06.png" /&gt; &lt;/p&gt;    &lt;p&gt;He also shows how to create custom buttons from drawings (which can come from XAML or any other design tool like Photoshop or Illustrator). All the states of a Button Control are available out of the box.&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/twitter/screen07.png" /&gt; &lt;/p&gt;    &lt;p&gt;Expression Blend also enables you to easily change complex controls like List Boxes. Designers have access to all Styles, Templates, and states - and can completely customize all the parts of a List Box without having to write any code:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/twitter/screen08.png" /&gt; &lt;/p&gt;    &lt;p&gt;You can &lt;a target="_blank" href="http://channel9.msdn.com/posts/Dan/Celso-Gomes-Styling-a-Silverlight-based-Twitter-application-with-Expression-Blend-2/"&gt;watch the video&lt;/a&gt; and &lt;a target="_blank" href="http://blogs.msdn.com/expression/attachment/9067153.ashx"&gt;download the code&lt;/a&gt; to check out the above Twitter application.&lt;/p&gt;    &lt;p&gt;To learn more about Expression Blend, I also recommend watching the &lt;a target="_blank" href="http://channel9.msdn.com/pdc2008/PC47/"&gt;Expression Blend: Tips and Tricks&lt;/a&gt; presentation from the PDC conference two weeks ago.&lt;/p&gt;    &lt;p&gt;Update: Also check out Shawn Wildermuth's &lt;a target="_blank" href="http://wildermuth.com/dls/Dirty_Little_Secrets_Episode_2"&gt;Deep Control Skinning with Styles&lt;/a&gt; webcast.&lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt;    &lt;p&gt;&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6734669" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="WPF/E" scheme="http://weblogs.asp.net/scottgu/archive/tags/WPF_2F00_E/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="Silverlight" scheme="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" /></entry><entry><title>Nov 6th Links: ASP.NET, ASP.NET AJAX, jQuery, ASP.NET MVC, Silverlight and WPF</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/11/06/nov-6th-links-asp-net-asp-net-ajax-jquery-asp-net-mvc-silverlight-and-wpf.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/11/06/nov-6th-links-asp-net-asp-net-ajax-jquery-asp-net-mvc-silverlight-and-wpf.aspx</id><published>2008-11-06T08:34:18Z</published><updated>2008-11-06T08:34:18Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Last week was our big PDC conference, and I've been busy catching up back at work this week.&amp;#160; I'm hoping to publish a bunch of new posts soon (including some on the PDC announcements we made).&amp;#160; Until then, here is the latest in my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/10/22/october-22nd-links-asp-net-visual-studio-wpf-and-silverlight.aspx"&gt;link-listing series&lt;/a&gt;.&amp;#160; Also check out my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/ASP.NET-2.0-Tips_2C00_-Tricks_2C00_-Recipes-and-Gotchas.aspx"&gt;ASP.NET Tips, Tricks and Tutorials page&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-posts.aspx"&gt;Silverlight Tutorials page&lt;/a&gt; for links to popular articles I've done myself in the past.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.asp.net/learn/3.5-SP1/"&gt;6 New ASP.NET Dynamic Data Videos&lt;/a&gt;: Joe Stagner has just published 6 new videos on the &lt;a target="_blank" href="http://www.asp.net"&gt;www.asp.net&lt;/a&gt; site that cover how to use the cool new ASP.NET Dynamic Data functionality introduced with .NET 3.5 SP1.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/webdevtools/archive/2008/10/31/downloadable-hotfix-incorrect-c-compilation-errors-for-asp-net-code-behind-files-in-sp1.aspx"&gt;Download Hotfix: False C# Compilation Errors for ASP.NET Code Behind Files with VS 2008 SP1&lt;/a&gt;: The C# team added support for live semantic errors with background compilation in VS 2008 SP1.&amp;#160; There were a few cases where this caused false errors to be shown with ASP.NET Web site projects.&amp;#160; You can fix these either by disabling live semantic errors (tools-&amp;gt;options allows you to disable this), or by downloading a recent hotfix patch which is now public.&amp;#160; Omar Khan has a useful blog post with more details on it. &lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://aspnet.4guysfromrolla.com/articles/102208-1.aspx"&gt;Examining ASP.NET 2.0's Membership, Roles and Profile - Part 13&lt;/a&gt;: Scott Mitchell has another post in his great series of ASP.NET security articles.&amp;#160; This one covers how to create a login screen that allows admin users to log in as another user in the user database.&amp;#160; For more on ASP.NET security, also check out Joe Stagner's recent &lt;a target="_blank" href="http://www.asp.net/learn/security-videos/"&gt;ASP.NET Security Videos&lt;/a&gt;.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.developerfusion.com/article/8307/aspnet-patterns-every-developer-should-know/"&gt;ASP.NET Patterns Developers Should Know&lt;/a&gt;: Alex Homer from the Patterns and Practices (PAG) team at Microsoft has a nice article that introduces a number of common design patterns (MVC and MVP, Repository, Singleton, etc) and how you can apply them within ASP.NET applications.&amp;#160; If you are interested in learning more about pattern based development I also highly recommend reading the &lt;a target="_blank" href="http://www.amazon.com/gp/product/0596007124?ie=UTF8&amp;amp;tag=scoblo04-20&amp;amp;linkCode=xm2&amp;amp;camp=1789&amp;amp;creativeASIN=0596007124"&gt;Head First Design Patterns&lt;/a&gt; book (which has more than 250 positive reviews on Amazon).&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET AJAX and jQuery&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/webdevtools/archive/2008/10/28/rich-intellisense-for-jquery.aspx"&gt;Rich jQuery Intellisense with VS 2008&lt;/a&gt;: Last week we published a new jQuery intellisense file for VS 2008 that delivers super-rich and accurate javascript intellisense when using jQuery.&amp;#160; Jeff's article describes how to download and start using it today.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://channel9.msdn.com/pdc2008/PC31/"&gt;ASP.NET and jQuery&lt;/a&gt;: Stephen Walther delivered an awesome talk on using jQuery with ASP.NET at the PDC conference last week.&amp;#160; You can now watch it online for free.&amp;#160; &lt;a target="_blank" href="http://weblogs.asp.net/stephenwalther/archive/2008/10/29/jquery-and-asp-net-ajax-demo-code.aspx"&gt;Click here&lt;/a&gt; to download his code samples and powerpoint presentation.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://dotnetslackers.com/articles/ajax/JQuery-Primer-Part-1.aspx"&gt;jQuery Primer Part 1&lt;/a&gt; and &lt;a target="_blank" href="http://dotnetslackers.com/articles/ajax/JQuery-Primer-Part-2.aspx"&gt;Part 2&lt;/a&gt;: Karl Seguin has two nice posts that provide a quick overview of some of the basics of how to use jQuery.&amp;#160; Also check out Rick Strahl's longer &lt;a target="_blank" href="http://www.west-wind.com/presentations/jQuery/default.aspx"&gt;Introduction to jQuery&lt;/a&gt; article (which I've previously linked to) for a longer jQuery tutorial.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/11/03/pdc-2008-asp-net-ajax-futures-talk-available-online.aspx"&gt;ASP.NET AJAX Futures:&lt;/a&gt; Bertrand Le Roy delivered an awesome talk on the new ASP.NET AJAX features coming soon at the PDC conference last week.&amp;#160; You can now watch it online for free as well as download his slides and code-samples.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/jimwang/archive/2008/11/05/working-with-ado-net-data-services-in-ajax.aspx"&gt;Working with ADO.NET Data Services with ASP.NET AJAX&lt;/a&gt;: Jim Wang has a nice blog post that demonstrates how to take advantage of the new ASP.NET AJAX features (client templating, ADO.NET data service support, etc) to build a data driven AJAX solution.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET MVC&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://haacked.com/archive/2008/11/03/bin-deploy-aspnetmvc.aspx"&gt;Bin Deployable ASP.NET MVC:&lt;/a&gt; Phil Haack has a useful blog post that describes step-by-step how to enable \bin directory deployment of ASP.NET MVC.&amp;#160; This enables you to deploy ASP.NET MVC based applications on remote hosting servers that do not have ASP.NET MVC already installed (which means you don't need them to run any setup or do extra steps for your application to work).&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://haacked.com/archive/2008/11/05/donut-caching-in-asp.net-mvc.aspx"&gt;Donut Caching in ASP.NET MVC&lt;/a&gt;: Phil Haack has a great blog post that talks about how to implement substitution output caching with ASP.NET MVC.&amp;#160; I coined the name &amp;quot;donut caching&amp;quot; for this technique with &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2006/11/28/tip-trick-implement-donut-caching-with-the-asp-net-2-0-output-cache-substitution-feature.aspx"&gt;a previous blog post&lt;/a&gt; I did on using substitution output caching with ASP.NET Web Forms.&amp;#160; Phil covers it for ASP.NET MVC.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://haacked.com/archive/2008/11/04/areas-in-aspnetmvc.aspx"&gt;Grouping Controllers with ASP.NET MVC&lt;/a&gt;: Phil Haack has another great post that covers how to segment a ASP.NET MVC application into multiple &amp;quot;areas&amp;quot; or &amp;quot;modules&amp;quot; - which can optionally be developed in separate projects and merged into one large master application.&amp;#160; Also check out Steve Sanderson's &lt;a target="_blank" href="http://blog.codeville.net/2008/11/05/app-areas-in-aspnet-mvc-take-2/"&gt;follow-up post&lt;/a&gt; with more ideas on this topic.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;Silverlight and WPF&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/sburke/archive/2008/10/28/silverlight-toolkit-now-available-for-download.aspx"&gt;Silverlight Toolkit Released&lt;/a&gt;: Last week at PDC we shipped the first release of the Silverlight Toolkit.&amp;#160; This is a free download that works with Silverlight 2, and delivers a whole slew of awesome controls and features (including new charting controls, new layout managers, treeview, viewbox, and more).&amp;#160; A must-have download for every Silverlight&amp;#160; developer.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.jeff.wilcox.name/2008/11/04/test-framework-source/"&gt;Silverlight Unit Test Framework and Source Released&lt;/a&gt;: Jeff Wilcox shares all the great details about the release of our new Silverlight Unit Testing framework (which includes source that can be modified/reused however you want).&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/jgoldb/archive/2008/09/25/updated-wpfperf-performance-profiling-tools-for-wpf.aspx"&gt;Updated WPF Performance Profiling Tool&lt;/a&gt;: The WPF team recently posted an update to their excellent WPF Performance Profiling Tool.&amp;#160; Definitely something to check out if you are doing WPF development.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://karlshifflett.wordpress.com/2008/10/23/wpf-silverlight-lob-form-layout-searching-for-a-better-solution/"&gt;WPF &amp;amp; Silverlight LOB Form Layout - Searching for a Better Solution&lt;/a&gt;: Karl Shifflett has another great WPF blog post that covers a cool way to perform flexible form layout for LOB scenarios.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6723081" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term="Atlas" scheme="http://weblogs.asp.net/scottgu/archive/tags/Atlas/default.aspx" /><category term="WPF" scheme="http://weblogs.asp.net/scottgu/archive/tags/WPF/default.aspx" /><category term="Silverlight" scheme="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" /><category term="Link Listing" scheme="http://weblogs.asp.net/scottgu/archive/tags/Link+Listing/default.aspx" /><category term="MVC" scheme="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx" /></entry><entry><title>October 22nd Links: ASP.NET, Visual Studio, WPF and Silverlight</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/10/22/october-22nd-links-asp-net-visual-studio-wpf-and-silverlight.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/10/22/october-22nd-links-asp-net-visual-studio-wpf-and-silverlight.aspx</id><published>2008-10-23T04:46:01Z</published><updated>2008-10-23T04:46:01Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Here is the latest in my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/10/10/october-10th-links-asp-net-asp-net-ajax-jquery-iis.aspx"&gt;link-listing series&lt;/a&gt;.&amp;#160; Also check out my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/ASP.NET-2.0-Tips_2C00_-Tricks_2C00_-Recipes-and-Gotchas.aspx"&gt;ASP.NET Tips, Tricks and Tutorials page&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-posts.aspx"&gt;Silverlight Tutorials page&lt;/a&gt; for links to popular articles I've done myself in the past.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/brada/archive/2008/10/19/ajaxworld-talk-building-a-great-ajax-application-from-scratch.aspx"&gt;Building a Great ASP.NET AJAX Application from Scratch&lt;/a&gt;: Brad Abrams has a nice end to end application tutorial that shows off building an ASP.NET AJAX application from scratch. It covers ASP.NET, LINQ, Server and Client-side AJAX, the ASP.NET AJAX Control Toolkit, jQuery and more.&amp;#160; A great end to end read.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/stephenwalther/archive/2008/10/17/a-guide-to-learning-asp-net-mvc-beta-1.aspx"&gt;A Guide to Learning the ASP.NET MVC Beta&lt;/a&gt;: Stephen Walther has a great set of links with some good videos and tutorials you can follow to learn more about the recent ASP.NET MVC beta release.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.hanselman.com/blog/ASPNETMVCAndTheNewIIS7RewriteModule.aspx"&gt;ASP.NET MVC and the new IIS7 URL Rewriting Module&lt;/a&gt;: Scott Hanselman has a great post that shows off using the new IIS7 Rewriitng Module (which is free and very, very cool) to deliver great SEO (search engine optimization) for sites built with ASP.NET and specifically ASP.NET MVC.&amp;#160; &lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://encosia.com/2008/10/19/7-of-my-favorite-jquery-plugins-for-use-with-aspnet/"&gt;7 of my Favorite jQuery plugins for use with ASP.NET&lt;/a&gt;: Dave Ward has a nice blog post that talks about 7 of his favorite jQuery plugins and how he uses them with ASP.NET.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://encosia.com/2008/10/11/using-jquery-to-display-a-modal-updatepanel-confirmation/"&gt;Using jQuery to display a modal ASP.NET UpdatePanel confirmation&lt;/a&gt;: Dave Ward has another nice blog post that talks about how to use jQuery with the ASP.NET AJAX UpdatePanel control.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://xximjasonxx.blogspot.com/2008/10/using-jquery-load-with-mvc-framework.html"&gt;Using jQuery Load with the ASP.NET MVC Framework&lt;/a&gt;: Jason has a nice simple sample that demonstrates how to use jQuery to load an ASP.NET MVC view remotely and populate a page on the client.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;Visual Studio&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/stephenwalther/archive/2008/10/21/essential-visual-studio-tips-amp-tricks-that-every-developer-should-know.aspx"&gt;Essential Visual Studio Tips &amp;amp; Tricks that Every Developer Should Know&lt;/a&gt;: Stephen Walther has a fantastic article with 11 cool tips and tricks that you should make sure you know and use with Visual Studio.&lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/knom/archive/2008/10/09/a-must-have-tool-vs-2008-snippet-designer.aspx"&gt;VS 2008 Snippet Designer&lt;/a&gt;: A cool utility that enables you to quickly create re-usable Visual Studio snippets.&amp;#160; Very handy for automating common tasks.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;Silverlight and WPF&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://karlshifflett.wordpress.com/xaml-power-toys/"&gt;XAML Power Toys Released for WPF and Silverlight&lt;/a&gt;: Karl Shifflett has released an awesome update to his XAML Power Toys download.&amp;#160; This is a must-have download if you are doing WPF or Silverlight development, and provides a bunch of great wizards and tools that help automating application development.&amp;#160; Very, very cool stuff.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://blogs.msdn.com/jaimer/archive/2008/10/03/announcement-wpf-shader-effects-library-on-codeplex.aspx"&gt;WPF Pixel Shader Effects Library on CodePlex&lt;/a&gt;: .NET 3.5 SP1 added Pixel Shader support to WPF - which enables you to add cool DirectX optimized visual effects to any WPF control or surface.&amp;#160; This article from Jamie points to a nice new CodePlex project that is available that delivers a bunch of pre-built effects you can use.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://timheuer.com/blog/archive/2008/10/06/silverlight-control-template-gallery-styles.aspx"&gt;Silverlight 2 UI Templates&lt;/a&gt;: Tim Heuer writes about some cool new UI templates available for the recently released Silverlight 2.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://karlshifflett.wordpress.com/2008/10/11/viewing-design-time-data-in-visual-studio-2008-cider-designer-in-wpf-and-silverlight-projects/"&gt;Viewing Design Time Data in VS 2008 WPF and Silverlight Designers&lt;/a&gt;: Karl Shifflett has another nice article that talks about some techniques you can use to see sample data in the VS 2008 WPF and Silverlight designers when building applications.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt;    &lt;p&gt;&lt;/p&gt;    &lt;p&gt;&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6698875" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="WPF" scheme="http://weblogs.asp.net/scottgu/archive/tags/WPF/default.aspx" /><category term="Silverlight" scheme="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" /><category term="Link Listing" scheme="http://weblogs.asp.net/scottgu/archive/tags/Link+Listing/default.aspx" /></entry><entry><title>ASP.NET MVC Beta Released</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/10/16/asp-net-mvc-beta-released.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/10/16/asp-net-mvc-beta-released.aspx</id><published>2008-10-16T22:30:48Z</published><updated>2008-10-16T22:30:48Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Today we released a beta of the new ASP.NET MVC framework.&amp;#160; &lt;a target="_blank" href="http://www.microsoft.com/downloads/details.aspx?FamilyId=A24D1E00-CD35-4F66-BAA0-2362BDDE0766&amp;amp;displaylang=en"&gt;Click here&lt;/a&gt; to download it.&amp;#160; You can also visit &lt;a target="_blank" href="http://www.asp.net/mvc"&gt;www.asp.net/mvc&lt;/a&gt; to explore &lt;a target="_blank" href="http://www.asp.net/learn/mvc/"&gt;tutorials&lt;/a&gt;, &lt;a target="_blank" href="http://quickstarts.asp.net/previews/mvc/"&gt;quickstarts&lt;/a&gt;, and &lt;a target="_blank" href="http://www.asp.net/learn/mvc-videos/"&gt;videos&lt;/a&gt; to learn more. &lt;/p&gt;    &lt;p&gt;The ASP.NET MVC Beta works with both .NET 3.5 and .NET 3.5 SP1, and supports both VS 2008 and Visual Web Developer 2008 Express SP1 (which is free - and now supports class libraries and web application project types).&lt;/p&gt;    &lt;p&gt;Today's ASP.NET MVC Beta release comes with an explicit &amp;quot;go-live&amp;quot; license that allows you to deploy it in production environments.&amp;#160; The previous preview releases also allowed go-live deployments, but did so by not denying permission to deploy as opposed to explicitly granting it (which was a common source of confusion).&amp;#160; Today's release is clearer about this in the license.&lt;/p&gt;    &lt;p&gt;The beta release is getting close to V1 feature complete, although there are still a few more features that will be added before the final &amp;quot;V1&amp;quot; release (including several VS tooling enhancements).&amp;#160; The team decided to call this release a &amp;quot;beta&amp;quot;, though, because the quality and testing of it is higher than the previous previews (a lot of bug fixes and performance tuning work went into it), and they feel that the core features that are in it are now &amp;quot;baked enough&amp;quot; that there won't be major changes from this release to the final product.&lt;/p&gt;    &lt;p&gt;This post contains a quick summary of some of the new features and changes in this build compared to the previous &amp;quot;Preview 5&amp;quot; release:&amp;#160; &lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a href="#one"&gt;New &amp;quot;Add View&amp;quot; Menu in Visual Studio&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#two"&gt;New \Scripts directory and jQuery Support&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#three"&gt;Built-in Model Binder Support for Complex Types&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#four"&gt;Refactored Model Binder Infrastructure&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#five"&gt;Strongly Typed UpdateModel and TryUpdateModel WhiteList Filtering&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#six"&gt;Improved Unit Testing of UpdateModel and TryUpdateModel Scenarios&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#seven"&gt;Strongly Typed [AcceptVerbs] attribute&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#eight"&gt;Better Validation Error Messages&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#nine"&gt;HTML Helper Cleanup and Refactoring&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#twelve"&gt;Silverlight / ASP.NET MVC Project Integration&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#ten"&gt;ASP.NET MVC Futures Assembly&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a href="#eleven"&gt;\Bin and GAC Assembly Deployment&lt;/a&gt; &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;I am also planning to publish a few end to end tutorials in the weeks ahead that explain ASP.NET MVC concepts in more depth for folks who have not looked at it before, and who want a &amp;quot;from the beginning&amp;quot; set of tutorials on how to get started.&lt;/p&gt;   &lt;a name="one"&gt;&lt;/a&gt;    &lt;h3&gt;&lt;u&gt;New &amp;quot;Add View&amp;quot; Menu in Visual Studio&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;With previous ASP.NET MVC preview releases you had to manually add views through the Project-&amp;gt;Add New Item dialog in VS, and creating and wiring up everything required several manual steps (making sure the directory/file structure is right, going into the code-behind file to specify the strongly typed ViewData model type, etc).&lt;/p&gt;    &lt;p&gt;Today's beta makes the steps much easier.&amp;#160; You can now just move your source editor cursor to be within a Controller action method in the source editor, and then right-click and select a new &amp;quot;Add View&amp;quot; context menu item (alternatively you can type the Ctrl-M Ctrl-V keyboard shortcut to invoke this without having to take your hands off the keyboard):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step1.png" /&gt; &lt;/p&gt;    &lt;p&gt;This will bring up a new &amp;quot;Add View&amp;quot; dialog that allows you to specify the name of the view you want to create, its master page, and optionally its strongly typed ViewData &amp;quot;Model&amp;quot; type:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step2.png" /&gt;&amp;#160;&lt;/p&gt;    &lt;p&gt;Visual Studio will automatically pre-populate the view name based on the action method your cursor is within (you can then override this if you want).&amp;#160; For example, if our cursor had been within an &amp;quot;Edit&amp;quot; action method when we selected &amp;quot;add view&amp;quot; it would have pre-populated the view name textbox with &amp;quot;Edit&amp;quot; instead of &amp;quot;Browse&amp;quot;.&lt;/p&gt;    &lt;p&gt;The strongly typed ViewData &amp;quot;model&amp;quot; for a view can be selected from an editable ComboBox that lists all classes in (or referenced) from the MVC project:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step3.png" /&gt; &lt;/p&gt;    &lt;p&gt;You can either select a type from the list, or manually type one in the ComboBox.&amp;#160; You can also optionally pick an initial type from the list and then tweak it.&amp;#160; For example, we could select the &amp;quot;Product&amp;quot; class from the list and then use the ComboBox editing support to wrap it as an IEnumerable&amp;lt;Product&amp;gt; - meaning a sequence of products:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step4.png" /&gt; &lt;/p&gt;    &lt;p&gt;When we click the &amp;quot;Add&amp;quot; button, Visual Studio will automatically create the appropriate view directory structure, and add a strongly typed view with the right name and base class to our project.&amp;#160; For example, if I followed the steps above it would create a new \Views\Products directory for me (since my controller class name is &amp;quot;ProductsController&amp;quot;) and add the strongly-typed &amp;quot;Browse.aspx&amp;quot; view to it (which derives from ViewPage&amp;lt;IEnumerable&amp;lt;Product&amp;gt;&amp;gt; - since that was the model type we indicated in the dialog above):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step5.png" /&gt; &lt;/p&gt;    &lt;p&gt;The newly created view will automatically be opened for us in the IDE.&amp;#160; We can then implement our view with full intellisense (tip: make sure to do a build immediately after creating the view to ensure that intellisense shows up for your strongly typed model):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step6.png" /&gt; &lt;/p&gt;    &lt;p&gt;And at runtime we will now have an SEO optimized product browsing page built with ASP.NET MVC:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step7.png" /&gt; &lt;/p&gt;    &lt;p&gt;Note: The view file created by Add-View with this beta release is empty.&amp;#160; For the final release we are hoping to add some &amp;quot;scaffolding&amp;quot; features to the Add-View dialog that will allow you to optionally specify that you want to automatically create an HTML list/details view or edit/insert form based on the strongly-typed model specified in the add-view dialog (you can then start with this initial html view and tweak it however you want).&amp;#160; In the future we will also integrate ASP.NET Dynamic Data with MVC to support even richer scaffolding options.&lt;/p&gt;   &lt;a name="two"&gt;&lt;/a&gt;    &lt;h3&gt;&lt;u&gt;New \Scripts directory and jQuery Support&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;The project template that ships with today's release now adds a new \Scripts directory underneath the project root.&amp;#160; This is now the recommended place to store JavaScript files in your application.&lt;/p&gt;    &lt;p&gt;The ASP.NET MVC Beta now adds both ASP.NET AJAX and jQuery libraries to this folder:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step8.png" /&gt; &lt;/p&gt;    &lt;p&gt;The jQuery files are the standard jQuery libraries, and are licensed under the MIT source license (read my previous &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/09/28/jquery-and-microsoft.aspx"&gt;jQuery and Microsoft&lt;/a&gt; post for details).&lt;/p&gt;    &lt;p&gt;With the SP1 updates of VS 2008 or Visual Web Developer 2008 Express, you will get basic JavaScript intellisense when using the above jQuery files.&amp;#160; We will be shipping a jQuery intellisense-annotation file in a few more weeks that provides much better and more complete jQuery intellisense support (including the ability to get intellisense when using multiple chained selectors/commands).&amp;#160; This will be included built-in with the next ASP.NET MVC update.&lt;/p&gt;   &lt;a name="three"&gt;&lt;/a&gt;    &lt;h3&gt;&lt;u&gt;Form Post and Model Binder Improvements&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;One of the biggest areas of feature investment with the ASP.NET MVC &amp;quot;Preview 5&amp;quot; release was the work around form post scenarios.&amp;#160; I did an &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/09/02/asp-net-mvc-preview-5-and-form-posting-scenarios.aspx"&gt;in-depth blog post&lt;/a&gt; about these form post scenario features last month.&lt;/p&gt;    &lt;p&gt;Today's beta includes a number of additional tweaks, enhancements, and refinements in this area.&amp;#160; These include:&lt;/p&gt;    &lt;p&gt;&lt;u&gt;&lt;strong&gt;Built-in Model Binder support for Complex Types&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;Preview 5 introduced the concept of &amp;quot;model binders&amp;quot; - which allow you to map incoming form post values to complex .NET types passed as Controller action method parameters.&amp;#160; Model binders in preview 5 were extensible, and you could create custom binders and register them at multiple levels of the system.&amp;#160; Preview 5 didn't ship with any &amp;quot;pre-built&amp;quot; binders, though, that you could use out of the box (you instead had to build your own).&amp;#160; Today's beta now includes a built-in, pre-registered, binder that can be used to automatically handle standard .NET types - without requiring any additional code or registration.&amp;#160; &lt;/p&gt;    &lt;p&gt;For example, we can now create a &amp;quot;Person&amp;quot; class like below with standard properties:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step9.png" /&gt; &lt;/p&gt;    &lt;p&gt;And then have a Controller action method take it as an parameter argument simply by writing the code below:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step10.png" /&gt; &lt;/p&gt;    &lt;p&gt;Because the argument parameter above is named &amp;quot;person&amp;quot;, the model binder will by default look for form-post values whose key names are in the format &amp;quot;person.Name&amp;quot;, &amp;quot;person.Age&amp;quot;, &amp;quot;person.Email&amp;quot;.&amp;#160; It will then use these values to create and populate a new &amp;quot;Person&amp;quot; object that is passed into our action method. &lt;/p&gt;    &lt;p&gt;Developers can optionally override the default name mapping logic using a new [Bind] attribute introduced with today's beta - and by setting its &amp;quot;Prefix&amp;quot; property.&amp;#160; For example, if we set the prefix property to &amp;quot;PersonToSave&amp;quot;, the binder would instead look for the following form values: &amp;quot;PersonToSave.Name&amp;quot;, &amp;quot;PersonToSave.Age&amp;quot;, and &amp;quot;PersonToSave.Email&amp;quot; when creating the person instance.&amp;#160; You can set the prefix to an empty string to have the binder map &amp;quot;Name&amp;quot;, &amp;quot;Age&amp;quot; and &amp;quot;Email&amp;quot; with no prefix:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step12.png" /&gt; &lt;/p&gt;    &lt;p&gt;The [Bind] attribute allows you to optionally specify an &amp;quot;Included&amp;quot; or &amp;quot;Excluded&amp;quot; property - which can be used to either &amp;quot;whitelist&amp;quot; or &amp;quot;blacklist&amp;quot; properties from being mapped on the objects.&amp;#160; For example, the code below indicates that we want to map only the &amp;quot;Name&amp;quot; and &amp;quot;Age&amp;quot; properties on our person object:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step13.png" /&gt; &lt;/p&gt;    &lt;p&gt;Important safety tip: In general you want to be very careful to make sure you don't allow properties to be mapped that you don't want mapped.&amp;#160; Always use include/exclude anytime you have properties that you don't want to be mapped on an object.&amp;#160; For example: assuming there was a &amp;quot;Salary&amp;quot; property on our Person object - we would not want to map it unless we explicitly wanted an end-user to be able to set it.&amp;#160; You want to be explicit about not mapping unwanted properties like this to prevent a hacker from trying to fake out a form request and attempting to submit additional property information not editable in the UI.&lt;/p&gt;   &lt;a name="four"&gt;&lt;/a&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Refactored Model Binder Infrastructure&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;The model binder system has been refactored significantly for the beta.&amp;#160; You can now re-use and plug-in functionality in a much more granular fashion when building your own custom model binders.&lt;/p&gt;    &lt;p&gt;Model binders are also now used by the UpdateModel and TryUpdateModel methods - allowing you to write one binder and re-use it everywhere any form value is handled inside ASP.NET MVC.&lt;/p&gt;   &lt;a name="five"&gt;&lt;/a&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Improved UpdateModel and TryUpdateModel methods&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;The UpdateModel and TryUpdateModel methods now support several new options and overloads (including richer whitelist and blacklist options).&amp;#160; &lt;/p&gt;    &lt;p&gt;It also now optionally supports the ability to just call &amp;quot;UpdateModel&amp;quot; to populate an instance with the default binding rules (with preview 5 you always had to supply a whitelist - and several people asked for an option to just map all):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step14.png" /&gt; &lt;/p&gt;    &lt;p&gt;Another new feature in today's beta is the ability to define a strongly-typed whitelist filter that you use with UpdateModel/TryUpdateModel.&amp;#160; You can do this by defining an interface with the subset of bindable properties that you want to map.&amp;#160; For example, below I'm defining a &amp;quot;IPersonFormBindable&amp;quot; interface that only has three properties (and does not have the salary property):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step15.png" /&gt; &lt;/p&gt;    &lt;p&gt;We could then indicate that we want to use this contract to limit which properties are mapped using code like below:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step16.png" /&gt; &lt;/p&gt;    &lt;p&gt;This will ensure that only those properties defined on the IPersonFormBindable interface are mapped - and that the Salary one is not mapped.&lt;/p&gt;   &lt;a name="six"&gt;&lt;/a&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Improved Unit Testing of UpdateModel and TryUpdateModel Scenarios&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;With Preview 5 you had to use mocking in order to unit test form post scenarios that used the UpdateModel or TryUpdateModel methods.&amp;#160; Today's beta now allows you to unit test all form post scenarios without ever requiring mocking (which enables better friction-free unit testing).&lt;/p&gt;    &lt;p&gt;There is a new IValueProvider interface introduced with today's beta that the model binding infrastructure uses to retrieve values to bind (as opposed to always going against the request object).&amp;#160; The FormCollection class (which is built-into the beta) implements this interface - and you can now explicitly pass an instance of this to UpdateModel/TryUpdateModel to bind its values from.&amp;#160; &lt;/p&gt;    &lt;p&gt;For example: below in the &amp;quot;Save&amp;quot; action method we are binding all incoming form values to a FormCollection (which will be passed in as an argument to the action method).&amp;#160; I can then pass this form collection to the UpdateModel call and have it map the values onto the person model object using this parameter:&amp;#160; &lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step17.png" /&gt; &lt;/p&gt;    &lt;p&gt;We could then unit test a successful form post scenario for the above action method using the code below (notice how we don't need to mock anything - instead we can just create a formcollection, populate it, and pass it as a parameter):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step18.png" /&gt; &lt;/p&gt;    &lt;p&gt;We could then unit test an unsuccessful form post (which fails because of invalid input for the age value) using the code below.&amp;#160; Notice how we are verifying that the edit form is redisplayed (so that users can correct their problem) in a form-post failure scenario: &lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step19.png" /&gt; &lt;/p&gt;    &lt;p&gt;We did not have to mock anything to unit test both of the above form submission scenarios.&lt;/p&gt;   &lt;a name="seven"&gt;&lt;/a&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Strongly Typed [AcceptVerbs] attribute&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;ASP.NET MVC Preview 5 introduced a new [AcceptVerbs] attribute that you could use to indicate which HTTP verbs an action method supported.&amp;#160; &lt;/p&gt;    &lt;p&gt;In preview 5 you always specified verbs using strings.&amp;#160; We still support this with the beta, but have also added support for common verbs to be specified using a strongly-typed enum mask.&amp;#160; For example:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step20.png" /&gt; &lt;/p&gt;    &lt;p&gt;Today's beta release also no longer requires that you specify [AcceptVerbs] on both actions in scenarios like above.&amp;#160; By default ASP.NET MVC now looks for an action method that explicitly supports the incoming http verb - and if one is not found will use the action method that doesn't have an explicit verb specified.&amp;#160; This saves some typing for common GET/POST scenarios (you no longer need to decorate the GET method).&lt;/p&gt;   &lt;a name="eight"&gt;&lt;/a&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Validation Error Messages&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;One of the features that unfortunately did not make it into the beta (but which we will add for the next update) is support so that you can expose custom error validation messages from your model classes (as opposed to customizing them in the Controller like you can do today).&amp;#160; We are currently investigating a few ways to enable this - including adding support for the IDataErrorInfo interface, as well as support for the new Dynamic Data attributes in the System.ComponentModel.DataAnnotations namespace.&lt;/p&gt;    &lt;p&gt;One improvement that did make it into today's beta, though, is that the default validation error messages are now more end-user friendly (which hopefully eliminates the need to define custom validation messages in a lot of cases): &lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step21.png" /&gt; &lt;/p&gt;   &lt;a name="nine"&gt;&lt;/a&gt;    &lt;h3&gt;&lt;u&gt;HTML Helper Cleanup&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Today's beta has some miscellaneous cleanup improvements to the HTML helpers (in general this is a tricky area - since there are so many overload combinations to get right).&amp;#160; &lt;/p&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Html.Form -&amp;gt; Html.BeginForm&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;One of the usability changes made with today's beta was to rename Html.Form() to Html.BeginForm() and to support two modes of using it - one leveraging a using statement, and the other leveraging an explicit Html.EndForm() helper method.&amp;#160; The reason we've moved to support both of these approaches is that we've seen a lot of questions/confusion in the forums around how the using statement works for this scenario (the pattern is unfamiliar to a lot of developers).&amp;#160; &lt;/p&gt;    &lt;p&gt;Below are two examples that demonstrate how we can implement the above create screen scenario (complete with validation error message UI) using the two different form approaches:&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Approach 1: Using Statement with Html.BeginForm():&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;The below approach uses the IDisposable pattern with the using keyword in VB and C# to auto-terminate the &amp;lt;/form&amp;gt;:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step24.png" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;u&gt;Approach 2: Explicit Html.BeginForm() and Html.EndForm():&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;The below approach uses an explicit EndForm() call to close the &amp;lt;/form&amp;gt;:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step23.png" /&gt; &lt;/p&gt;    &lt;p&gt;Developers can use whichever they feel most comfortable with - both approaches logically do the exact same thing.&lt;/p&gt;    &lt;p&gt;&lt;strong&gt;&lt;u&gt;Many HTML Helper Methods Moved to be Extension Methods&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;    &lt;p&gt;One change we made with today's beta was to move many of the Html helper methods to be extension methods that live under the System.Web.Mvc.Html namespace (previously they were just instance methods on the HtmlHelper class).&amp;#160; We did a similar thing with the AJAX helper methods in &amp;quot;Preview 5&amp;quot; (they now live in the System.Web.Mvc.Ajax namespace).&amp;#160; &lt;/p&gt;    &lt;p&gt;These changes don't impact intellisense in the view markup (we by default automatically reference the namespace in the web.config file so it works just like before - although if you are migrating an app from preview 5 you'll need to add the namespace yourself to web.config, read the release notes for steps on how to-do this).&amp;#160; If you have standalone classes/tests that use the helper methods make sure to add the appropriate &amp;quot;using&amp;quot; statement to import them.&lt;/p&gt;    &lt;p&gt;The reason we moved the helper methods to be extension methods instead of instance methods was to provide developers with more flexibility to add/remove/replace our built-in implementations (as well as to give ourselves more flexibility in the future). If you want to override the HTML rendering of a method you can now easily do so - and still keep the same method code/signature in your markup.&lt;/p&gt;   &lt;a name="twelve"&gt;&lt;/a&gt;    &lt;h3&gt;&lt;u&gt;Silverlight / ASP.NET MVC Project Integration&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;When you create a new Silverlight 2 project within Visual Studio or Visual Web Developer 2008 Express (using the &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/10/14/silverlight-2-released.aspx"&gt;recently released Silverlight 2 and VS 2008 Tools for Silverlight download&lt;/a&gt;), you now have the ability to select a ASP.NET Web Site, ASP.NET Web Application Project and now an ASP.NET MVC Project to host it within:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcbeta/step25.png" /&gt; &lt;/p&gt;    &lt;p&gt;When you choose this option, Visual Studio will automatically copy and deploy/update the Silverlight application into the ASP.NET MVC application when you make a change and do a build within the IDE.&amp;#160; This makes it easier to start integrating a .NET based Silverlight front-end (running inside the browser) with an ASP.NET MVC web backend - and opens up some interesting new possibilities.&lt;/p&gt;   &lt;a name="ten"&gt;&lt;/a&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET MVC Futures Assembly&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;For the last several preview releases, ASP.NET MVC features have been split across two assemblies - System.Web.Mvc.dll and Microsoft.Web.Mvc.dll.&amp;#160; The later assembly + namespace contains &amp;quot;futures&amp;quot; features that hadn't yet been committed to ship in the core V1 product.&amp;#160; As features become &amp;quot;committed&amp;quot; we move them from the futures assembly into the core assembly - and also change the namespace (from Microsoft.Web.Mvc to System.Web.Mvc).&amp;#160; &lt;/p&gt;    &lt;p&gt;The previous preview releases automatically shipped and added the &amp;quot;futures&amp;quot; assembly when you did a File-&amp;gt;New ASP.NET MVC project.&amp;#160; Starting with today's beta we are no longer automatically adding this assembly - instead you need to explicitly add it from your project if you want to use it.&amp;#160; The reason for this is so that developers can clearly distinguish those features that will be in the fully supported V1 product (which implies product support and a higher commitment around backwards compatibility), and those that might still evolve in the future (and not be added to the supported product until vnext).&lt;/p&gt;    &lt;p&gt;Important: the futures assembly (along with all the source code in it) will continue to ship and will work with ASP.NET MVC V1.&amp;#160; So if there is a feature in it you really like, you do not have to worry about it disappearing on you (it is still there and you can still use it).&amp;#160; You just now need to explicitly reference the assembly and use it in your project.&amp;#160; &lt;/p&gt;    &lt;p&gt;We plan to ship a version of the ASP.NET MVC Futures assembly that works with the Beta later today.&amp;#160; You will be able to download it &lt;a target="_blank" href="http://go.microsoft.com/fwlink/?LinkID=131314&amp;amp;clcid=0x409"&gt;here&lt;/a&gt;.&lt;/p&gt;   &lt;a name="eleven"&gt;&lt;/a&gt;    &lt;h3&gt;&lt;u&gt;\Bin and GAC Deployment&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;The ASP.NET MVC beta now supports both GAC based deployment (where you install the assembly once for the machine) as well as local \bin based deployment (where you store a copy of the assembly in the application directory).&amp;#160; &lt;/p&gt;    &lt;p&gt;We will use the GAC to enable automatic-servicing updates via Windows Update (where an administrator can automatically patch a machine - like they do with the rest of the .NET Framework today, and not have to update each individual application).&amp;#160; One downside with GAC based deployment, though, is that it can make deploying applications that require a GAC component harder for hosted scenarios - since you typically do not have admin access on the server machine (and you need admin rights to install components in the GAC).&lt;/p&gt;    &lt;p&gt;To make sure hosted scenarios work well (and to ensure that you don't need your hoster to install anything other that ASP.NET 3.5 in order for ASP.NET MVC to work), we will also support the ability to deploy the ASP.NET MVC framework assemblies in the \bin directory of your application.&amp;#160; This will allow you to just xcopy/ftp the application onto the server and have it work (no admin access or setup needs to be run on it).&amp;#160; The one caveat with this is that you'll be responsible for updating the assembly anytime a servicing update comes out - Windows Update can't automatically find all the application directories on a machine to-do this for you.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Today's beta release is a step closer to the final ASP.NET MVC 1.0 product.&amp;#160; While not 100% feature complete, we think the major subsystems are all getting really close to being done, and that the quality level is now pretty good.&lt;/p&gt;    &lt;p&gt;I am going to try and post some more end-to-end tutorials in the coming weeks that show off how to use ASP.NET MVC from the beginning, and then logically progress to richer and richer scenarios.&amp;#160; Included in the list of tutorials will be my infamous AJAX with MVC post that I keep promising to write - but so far haven't (my excuse: the Silverlight 2, ASP.NET MVC, .NET 4.0, VS10, and Windows 7 ship cycles are all happening in parallel on my team - and I've unfortunately been really busy which is the reason for the delay).&lt;/p&gt;    &lt;p&gt;As I always like to make sure I point out: If you don't like the MVC model or don't find it natural to your style of development, you definitely don't have to use it.&amp;#160; It is a totally optional offering - and &lt;u&gt;does not&lt;/u&gt; replace the existing WebForms model.&amp;#160; Both WebForms and MVC will be fully supported and enhanced going forward (ASP.NET WebForms in .NET 4.0 will add richer URL routing features, better HTML css markup support, complete control over the ClientId property, more AJAX features, and more that I'll be blogging about soon).&amp;#160; So if you don't like the MVC option, don't worry, and don't feel like you should or need to use it (you don't).&amp;#160; &lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt;    &lt;p&gt;&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6683377" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="MVC" scheme="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx" /></entry><entry><title>Silverlight 2 Released</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/10/14/silverlight-2-released.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/10/14/silverlight-2-released.aspx</id><published>2008-10-14T10:07:24Z</published><updated>2008-10-14T10:07:24Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Today we shipped the final release of Silverlight 2.&amp;#160; You can download Silverlight 2, as well the Visual Studio 2008 and Expression Blend 2 tool support to target it, &lt;a target="_blank" href="http://silverlight.net/GetStarted/"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Cross Platform / Cross Browser .NET Development&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Silverlight 2 is a cross-platform browser plugin that enables rich media experiences and .NET RIAs (Rich Internet Applications) within the browser.&lt;/p&gt;    &lt;p&gt;Silverlight 2 is small in size (4.6MB) and takes only 4-10 seconds to install on a machine that doesn't already have it.&amp;#160; It &lt;u&gt;does not&lt;/u&gt; require the .NET Framework to be installed on a computer to run - the Silverlight setup download includes everything necessary to play video or run applications.&lt;/p&gt;    &lt;p&gt;Developers can write Silverlight applications using any .NET language (including VB, C#, JavaScript, IronPython and IronRuby).&amp;#160; Silverlight provides a rich set of features for development including:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;u&gt;WPF UI Framework&lt;/u&gt;: Silverlight 2 includes a rich UI framework that makes building rich Web applications much easier.&amp;#160; In includes a powerful graphics and animation engine, as well as rich support for higher-level UI capabilities like controls, layout management, data-binding, styles, and template skinning.&amp;#160; The WPF UI Framework in Silverlight is a compatible subset of the WPF UI Framework features in the full .NET Framework, and enables developers to re-use skills, controls, code and content to build both rich cross browser web applications, as well as rich desktop Windows applications. &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;&lt;u&gt;Rich Controls&lt;/u&gt;: Silverlight 2 includes a rich set of built-in controls that developers and designers can use to quickly build applications.&amp;#160; The Silverlight 2 release includes core form controls (TextBox, CheckBox, RadioButton, ComboBox, etc), built-in layout management panels (StackPanel, Grid, Panel, etc), common functionality controls (Slider, ScrollViewer, Calendar, DatePicker, etc), and data manipulation controls (DataGrid, ListBox, etc).&amp;#160; All Silverlight controls support a rich control templating model, which enables developers and designers to collaborate together to build highly polished solutions. &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;u&gt;Rich Networking Support&lt;/u&gt;: Silverlight 2 includes rich networking support.&amp;#160; It includes out of the box support for calling REST, WS*/SOAP, POX, RSS, and standard HTTP services.&amp;#160; It supports cross domain network access (enabling Silverlight clients to directly access resources and data from resources on the web).&amp;#160; It also includes built-in sockets networking support.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;&lt;u&gt;Rich Base Class Library&lt;/u&gt;: Silverlight 2 includes a rich .NET base class library of functionality (collections, IO, generics, threading, globalization, XML, local storage, etc).&amp;#160; It includes rich APIs that enable HTML DOM/JavaScript integration with .NET code.&amp;#160; It includes LINQ and LINQ to XML library support (enabling easy transformation and querying of data), as well as local data caching and storage support.&amp;#160; The .NET APIs in Silverlight are a compatible subset of the full .NET Framework. &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;&lt;u&gt;Rich Media Support&lt;/u&gt;: Silverlight 2 includes built-in video codecs for playing high definition video, as well as for streaming it over the web (including both live and on-demand support).&amp;#160; Silverlight includes support for adaptively switching video bitrates on the fly based on network conditions (enabling users to avoid seeing the dreaded &amp;quot;buffering...&amp;quot; message), placing and metering ads within video streams, as well as enabling content protection.&amp;#160; &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;The final Silverlight 2 release delivers a tremendous amount of power and flexibility that enables you to really push the boundaries of what can be done in a browser, and enable great end user experiences.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Silverlight Customers&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Over the last few months a number of very high profile sites have successfully launched using the beta releases of Silverlight 2.&amp;#160; &lt;/p&gt;    &lt;p&gt;In August, NBC hosted the Olympics live on nbcolympics.com and served up 1.3 billion page views, 70 million video streams, and 600 million minutes of video content - making it the largest ever media event on the web.&amp;#160; Users visiting the site spent an average of 27 minutes on the site when they watched a video - an unprecedented number for online traffic.&lt;/p&gt;    &lt;p&gt;In August, the Democratic National Convention was streamed live using Silverlight, and broadcast a 2Mbit live video feed of the event and speeches - receiving outstanding feedback from audiences watching it.&lt;/p&gt;    &lt;p&gt;This month a number of other high profile sites are going live with the final release of Silverlight 2.&amp;#160; CBS College Sports Network will be streaming 20,000 hours of live games for 150+ college and university partners.&amp;#160; AOL is launching their new AOL Mail browser version to 60 million users using Silverlight 2.&amp;#160; Blockbuster will be launching their new MovieLink subscription service using Silverlight.&amp;#160; Yahoo! Japan is live today enabling live streaming of Major League Baseball games.&amp;#160; Hard Rock International will be updating their memorabilia site with new features.&amp;#160; And companies like Toyota, HSN and hundreds of others will be live this week as well.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Silverlight Toolkit&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Silverlight 2 ships with dozens of built-in UI controls that can be used to build applications.&amp;#160; Below is a screen-shot of the Silverlight DataGrid, RadioButton, CheckBox and DatePicker controls in the final release: &lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step11.png" /&gt;       &lt;br /&gt;Today we are also announcing the &amp;quot;Silverlight Toolkit&amp;quot; - which will deliver dozens of more controls that you can use with Silverlight 2.&amp;#160; We will continually add new controls to the control pack over the next few months (we expect to ultimately have more than 100 controls total).&amp;#160; The first release of the toolkit will include controls like TreeView, DockPanel, WrapPanel, ViewBox, Expander, NumericUpDown, AutoComplete and more.&amp;#160; All controls will ship with full source, and with a OSI license that allows you to modify and use the source for any purpose.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Interoperability&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Today we are also announcing that Microsoft is partnering with Soyatec to sponsor additional tools for developing Silverlight applications using the cross platform Eclipse development platform.&amp;#160; &lt;a target="_blank" href="http://www.eclipse4sl.org/"&gt;Click here&lt;/a&gt; to learn more about this and download the free Silverlight Eclipse plugin.&amp;#160; &lt;a target="_blank" href="http://blogs.msdn.com/silverlight_plus_java/archive/2008/10/13/eclipse4sl-hello-world-tutorial.aspx"&gt;Click here&lt;/a&gt; for a step-by-step tutorial that walks-through how to use their Eclipse tools today to build a Silverlight 2 application.&amp;#160; &lt;/p&gt;    &lt;p&gt;We are also announcing today that we are releasing the Silverlight XAML vocabulary and schema under the Open Specification Promise (OSP), which enables anyone to create products that read and write XAML for Silverlight.&amp;#160; You can learn more about this announcement &lt;a target="_blank" href="http://blogs.windowsclient.net/rob_relyea/archive/2008/10/14/ms-slxv-silverlight-xaml-vocabulary-2008-specification-v0-9-published.aspx"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Learning Silverlight 2&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;The best way to learn Silverlight 2 is to visit the &lt;a target="_blank" href="http://www.silverlight.net"&gt;www.silverlight.net&lt;/a&gt; web-site.&amp;#160; You can find free online tutorials, videos and training available there.&amp;#160; The site also hosts an online forum system where MVPs and Microsoft Silverlight team members will be able to help answer technical questions.&amp;#160; Also make sure to subscribe to the &lt;a target="_blank" href="http://silverlight.net/blogs/community/rss.aspx"&gt;Silverlight Community RSS Feed&lt;/a&gt;, &lt;a target="_blank" href="http://feeds.feedburner.com/JesseLiberty-SilverlightGeek"&gt;Jesse Liberty's Blog&lt;/a&gt;, and &lt;a target="_blank" href="http://feeds.timheuer.com/timheuer-silverlight"&gt;Tim Heuer's Blog&lt;/a&gt; for a daily dose of great Silverlight content. &lt;/p&gt;    &lt;p&gt;I've recently updated my Digg-client tutorial for the final Silverlight 2 release.&amp;#160; This provides an end to end walkthrough of a Silverlight 2 application, and helps explain the different programming concepts behind it (controls, layout management, networking, data-binding, styles, user controls, control templates, etc).&amp;#160; If you are brand new to Silverlight or WPF development I recommend walking through it to understand the basics:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-2-end-to-end-tutorial-building-a-digg-search-client.aspx"&gt;Part 0: Introduction&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-1-creating-quot-hello-world-quot-with-silverlight-2-and-vs-2008.aspx"&gt;Part 1: Creating &amp;quot;Hello World&amp;quot; with Silverlight 2 and VS 2008&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-2-using-layout-management.aspx"&gt;Part 2: Using Layout Management&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-3-using-networking-to-retrieve-data-and-populate-a-datagrid.aspx"&gt;Part 3: Using Networking to Retrieve Data and Populate a DataGrid&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-4-using-style-elements-to-better-encapsulate-look-and-feel.aspx"&gt;Part 4: Using Style Elements to Better Encapsulate Look and Feel&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-5-using-the-listbox-and-databinding-to-display-list-data.aspx"&gt;Part 5: Using the ListBox and DataBinding to Display List Data&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-6-using-user-controls-to-implement-master-detail-scenarios.aspx"&gt;Part 6: Using User Controls to Implement Master/Details Scenarios&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-7-using-control-templates-to-customize-a-control-s-look-and-feel.aspx"&gt;Part 7: Using Templates to Customize Control Look and Feel&lt;/a&gt; &lt;/li&gt;      &lt;li&gt;&lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-8-creating-a-digg-desktop-application-using-wpf.aspx"&gt;Part 8: Creating a Digg Desktop Version of our Application using WPF&lt;/a&gt; &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;You can develop Silverlight 2 applications using any version of Visual Studio 2008.&amp;#160; Simply install the Silverlight Tools for Visual Studio 2008 download to get Silverlight tooling support within it.&lt;/p&gt;    &lt;p&gt;If you do not have VS 2008, you can alternatively install the free &lt;a target="_blank" href="http://www.microsoft.com/express/download/"&gt;Visual Web Developer 2008 Express SP1 Edition&lt;/a&gt;.&amp;#160; This free tool provides great ASP.NET development tool support, and starting today also now supports Silverlight 2 development.&amp;#160; You can follow all of the steps in my tutorial above using the Visual Web Developer 2008 Express Edition - and get full intellisense, debugging, and deployment support.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Upgrading from the Beta&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;If you have the Beta2 or RC versions of the VS Tools for Silverlight, or the Silverlight 2 Beta SDK or Developer Editions of Silverlight 2, please make sure to uninstall these completely before downloading and installing today's release.&lt;/p&gt;    &lt;p&gt;End users who have Silverlight 1, or Silverlight 2 Beta1 or Beta2 will be automatically upgraded to the final Silverlight 2 release starting later this month.&amp;#160; Until then, if they visit a Silverlight 2 (final release) site, they will see the standard install prompt that a machine that does not have Silverlight installed would see.&amp;#160; Clicking it will upgrade their machines to the final release of Silverlight 2 (there is no need for them to uninstall anything - Silverlight 2 will cleanly install over Silverlight 1 or the previous betas).&amp;#160; &lt;/p&gt;    &lt;p&gt;Because there are some breaking changes between Silverlight 2 Beta2 and the final Silverlight 2 release, end users who have the final Silverlight 2 release installed will not be able to run applications that are still targeting Silverlight Beta2.&amp;#160; Most major Silverlight 2 sites plan to upgrade to the final release in the next 24 hours (which will fix this issue) - if you hit a site built with Beta2 before then you might experience trouble with it.&amp;#160; That should go away within about a day once all sites are updated though (this was one reason why we released the public &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/09/25/silverlight-2-release-candidate-now-available.aspx"&gt;release candidate&lt;/a&gt; last month - to help developers get their sites ready for the final release).&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Silverlight 2 is a major release that enables some great new application and media experiences to be built, and allows developers to use .NET within any browser to create them. &lt;/p&gt;    &lt;p&gt;Thank you for all your support and feedback the last year as we've worked on it.&amp;#160; All of us on the Silverlight team are really excited to see what you build with it. :-)&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6680393" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="Silverlight" scheme="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" /></entry><entry><title>October 10th Links: ASP.NET, ASP.NET AJAX, jQuery, IIS</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/10/10/october-10th-links-asp-net-asp-net-ajax-jquery-iis.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/10/10/october-10th-links-asp-net-asp-net-ajax-jquery-iis.aspx</id><published>2008-10-10T08:53:45Z</published><updated>2008-10-10T08:53:45Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Here is the latest in my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/10/02/october-2nd-links-asp-net-asp-net-mvc-asp-net-dynamic-data.aspx"&gt;link-listing series&lt;/a&gt;.&amp;#160; Also check out my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/ASP.NET-2.0-Tips_2C00_-Tricks_2C00_-Recipes-and-Gotchas.aspx"&gt;ASP.NET Tips, Tricks and Tutorials page&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-posts.aspx"&gt;Silverlight Tutorials page&lt;/a&gt; for links to popular articles I've done myself in the past.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://msmvps.com/blogs/omar/archive/2008/10/04/best-practices-for-creating-websites-in-iis-6-0.aspx"&gt;Best Practices for Creating ASP.NET websites with IIS 6.0&lt;/a&gt;: Omar Al Zabir, author of the excellent &lt;a target="_blank" href="http://www.amazon.com/gp/product/0596510500?ie=UTF8&amp;amp;tag=scoblo04-20&amp;amp;linkCode=xm2&amp;amp;camp=1789&amp;amp;creativeASIN=0596510500"&gt;Building a Web 2.0 Portal with ASP.NET 3.5 book&lt;/a&gt;, has a great article that details best practices to follow when setting up a site on IIS 6.0.&amp;#160; Definitely worth reading and book-marking.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.myvbprof.com/2007_Version/Dynamic_Data_Tutorial.aspx"&gt;ASP.NET Dynamic Data Videos using VB:&lt;/a&gt; Bill Burrows has put together an awesome series of videos that show off how to use the new ASP.NET Dynamic Data support provided in .NET 3.5 SP1.&amp;#160; You can find more links to ASP.NET Dynamic Data tutorials in my last link post &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/10/02/october-2nd-links-asp-net-asp-net-mvc-asp-net-dynamic-data.aspx"&gt;here&lt;/a&gt;.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.codeproject.com/KB/aspnet/ExploringCaching.aspx"&gt;Exploring Caching in ASP.NET&lt;/a&gt;: Abhijit Jana has a nice article that discusses caching options with ASP.NET.&amp;#160; If you are interested in another nice (but not well known) caching technique, you might also want to check out my prior &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2006/11/28/tip-trick-implement-donut-caching-with-the-asp-net-2-0-output-cache-substitution-feature.aspx"&gt;Tip/Trick post on &amp;quot;Donut Caching&amp;quot; using the ASP.NET 2.0 Output Cache Substitution feature&lt;/a&gt;.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://morewally.com/cs/blogs/wallym/archive/2008/10/08/asp-net-podcast-show-125-routing-with-webforms.aspx"&gt;Routing with WebForms&lt;/a&gt;: Wally McClure has a nice podcast that describes how to use the new ASP.NET routing infrastructure in .NET 3.5 SP1 with Web Forms based pages.&amp;#160; A lot of people mistakenly think this feature only works with ASP.NET MVC applications - when in reality it also works with web forms pages (in fact all ASP.NET Dynamic Data sites use it). &lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://msmvps.com/blogs/omar/archive/2008/10/06/asp-net-website-continuous-integration-deployment-using-cruisecontrol-net-subversion-msbuild-and-robocopy.aspx"&gt;ASP.NET Continuous Integration and Deployment using CruiseControl.NET, Subversion, MSBuild and Robocopy&lt;/a&gt;: Omar Al Zabir has another great article - this time on implementing continuous integration with ASP.NET. &lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET AJAX and jQuery&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.west-wind.com/presentations/jQuery/default.aspx"&gt;An Introduction to jQuery (Part 1)&lt;/a&gt;: Rick Strahl has posted an excellent article that introduces jQuery, and walks-through how to take advantage of it within ASP.NET pages.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://msdn.microsoft.com/en-us/magazine/cc972638.aspx"&gt;New AJAX Support for Data-Driven Web Apps&lt;/a&gt;: Bertrand Le Roy has written a great MSDN article that describes some of the new ASP.NET AJAX features available in preview form today.&amp;#160; Also check out his blog posts &lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/07/30/using-client-templates-part-1.aspx"&gt;here&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/09/02/using-client-templates-part-2-live-bindings.aspx"&gt;here&lt;/a&gt; to learn more about how the new client-side data templating feature support.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://encosia.com/2008/10/04/using-jquery-to-enhance-aspnet-ajax-progress-indication/"&gt;Using jQuery to enhance ASP.NET AJAX progress indication&lt;/a&gt;: Dave Ward has a cool article that describes how to integrate jQuery functionality with the ASP.NET AJAX UpdatePanel control to enable better progress indication status.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://aspnet.4guysfromrolla.com/articles/100808-1.aspx"&gt;ASP.NET AJAX: Enabling Bookmarking and the Browser's Back Button&lt;/a&gt;: Scott Mitchell continues his excellent series on ASP.NET AJAX and discusses how to add history points to an AJAX-enabled web page so that visitors can bookmark it, as well as to enable back/forward browser navigation.&amp;#160; This is a new feature added to ASP.NET in .NET 3.5 SP1.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.asp.net/learn/ajax-control-toolkit/"&gt;46 ASP.NET AJAX Control Toolkit Tutorials&lt;/a&gt;: Christian Wenz has published 46 super useful tutorials in both VB and C# that show of how to perform common scenarios with the ASP.NET AJAX Control Toolkit.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;Microsoft Web Platform&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.hanselman.com/blog/WebPlatformInstallerTryingToMakeItEasierToSetupForWebDevelopment.aspx"&gt;Web Platform Installer: Make it easy to setup for web development&lt;/a&gt;: Scott Hanselman has a nice post that shows off the new &lt;a target="_blank" href="http://www.microsoft.com/web/channel/products/WebPlatformInstaller.aspx"&gt;&amp;quot;Microsoft Web Platform Installer&amp;quot;&lt;/a&gt; we are building that provides an easy way to quickly install every Microsoft web component out there - and quickly get a machine ready for web development.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6668320" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Atlas" scheme="http://weblogs.asp.net/scottgu/archive/tags/Atlas/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="Link Listing" scheme="http://weblogs.asp.net/scottgu/archive/tags/Link+Listing/default.aspx" /></entry><entry><title>October 2nd Links: ASP.NET, ASP.NET MVC, ASP.NET Dynamic Data</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/10/02/october-2nd-links-asp-net-asp-net-mvc-asp-net-dynamic-data.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/10/02/october-2nd-links-asp-net-asp-net-mvc-asp-net-dynamic-data.aspx</id><published>2008-10-02T08:23:21Z</published><updated>2008-10-02T08:23:21Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;Here is the latest in my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/05/20/may-20th-links-asp-net-asp-net-ajax-net-visual-studio-silverlight-wpf.aspx"&gt;link-listing series&lt;/a&gt;.&amp;#160; Also check out my &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/ASP.NET-2.0-Tips_2C00_-Tricks_2C00_-Recipes-and-Gotchas.aspx"&gt;ASP.NET Tips, Tricks and Tutorials page&lt;/a&gt; and &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/pages/silverlight-posts.aspx"&gt;Silverlight Tutorials page&lt;/a&gt; for links to popular articles I've done myself in the past.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://aws.typepad.com/aws/2008/10/coming-soon-ama.html"&gt;Amazon EC2 Support for Windows and ASP.NET:&lt;/a&gt; Big news announced this week: Amazon will be offering Windows Server 2008 as an option in their EC2 service.&amp;#160; This enables you to use ASP.NET, IIS7 and SQL Server in the cloud.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.hanselman.com/blog/PlugInHybridsASPNETWebFormsAndASPMVCAndASPNETDynamicDataSideBySide.aspx"&gt;Using ASP.NET WebForms, MVC and Dynamic Data in a Single Application&lt;/a&gt;: Scott Hanselman has a nice post that demonstrates how you can have a single ASP.NET application that uses ASP.NET WebForms, MVC, WebServices and Dynamic Data.&amp;#160; You have the flexibility to mix and match them however you want, which allows you to always use the right tool depending on the specific job.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/05/modifying_data_with_the_listvi.html"&gt;Modifying Data with the ListView's EditItemTemplate&lt;/a&gt;: Matt Berseth has a great post that talks about how to use the ASP.NET 3.5 ListView control to enable in-place editing scenarios - with total html markup control.&amp;#160; &lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/06/4_new_grouping_grid_skins_vist.html"&gt;4 New Grouping Grid Skins: Vista, Bold, Win2k3 and Soft&lt;/a&gt;: Matt Berseth has another nice post that demonstrates how to skin the ASP.NET ListView control to enable some sweet data grouping scenarios.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.asp.net/learn/security/tutorial-14-vb.aspx"&gt;Unlocking and Approving User Accounts&lt;/a&gt;: Scott Mitchell posts another in his great series of articles on ASP.NET security (&lt;a target="_blank" href="http://www.asp.net/learn/security/"&gt;click here&lt;/a&gt; for all the articles in the series).&amp;#160; This article talks about how you can setup administration pages that allow admins to lock out and approve user accounts using the ASP.NET Membership system.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://danhounshell.com/blogs/dan/archive/2008/07/18/adding-openid-to-your-web-site-in-conjunction-with-asp-net-membership.aspx"&gt;Adding OpenID to you website in conjunction to ASP.NET Membership&lt;/a&gt;: Dan Hounshell has a nice article that discusses how to add OpenID authentication support to your web-site, and use it in conjunction to ASP.NET's built-in membership system.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET MVC&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://www.squaredroot.com/post/2008/09/06/MVC-Membership-Preview-5.aspx"&gt;MVC Membership with Preview 5&lt;/a&gt;: Troy Goode posts an update of his popular MVC Membership template that works with ASP.NET MVC Preview 5.&amp;#160; It provides a set of administration pages you can use for user/role management, as well as adds support for OpenID and Windows LiveID.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://weblogs.asp.net/mehfuzh/archive/2008/05/27/flickr-viewer-an-asp-net-mvc-photo-app-for-flickr.aspx"&gt;MVC Flickr Xplorer&lt;/a&gt;: Mehfuz Hossain has a cool ASP.NET MVC sample application posted that enables a nice picture explorer for FlickR photos.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;h3&gt;&lt;u&gt;ASP.NET Dynamic Data&lt;/u&gt;&lt;/h3&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/08/aspnet_dynamic_data_simple_5_t.html"&gt;Simple 5 Table Northwind Example&lt;/a&gt;: Matt Berseth kicks off his ASP.NET Dynamic Data tutorial series with a nice post that shows how to build a simple 5 table application using ASP.NET Dynamic Data with .NET 3.5 SP1.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/08/dynamic_data_and_custom_metada.html"&gt;Dynamic Data And Custom Metadata Providers&lt;/a&gt;: Matt continues the series and covers the MetadataType attribute, and how you can use it to annotate your entities with additional metadata.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/08/a_dynamic_menu_for_your_dynami.html"&gt;Dynamic Menu for your Dynamic Data:&lt;/a&gt; Matt continues and covers how to add a data-driven menu to the site.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/09/dynamic_data_customizing_the_d.html"&gt;Customizing the Delete Confirmation Dialog&lt;/a&gt;: Matt continues and demonstrates how to build a nice UI experience when deleting records in a dynamic data application.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;       &lt;p&gt;&lt;a target="_blank" href="http://mattberseth.com/blog/2008/09/dynamic_data_experimenting_wit.html"&gt;Experimenting with YUI's DataTable and DataSource Controls&lt;/a&gt;: Matt experiments with how to use client-side AJAX components together with dynamic data.&lt;/p&gt;     &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6652294" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Link Listing" scheme="http://weblogs.asp.net/scottgu/archive/tags/Link+Listing/default.aspx" /><category term="MVC" scheme="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx" /></entry><entry><title>jQuery and Microsoft</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/09/28/jquery-and-microsoft.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/09/28/jquery-and-microsoft.aspx</id><published>2008-09-28T18:32:31Z</published><updated>2008-09-28T18:32:31Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;&lt;a target="_blank" href="http://jquery.com/"&gt;jQuery&lt;/a&gt; is a lightweight open source JavaScript library (only 15kb in size) that in a relatively short span of time has become one of the most popular libraries on the web.&lt;/p&gt;    &lt;p&gt;A big part of the appeal of jQuery is that it allows you to elegantly (and efficiently) find and manipulate HTML elements with minimum lines of code.&amp;#160; jQuery supports this via a nice &amp;quot;selector&amp;quot; API that allows developers to query for HTML elements, and then apply &amp;quot;commands&amp;quot; to them.&amp;#160; One of the characteristics of jQuery commands is that they can be &amp;quot;chained&amp;quot; together - so that the result of one command can feed into another.&amp;#160; jQuery also includes a built-in set of animation APIs that can be used as commands.&amp;#160; The combination allows you to do some really cool things with only a few keystrokes.&lt;/p&gt;    &lt;p&gt;For example, the below JavaScript uses jQuery to find all &amp;lt;div&amp;gt; elements within a page that have a CSS class of &amp;quot;product&amp;quot;, and then animate them to slowly disappear:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquery/step1.png" /&gt; &lt;/p&gt;    &lt;p&gt;As another example, the JavaScript below uses jQuery to find a specific &amp;lt;table&amp;gt; on the page with an id of &amp;quot;datagrid1&amp;quot;, then retrieves every other &amp;lt;tr&amp;gt; row within the datagrid, and sets those &amp;lt;tr&amp;gt; elements to have a CSS class of &amp;quot;even&amp;quot; - which could be used to alternate the background color of each row:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquery/step2.png" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;em&gt;[Note: both of these samples were adapted from code snippets in the excellent &lt;a target="_blank" href="http://www.amazon.com/gp/product/1933988355/102-4745100-5076967?ie=UTF8&amp;amp;tag=scoblo04-20&amp;amp;linkCode=xm2&amp;amp;camp=1789&amp;amp;creativeASIN=1933988355"&gt;jQuery in Action&lt;/a&gt; book]&lt;/em&gt;&lt;/p&gt;    &lt;p&gt;Providing the ability to perform selection and animation operations like above is something that a lot of developers have asked us to add to ASP.NET AJAX, and this support was something we listed as a proposed feature in the &lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/07/02/asp-net-ajax-roadmap-published.aspx"&gt;ASP.NET AJAX Roadmap&lt;/a&gt; we published a few months ago.&amp;#160; As the team started to investigate building it, though, they quickly realized that the jQuery support for these scenarios is already excellent, and that there is a huge ecosystem and community built up around it already.&amp;#160; The jQuery library also works well on the same page with ASP.NET AJAX and the ASP.NET AJAX Control Toolkit.&lt;/p&gt;    &lt;p&gt;Rather than duplicate functionality, we thought, wouldn't it be great to just use jQuery as-is, and add it as a standard, supported, library in VS/ASP.NET, and then focus our energy building new features that took advantage of it?&amp;#160; We sent mail the jQuery team to gauge their interest in this, and quickly heard back that they thought that it sounded like an interesting idea too.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Supporting jQuery&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;I'm excited today to announce that Microsoft will be shipping jQuery with Visual Studio going forward.&amp;#160; We will distribute the jQuery JavaScript library as-is, and will not be forking or changing the source from the main jQuery branch.&amp;#160; The files will continue to use and ship under the existing jQuery MIT license.&lt;/p&gt;    &lt;p&gt;We will also distribute intellisense-annotated versions that provide great Visual Studio intellisense and help-integration at design-time.&amp;#160; For example:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquery/step3.png" /&gt; &lt;/p&gt;    &lt;p&gt;and with a chained command:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/jquery/step4.png" /&gt; &lt;/p&gt;    &lt;p&gt;The jQuery intellisense annotation support will be available as a free web-download in a few weeks (and will work great with VS 2008 SP1 and the free Visual Web Developer 2008 Express SP1).&amp;#160; The new ASP.NET MVC download will also distribute it, and add the jQuery library by default to all new projects.&lt;/p&gt;    &lt;p&gt;We will also extend Microsoft product support to jQuery beginning later this year, which will enable developers and enterprises to call and open jQuery support cases 24x7 with Microsoft PSS.&lt;/p&gt;    &lt;p&gt;Going forward we'll use jQuery as one of the libraries used to implement higher-level controls in the ASP.NET AJAX Control Toolkit, as well as to implement new Ajax server-side helper methods for ASP.NET MVC.&amp;#160; New features we add to ASP.NET AJAX (like the new &lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/09/16/javascript-and-client-templates-on-hanselminutes.aspx"&gt;client&lt;/a&gt; &lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/07/30/using-client-templates-part-1.aspx"&gt;template&lt;/a&gt; &lt;a target="_blank" href="http://weblogs.asp.net/bleroy/archive/2008/09/02/using-client-templates-part-2-live-bindings.aspx"&gt;support&lt;/a&gt;) will be designed to integrate nicely with jQuery as well.&amp;#160; &lt;/p&gt;    &lt;p&gt;We also plan to contribute tests, bug fixes, and patches back to the jQuery open source project.&amp;#160; These will all go through the standard jQuery patch review process.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;We are really excited to be able to partner with the jQuery team on this.&amp;#160; jQuery is a fantastic library, and something we think can really benefit ASP.NET and ASP.NET AJAX developers.&amp;#160; We are looking forward to having it work great with Visual Studio and ASP.NET, and to help bring it to an even larger set of developers.&lt;/p&gt;    &lt;p&gt;For more details on today's announcement, please check out &lt;a target="_blank" href="http://jquery.com/blog/2008/09/28/jquery-microsoft-nokia/"&gt;John Resig's post&lt;/a&gt; on the jQuery team blog.&amp;#160; Scott Hanselman is also about to post a &lt;a target="_blank" href="http://www.hanselman.com/blog/jQuerytoshipwithASPNETMVCandVisualStudio.aspx"&gt;nice tutorial&lt;/a&gt; that shows off integrating jQuery with ASP.NET AJAX (including the new client templating engine) as well as ADO.NET Data Services (which shipped in .NET 3.5 SP1 and was previously code-named &amp;quot;Astoria&amp;quot;).&lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6645594" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Atlas" scheme="http://weblogs.asp.net/scottgu/archive/tags/Atlas/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /></entry><entry><title>Silverlight 2 Release Candidate Now Available</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/09/25/silverlight-2-release-candidate-now-available.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/09/25/silverlight-2-release-candidate-now-available.aspx</id><published>2008-09-26T04:54:32Z</published><updated>2008-09-26T04:54:32Z</updated><content type="html">&lt;font size="2" face="arial"&gt;   &lt;p&gt;This evening we published the first public release candidate of Silverlight 2.&lt;/p&gt;    &lt;p&gt;There are still a small handful of bugs fixes that we plan to make before we finally ship.&amp;#160; We are releasing today's build, though, so that developers can start to update their existing Silverlight Beta2 applications so that they'll work the day the final release ships, as well as to enable developers to report any last minute showstopper issues that we haven't found internally (please report any of these on the &lt;a target="_blank" href="http://silverlight.net/forums/"&gt;www.silverlight.net&lt;/a&gt; forums).&lt;/p&gt;    &lt;p&gt;Important: We are releasing only the Silverlight Developer Runtime edition (as well as the VS and Blend tools to support it) today, and &lt;u&gt;are not&lt;/u&gt; releasing the regular end-user edition of Silverlight.&amp;#160; This is because we want to give existing developers a short amount of time to update their applications to work with the final Silverlight 2 APIs before sites are allowed to go live with it.&amp;#160; There are some breaking changes between Beta2 and this RC, and we want to make sure that existing sites can update to the final release quickly once the final release is out.&amp;#160; As such, you can only use the RC for development right now - you can't go live with the new APIs until the final release is shipped (which will be soon though).&lt;/p&gt;    &lt;p&gt;You can download today's Silverlight Release Candidate and accompanying VS and Blend support for it &lt;a target="_blank" href="http://silverlight.net/GetStarted/sl2rc0.aspx"&gt;here&lt;/a&gt;.&amp;#160; Note that Expression Blend support for Silverlight 2 is now provided using Blend 2.0 SP1.&amp;#160; You will need to install Blend 2.0 before applying the SP1 service pack that adds Silverlight 2 support.&amp;#160; If you don't already have Blend 2.0 installed you can download a free trial of it &lt;a target="_blank" href="http://www.microsoft.com/downloads/details.aspx?FamilyId=5FF08106-B9F4-43CD-ABAD-4CC9D9C208D7&amp;amp;displaylang=en"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Beta2-&amp;gt;RC API Updates&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Today's release candidate includes a ton of bug fix and some significant performance optimization work.&lt;/p&gt;    &lt;p&gt;Today's release candidate also includes a number of final API tweaks designed to fix differences between Silverlight and the full .NET Framework.&amp;#160; Most of these changes are relatively small (order of parameters, renames of methods/properties, movement of types across namespaces, etc) although there are a number of them.&amp;#160; You can read &lt;a target="_blank" href="http://silverlight.net/blogs/msnow/archive/2008/09/25/silverlight-version-2-rc0-release.aspx"&gt;this blog post&lt;/a&gt; and download &lt;a target="_blank" href="http://download.microsoft.com/download/6/F/E/6FE1F43D-9D0C-4346-AD08-602DF9BCB3CF/BreakingChangesBetweenBeta2andRelease.doc"&gt;this document&lt;/a&gt; to get a listing of the known API breaking changes made from the Beta2 release.&amp;#160; &lt;/p&gt;    &lt;p&gt;We have updated the styles of the controls shipped with Silverlight, and have also modified some of the state groups and control template names they use.&amp;#160; When upgrading from Beta2 you might find it useful to temporarily remove any custom style templates you've defined, and get your application functionality working using the RC first - and then after that works add back in the styles one style definition at a time to catch any rename/behavior change issues with them.&lt;/p&gt;    &lt;p&gt;If you find yourself stuck with an question/issue moving from Beta2 to the RC, please report it on the &lt;a target="_blank" href="http://silverlight.net/forums/"&gt;www.silverlight.net&lt;/a&gt; forums (Silverlight team members will be on there helping folks).&amp;#160; If after a day or two you aren't getting an answer please send me email (&lt;a href="mailto:scottgu@microsoft.com"&gt;scottgu@microsoft.com&lt;/a&gt;) and I can help or connect you with someone who knows the answer.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;New Controls&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Today's release candidate includes a bunch of feature additions and tweaks across Silverlight 2, as well as in the VS and Blend tools targeting it. In general you'll find a number of nice improvements across the controls, networking, data caching, layout, rendering, media stack, and other components and sub-systems.&lt;/p&gt;    &lt;p&gt;Over the next few months we will be releasing a lot of new Silverlight 2 controls (more details on these soon).&amp;#160; Today's release candidate includes three new core controls - ComboBox, ProgressBar, and PasswordBox - that we are adding directly to the core Silverlight runtime download (which is still only 4.6MB in size, and only takes a few seconds to install):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step2.png" /&gt; &lt;/p&gt;    &lt;p&gt;At runtime these controls by default look like:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step1.png" /&gt; &lt;/p&gt;    &lt;p&gt;The ComboBox in Silverlight 2 supports standard DropDownList semantics.&amp;#160; In addition to statically defining items like above, you can also use databinding with it.&amp;#160; For example, we could define a &amp;quot;Person&amp;quot; class like below:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step3.png" /&gt; &lt;/p&gt;    &lt;p&gt;And the add a ComboBox to a page like so:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step22.png" /&gt; &lt;/p&gt;    &lt;p&gt;And then write the below code to databind a collection of Person objects to the ComboBox (by setting its ItemSource property):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step17.png" /&gt; &lt;/p&gt;    &lt;p&gt;At runtime our simple app will then display the data-bound Person names (note that we set the DisplayMemberPath property on the ComboBox above to display the &amp;quot;Name&amp;quot; value from our Person objects):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step6.png" /&gt; &lt;/p&gt;    &lt;p&gt;We could then implement a SelectionChanged event handler like below to run code when a person is selected from the ComboBox:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step18.png" /&gt; &lt;/p&gt;    &lt;p&gt;Notice above how we can retrieve a reference to the selected &amp;quot;Person&amp;quot; object from the databound ComboBox using the ComboBox's &amp;quot;SelectedItem&amp;quot; property.&amp;#160; &lt;/p&gt;    &lt;p&gt;We can then call the MessageBox.Show() helper method (new in the RC) to display a modal dialog box that displays some details about our selected person:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step19.png" /&gt;&amp;#160;&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;New Control Skins&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;The final release of Silverlight 2 will have a much more polished set of default control template skins than those that were in Beta1 and Beta2.&amp;#160; Our goal with the default control templates is to have a look that is professional and attractive, can be used in the majority of applications as-is (without requiring you to author custom style templates), and which is also easily tweakable using Expression Blend.&lt;/p&gt;    &lt;p&gt;Today's RC build has skins that are close to the final look we plan to ship (there are a few final tweaks we are doing post RC on the focus color of controls, as well as to tighten up and tweak a few issues in some of the control templates).&amp;#160; Below is the default look for the DataGrid, RadioButton, CheckBoxes, and the DatePicker controls with today's RC build:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step11.png" /&gt; &lt;/p&gt;    &lt;p&gt;Note that the DatePicker control above allows users to type in a date (with a masked edit to ensure it is a valid date), or they can click the calendar icon to the right of the textbox and select the date using a popup Calendar control:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step12.png" /&gt; &lt;/p&gt;    &lt;p&gt;One of the most powerful features of Silverlight and WPF, of course, is the ability for designers and developers to completely customize the look and feel of any control.&amp;#160; This goes beyond simple styling of colors and fonts - you can literally completely change the visual UI of a control, as well as customize its behavior (for example: add animation) without writing any code.&lt;/p&gt;    &lt;p&gt;Within Expression Blend, simply right-click on any Silverlight control and choose the &amp;quot;Edit Control Parts&amp;quot; sub-menu to open and edit its control template:&lt;/p&gt;    &lt;p&gt;&amp;#160;&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step15.png" /&gt; &lt;/p&gt;    &lt;p&gt;When in control template editing mode, you can manipulate any sub-element of a control (for example: a checkbox's inner content), as well as customize each &amp;quot;state&amp;quot; its in (notice the states pane circled in red below).&amp;#160; This allows designers to customize what the control looks like in individual states (for example: checked, unchecked, mouseover, etc).&amp;#160; Silverlight will then automatically handle animating the control from state to state depending on the user action:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/slrc0/step14.png" /&gt; &lt;/p&gt;    &lt;p&gt;You can learn more about how Silverlight's Visual State Model works from my previous blog post &lt;a target="_blank" href="http://weblogs.asp.net/scottgu/archive/2008/06/06/silverlight-2-beta2-released.aspx"&gt;here&lt;/a&gt;.&amp;#160; &lt;/p&gt;    &lt;p&gt;Previous releases of Silverlight often rendered graphics on sub-pixel locations - which could cause lines and shapes to sometimes appear &amp;quot;fuzzy&amp;quot;.&amp;#160; The RC of Silverlight has a new features called &amp;quot;layout rounding&amp;quot; that causes the layout system to round the final measure of a control to an integer (&amp;quot;pixel snapping&amp;quot;), which results in crisper lines and fewer rendering artifacts.&amp;#160; This feature is now on by default, and helps make applications look nicer.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;The final release of Silverlight is not that far off now.&amp;#160; It has been a pretty amazing project that has come a long way in a pretty short amount of time.&lt;/p&gt;    &lt;p&gt;If you have existing Beta2 applications, please start getting them ready for the final release - as once we release Silverlight 2, users that have existing beta releases installed will automatically be upgraded to use the final version.&amp;#160; Testing your application out with the release candidate will ensure that you can easily update your applications and have them ready within hours of the final release.&lt;/p&gt;    &lt;p&gt;Let us know if you find issues with today's release candidate, and please make sure to post them on the forums on &lt;a target="_blank" href="http://silverlight.net/forums/"&gt;http://www.silverlight.net&lt;/a&gt;. &lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6642225" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="Visual Studio" scheme="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="Silverlight" scheme="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" /></entry><entry><title>ASP.NET MVC Preview 5 and Form Posting Scenarios</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/09/02/asp-net-mvc-preview-5-and-form-posting-scenarios.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/09/02/asp-net-mvc-preview-5-and-form-posting-scenarios.aspx</id><published>2008-09-02T12:22:52Z</published><updated>2008-09-02T12:22:52Z</updated><content type="html">&lt;font face="arial" size="2"&gt;   &lt;p&gt;This past Thursday the ASP.NET MVC feature team published a new &amp;quot;Preview 5&amp;quot; release of the ASP.NET MVC framework.&amp;#160; You can download the new release &lt;a href="http://www.codeplex.com/aspnet/Release/ProjectReleases.aspx?ReleaseId=16775" target="_blank"&gt;here&lt;/a&gt;.&amp;#160; This &amp;quot;Preview 5&amp;quot; release works with both .NET 3.5 and the recently released .NET 3.5 SP1.&amp;#160; It can also now be used with both Visual Studio 2008 as well as (the free) Visual Web Developer 2008 Express SP1 edition (which now supports both class library and web application projects).&lt;/p&gt;    &lt;p&gt;Preview 5 includes a bunch of new features and refinements (these build on the additions in &lt;a href="http://weblogs.asp.net/scottgu/archive/2008/07/14/asp-net-mvc-preview-4-release-part-1.aspx" target="_blank"&gt;&amp;quot;Preview 4&amp;quot;&lt;/a&gt;).&amp;#160; You can read detailed &amp;quot;Preview 5&amp;quot; release notes that cover changes/additions &lt;a href="http://www.codeplex.com/aspnet/Release/ProjectReleases.aspx?ReleaseId=16775" target="_blank"&gt;here&lt;/a&gt;.&amp;#160; In this blog post I'm going to cover one of the biggest areas of focus with this release: form posting scenarios.&amp;#160; You can download a completed version of the application I'll build below &lt;a href="http://www.scottgu.com/blogposts/mvcpreview5/mvcapplication49.zip" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Basic Form Post with a Web MVC Pattern&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;Let's look at a simple form post scenario - adding a new product to a products database:&lt;/p&gt;    &lt;p&gt;&amp;#160;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step2.png" /&gt; &lt;/p&gt;    &lt;p&gt;The page above is returned when a user navigates to the &amp;quot;/Products/Create&amp;quot; URL in our application.&amp;#160; The HTML form markup for this page looks like below:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step3.png" /&gt; &lt;/p&gt;    &lt;p&gt;The markup above is standard HTML.&amp;#160; We have two &amp;lt;input type=&amp;quot;text&amp;quot;/&amp;gt; textboxes within a &amp;lt;form&amp;gt; element.&amp;#160; We then have an HTML submit button at the bottom of the form.&amp;#160; When pressed it will cause the form it is nested within to post the form inputs to the server.&amp;#160; The form will post the contents to the URL indicated by its &amp;quot;action&amp;quot; attribute - in this case &amp;quot;/Products/Save&amp;quot;.&lt;/p&gt;    &lt;p&gt;Using the previous &amp;quot;Preview 4&amp;quot; release of ASP.NET we might have implemented the above scenario using a ProductsController class like below that implements two action methods - &amp;quot;Create&amp;quot; and &amp;quot;Save&amp;quot;:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step5.png" /&gt; &lt;/p&gt;    &lt;p&gt;The &amp;quot;Create&amp;quot; action method above is responsible for returning an html view that displays our initial empty form.&amp;#160; The &amp;quot;Save&amp;quot; action method then handles the scenario when the form is posted back to the server.&amp;#160; The ASP.NET MVC framework automatically maps the &amp;quot;ProductName&amp;quot; and &amp;quot;UnitPrice&amp;quot; form post values to the method parameters on the Save method with the same names.&amp;#160; The Save action then uses LINQ to SQL to create a new Product object, assigns its ProductName and UnitPrice values with the values posted by the end-user, and then attempts to save the new product in the database.&amp;#160; If the product is successfully saved, the user is redirected to a &amp;quot;/ProductsAdded&amp;quot; URL that will display a success message.&amp;#160; If there is an error we redisplay our &amp;quot;Create&amp;quot; html view again so that the user can fix the issue and retry.&lt;/p&gt;    &lt;p&gt;We could then implement a &amp;quot;Create&amp;quot; HTML view template like below that would work with the above ProductsController to generate the appropriate HTML.&amp;#160; Note below that we are using the Html.TextBox helper methods to generate the &amp;lt;input type=&amp;quot;text&amp;quot;/&amp;gt; elements for us (and automatically populate their value from the appropriate property in our Product model object that we passed to the view):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step6.png" /&gt; &lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Form Post Improvements with Preview 5&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;The above code works with the previous &amp;quot;Preview 4&amp;quot; release, and continues to work fine with &amp;quot;Preview 5&amp;quot;.&amp;#160; The &amp;quot;Preview 5&amp;quot; release, though, adds several additional features that will allow us to make this scenario even better.&amp;#160; &lt;/p&gt;    &lt;p&gt;These new features include:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;The ability to publish a single action URL and dispatch it differently depending on the HTTP Verb &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;Model Binders that allow rich parameter objects to be constructed from form input values and passed to action methods &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;Helper methods that enable incoming form input values to be mapped to existing model object instances within action methods &lt;/li&gt;   &lt;/ul&gt;    &lt;ul&gt;     &lt;li&gt;Improved support for handling input and validation errors (for example: automatically highlighting bad fields and preserving end-user entered form values when the form is redisplayed to the user) &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;I'll use the remainder of this blog post to drill into each of these scenarios.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;[AcceptVerbs] and [ActionName] attributes&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;In our sample above we implemented our product add scenario across two action methods: &amp;quot;Create&amp;quot; and &amp;quot;Save&amp;quot;.&amp;#160; One motivation for partitioning the implementation like this is that it makes our Controller code cleaner and easier to read.&lt;/p&gt;    &lt;p&gt;The downside to using two actions in this scenario, though, is that we end up publishing two URLs from our site: &amp;quot;/Products/Create&amp;quot; and &amp;quot;/Products/Save&amp;quot;.&amp;#160; This gets problematic in scenarios where we need to redisplay the HTML form because of an input error - since the URL of the redisplayed form in the error scenario will end up being &amp;quot;/Products/Save&amp;quot; instead of &amp;quot;/Products/Create&amp;quot; (because &amp;quot;Save&amp;quot; that was the URL the form was posted to).&amp;#160; If an end-user adds this redisplayed page to their browser favorites, or copy/pastes the URL and emails it to a friend, they will end up saving the wrong URL - and will likely have an error when they try and access it later.&amp;#160; Publishing two URLs can also cause problems with some search engines if your site is crawled and they attempt to automatically traverse your action attributes.&lt;/p&gt;    &lt;p&gt;One way to work around these issues is to publish a single &amp;quot;/Products/Create&amp;quot; URL, and then have different server logic depending on whether it is a GET or POST request.&amp;#160; One common approach used to-do this with other web MVC frameworks is to simply have a giant if/else statement within the action method and branch accordingly:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step7.png" /&gt; &lt;/p&gt;    &lt;p&gt;The downside with the above approach, though, is that it can make the action implementation harder to read, as well as harder to test.&amp;#160; &lt;/p&gt;    &lt;p&gt;ASP.NET MVC &amp;quot;Preview 5&amp;quot; now offers a better option to handle this scenario.&amp;#160; You can create overloaded implementations of action methods, and use a new [AcceptVerbs] attribute to have ASP.NET MVC filter how they are dispatched.&amp;#160; For example, below we can declare two Create action methods - one that will be called in GET scenarios, and one that will be called in POST scenarios:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step27.png" /&gt; &lt;/p&gt;    &lt;p&gt;This approach avoids the need for giant &amp;quot;if/else&amp;quot; statement within your action methods, and enables a cleaner structuring of your action logic.&amp;#160; It also eliminates the need to mock the Request object in order to test these two different scenarios.&lt;/p&gt;    &lt;p&gt;You can also optionally now use a new [ActionName] attribute to allow the method name implementation on your controller class to be different than that from the published URL.&amp;#160; For example, if rather than having two overloaded Create methods in your controller you instead wanted to have the POST method be named &amp;quot;Save&amp;quot;, you could apply the [ActionName] attribute to it like so:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step28.png" /&gt; &lt;/p&gt;    &lt;p&gt;Above we have the same controller method signature (Create and Save) that we had in our initial form post sample.&amp;#160; The difference, though, is that we are now publishing a single URL (/Products/Create) and are automatically varying the handling based on the incoming HTTP verb (and so are browser favorites and search engine friendly).&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Model Binders&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;In our sample above the signature of the Controller action method that handles the form-post takes a String and a Decimal as method arguments.&amp;#160; The action method then creates a new Product object, assigns these input values to it, and then attempts to insert it into the database:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step13.png" /&gt; &lt;/p&gt;    &lt;p&gt;One of the new capabilities in &amp;quot;Preview 5&amp;quot; that can make this scenario cleaner is its &amp;quot;Model Binder&amp;quot; support.&amp;#160; Model Binders provide a way for complex types to be de-serialized from the incoming HTTP input, and passed to a Controller action method as arguments.&amp;#160; They also provide support for handling input exceptions, and make it easier to redisplay forms when errors occur (without requiring the end-user to have to re-enter all their data again - more on this later in this blog post).&amp;#160; &lt;/p&gt;    &lt;p&gt;For example, using the model binder support we could re-factor the above action method to instead take a Product object as an argument like so:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step15.png" /&gt; &lt;/p&gt;    &lt;p&gt;This makes the code a little more terse and clean.&amp;#160; It also allows us to avoid having repetitive form-parsing code scattered across multiple controllers/actions (allowing us to maintain the DRY principle: &amp;quot;don't repeat yourself&amp;quot;).&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Registering Model Binders&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;Model Binders in ASP.NET MVC are classes that implement the IModelBinder interface, and can be used to help manage the binding of types to input parameters.&amp;#160; A model binder can be written to work against a specific object type, or can alternatively be used to handle a broad range of types. The IModelBinder interface allows you to unit test binders independent of the web-server or any specific controller implementation.&lt;/p&gt;    &lt;p&gt;Model Binders can be registered at 4 different levels within an ASP.NET MVC application, which enables a great deal of flexibility in how you use them:&amp;#160; &lt;/p&gt;    &lt;p&gt;1) ASP.NET MVC first looks for the presence of a model binder declared as a parameter attribute on an action method.&amp;#160; For example, we could indicate that we wanted to use a hypothetical &amp;quot;Bind&amp;quot; binder by annotating our product parameter using an attribute like below (note how we are indicating that only two properties should be bound using a parameter on the attribute):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step16.png" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;em&gt;Note: &amp;quot;Preview 5&amp;quot; doesn't have a built-in [Bind] attribute like above just yet (although we are considering adding it as a built-in feature of ASP.NET MVC in the future).&amp;#160; However all of the framework infrastructure necessary to implement a [Bind] attribute like above &lt;/em&gt;&lt;u&gt;is&lt;/u&gt;&lt;em&gt; now implemented in preview 5. The open source MVCContrib project also has a DataBind attribute like above that you can use today.&lt;/em&gt;&lt;/p&gt;    &lt;p&gt;2) If no binder attribute is present on the action parameter, ASP.NET MVC then looks for the presence of a binder registered as an attribute on the type of the parameter being passed to the action method.&amp;#160; For example, we could register an explicit &amp;quot;ProductBinder&amp;quot; binder for our LINQ to SQL &amp;quot;Product&amp;quot; object by adding code like below to our Product partial class:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step17.png" /&gt; &lt;/p&gt;    &lt;p&gt;3) ASP.NET MVC also supports the ability to register binders at application startup using the ModelBinders.Binders collection.&amp;#160; This is useful when you want to use a type written by a third party (that you can't annotate) or if you don't want to add a binder attribute annotation on your model object directly.&amp;#160; The below code demonstrates how to register two type-specific binders at application startup in your global.asax:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step18.png" /&gt; &lt;/p&gt;    &lt;p&gt;4) In addition to registering type-specific global binders, you can use the ModelBinders.DefaultBinder property to register a default binder that will be used when a type-specific binder isn't found.&amp;#160; Included in the MVCFutures assembly (which is currently referenced by default with the mvc preview builds) is a &lt;em&gt;ComplexModelBinder&lt;/em&gt; implementation that uses reflection to set properties based on incoming form post names/values.&amp;#160; You could register it to be used as the fallback for all complex types passed as Controller action arguments using the code below:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step19.png" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;em&gt;Note: the MVC team plans to tweak the IModelBinder interface further for the next drop (they recently discovered a few scenarios that necessitate a few changes).&amp;#160; So if you build a custom model binder with preview 5 expect to have to make a few tweaks when the next drop comes out (probably nothing too major - but just a heads up that we know a few arguments will change on its methods).&lt;/em&gt;&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;UpdateModel and TryUpdateModel Methods&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;The ModelBinder support above is great for scenarios where you want to instantiate new objects and pass them in as arguments to a controller action method.&amp;#160; There are also scenarios, though, when you want to be able to bind input values to existing object instances that you own retrieving/creating yourself within the action method.&amp;#160; For example, when enabling an edit scenario for an existing product in the database, you might want to use an ORM to retrieve an existing product instance from the database first within your action method, then bind the new input values to the retrieved product instance, and then save the changes back to the database.&lt;/p&gt;    &lt;p&gt;&amp;quot;Preview 5&amp;quot; adds two new methods on the Controller base class to help enable this - UpdateModel() and TryUpdateModel().&amp;#160; Both allow you to pass in an existing object instance as the first argument, and then as a second argument you pass in a security white-list of properties you want to update on them using the form post values.&amp;#160; For example, below I'm retrieving a Product object using LINQ to SQL, and then using the UpdateModel method to update the product's name and price properties with form data.&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step20.png" /&gt; &lt;/p&gt;    &lt;p&gt;The UpdateModel methods will attempt to update all of the properties you list (even if there is an error on an early one in the list).&amp;#160; If it encounters an error for a property (for example: you entered bogus string data for a UnitPrice property which is of type Decimal), it will store the exception object raised &lt;em&gt;as well the original form posted value &lt;/em&gt;in a new &amp;quot;ModelState&amp;quot; collection added with &amp;quot;Preview 5&amp;quot;.&amp;#160; We'll cover this new ModelState collection in a little bit - but in a nutshell it provides an easy way for us to redisplay forms with the user-entered values automatically populated for them to fix when there is an error.&lt;/p&gt;    &lt;p&gt;After attempting to update all of the indicated properties, the UpdateModel method will raise an exception if any of them failed.&amp;#160; The TryUpdateModel method works the same way - except that instead of raising an exception it will return a boolean true/false value which indicates whether there were any errors.&amp;#160; You can choose whichever method works best with your error handling preferences.&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Product Edit Example&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;To see an example of using the UpdateModel method in use, let's implement a simple product editing form.&amp;#160; We'll use a URL format of &lt;em&gt;/Products/Edit/{ProductId}&lt;/em&gt; to indicate which product we want to edit.&amp;#160; For example, below the URL is /Products/Edit/4 - which means we are going to edit the product whose ProductId is 4:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step21.png" /&gt; &lt;/p&gt;    &lt;p&gt;Users can change the product name or unit price, and then click the Save button.&amp;#160; When they do our post action method will update the database and then show the user a &amp;quot;Product Updated!&amp;quot; message if it was successful:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step22.png" /&gt; &lt;/p&gt;    &lt;p&gt;We can implement the above functionality using the two Controller actions methods below.&amp;#160; Notice how we are using the [AcceptVerbs] attribute to differentiate the Edit action that displays the initial form, and the one that handles the form post submission:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step61.png" /&gt; &lt;/p&gt;    &lt;p&gt;Our POST action method above uses LINQ to SQL to retrieve an instance of the product object we are editing from the database, then uses UpdateModel to attempt to update the product's ProductName and UnitPrice values using the form post values.&amp;#160; It then calls SubmitChanges() on the LINQ to SQL datacontext to save the updates back to the database.&amp;#160; If that was successful, we then store a success message string in the TempData collection and redirect the user back to the GET action method using a client-side redirect (which will cause the newly saved product to be redisplayed - along with our TempData message string indicating it was updated).&amp;#160; If there is an error either with the form posted values, or with updating the database, an exception will be raised and caught in our catch block - and we will redisplay the form view again to the user for them to fix.&lt;/p&gt;    &lt;p&gt;You might wonder - what is up with this redirect when we are successful?&amp;#160; Why not just redisplay the form again and show the success message?&amp;#160; The reason for the client-redirect is to ensure that if the user hits the refresh button after successfully pressing the save button, they don't resubmit the form again and get hit with a browser prompt like this:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step25.png" /&gt; &lt;/p&gt;    &lt;p&gt;Doing the redirect back to the GET version of the action method ensures that a user hitting refresh will simply reload the page again and not post back.&amp;#160; This approach is called the &lt;a href="http://en.wikipedia.org/wiki/Post/Redirect/Get" target="_blank"&gt;&amp;quot;Post/Redirect/Get&amp;quot; (aka PRG) pattern&lt;/a&gt;.&amp;#160; Tim Barcz has a nice article &lt;a href="http://devlicio.us/blogs/tim_barcz/archive/2008/08/22/prg-pattern-in-the-asp-net-mvc-framework.aspx" target="_blank"&gt;here&lt;/a&gt; that talks about this more with ASP.NET MVC.&lt;/p&gt;    &lt;p&gt;The above two controller action methods are all we need to implement in order to handle editing and updating a Product object.&amp;#160; Below is the &amp;quot;Edit&amp;quot; view to go with the above Controller:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step26.png" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;em&gt;Useful Tip&lt;/em&gt;: In the past once you started added parameters to URLs (for example: /Products/Edit/4) you had to write code in your view to update the form's action attribute to include the parameters in the post URL.&amp;#160; &amp;quot;Preview 5&amp;quot; includes a Html.Form() helper method that can make this easier.&amp;#160; Html.Form() has many overloaded versions that allow you to specify a variety of parameter options.&amp;#160; A new overloaded Html.Form() method that takes with no parameters has been added that will now output the same URL as the current request.&amp;#160; &lt;/p&gt;    &lt;p&gt;For example, if the incoming URL to the Controller that rendered the above view was &amp;quot;/Products/Edit/5&amp;quot;, calling Html.Form() like above would automatically output &amp;lt;form action=&amp;quot;/Products/Edit/5&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt; as the markup output.&amp;#160; If the incoming URL to the Controller that rendered the above view was &amp;quot;/Products/Edit/55&amp;quot;, calling Html.Form() like above would automatically output &amp;lt;form action=&amp;quot;/Products/Edit/55&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt; as the markup output.&amp;#160; This provides a nifty way to avoid having to write any custom code yourself to construct the URL or indicate parameters.&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Unit Testing and UpdateModel&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;In this week's Preview 5 drop the UpdateModel methods always work against the Request object's Form post collection to retrieve values.&amp;#160; This means that to test the above form post action method you'd need to mock the request object in your unit test.&amp;#160; &lt;/p&gt;    &lt;p&gt;With the next MVC drop we'll also add an overloaded UpdateModel method that allows you to pass in your own collection of values to use instead.&amp;#160; For example, we would be able to use the new FormCollection type in preview 5 (which has a ModelBuilder that automatically populates it with all form post values) and pass it to the UpdateModel method as an argument like so:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step29.png" /&gt; &lt;/p&gt;    &lt;p&gt;Using an approach like above will allow us to unit test our form-post scenario without having to use any mocking. Below is an example unit test we could write that tests that a POST scenario successfully updates with new values and redirects back to the GET version of our action method.&amp;#160; Notice that we do not need to mock anything (nor do we have to rely on any special helper methods) in order to unit test all the functionality in our controller:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step32.png" /&gt; &lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Handling Error Scenarios - Redisplaying Forms with Error Messages&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;One of the important things to take care of when handling form post scenarios are error conditions.&amp;#160; These includes cases where an end-user posts incorrect input (for example: a string instead of a number for a Decimal unit-price), as well as cases where the input format is valid, but the business rules behind the application disallow something from being created/updated/saved (for example: making a new order for a discontinued product).&lt;/p&gt;    &lt;p&gt;If a user makes a mistake when filling out a form, the form should be redisplayed with informative error messages that guide them towards fixing it.&amp;#160; The form should also preserve the input data the user originally entered - so that they don't have to refill this manually.&amp;#160; This process should repeat as many times as necessary until the form successfully completes.&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Basic Form Entry Error Handling and Input Validation with ASP.NET MVC&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;In our product edit sample above we haven't written much error handling code in either our Controller or our View.&amp;#160; Our Edit post action simply wraps a try/catch error handling block around the UpdateModel() input mapping call, as well as the database save SubmitChanges() call.&amp;#160; If an error occurs, the controller saves an output message in the TempData collection, and then returns our edit view to be redisplayed:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step33.png" /&gt; &lt;/p&gt;    &lt;p&gt;With earlier preview releases of ASP.NET MVC the above code wouldn't be enough to deliver a good end-user experience (since it wouldn't highlight the problem, nor preserve user input if there was an error).&lt;/p&gt;    &lt;p&gt;However, with &amp;quot;Preview 5&amp;quot; you'll find that you now get a decent end-user error experience out of the box with just the above code.&amp;#160; Specifically, you'll find that when our edit view is redisplayed because of an input error it now highlights all input controls that have problems, and preserves their input for us to fix:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step34.png" /&gt; &lt;/p&gt;    &lt;p&gt;How, you might ask, did the Unit Price textbox highlight itself in red and know to output the originally entered user value?&lt;/p&gt;    &lt;p&gt;&amp;quot;Preview 5&amp;quot; introduces a new &amp;quot;ModelState&amp;quot; collection that is passed as part of the &amp;quot;ViewData&amp;quot; sent from the Controller to the View when it renders.&amp;#160; The ModelState collection provides a way for Controllers to indicate that an error exists with a model object or model property being passed to the View, and allows a human friendly error message to be specified that describes the issue, as well as the original value entered by the end-user.&lt;/p&gt;    &lt;p&gt;Developers can explicitly write code to add items into the ModelState collection within their Controller actions.&amp;#160; ASP.NET MVC's ModelBinders and UpdateModel() helper methods also automatically populate this collection by default when they encounter input errors.&amp;#160; Because we were using the UpdateModel() helper method in our Edit action above, when it failed in its attempt to map the UnitPrice TextBox's &amp;quot;gfgff23.02&amp;quot; input to the Product.UnitPrice property (which is of type Decimal) it automatically added an entry to the ModelState collection.&lt;/p&gt;    &lt;p&gt;Html helper methods inside the View by default now check the ModelState collection when rendering output.&amp;#160; If an error for an item they are rendering exists, they will now render the originally entered user value as well as a CSS error class to the HTML input element.&amp;#160; For example, for our &amp;quot;Edit&amp;quot; View above we are using the Html.TextBox() helper method to render the UnitPrice of our Product object:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step35.png" /&gt; &lt;/p&gt;    &lt;p&gt;When the view was rendered during the error scenario above the Html.TextBox() method checked the ViewData.ModelState collection to see if there were any issues with the &amp;quot;UnitPrice&amp;quot; property of our Product object, and when it saw that there was rendered the originally entered user input (&amp;quot;gfgff23.02&amp;quot;) and added a css class to the &amp;lt;input type=&amp;quot;textbox&amp;quot;/&amp;gt; it output:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step37.png" /&gt; &lt;/p&gt;    &lt;p&gt;You can customize the appearance of the the error css classes to look however you want.&amp;#160; The default CSS error rule for input elements in the stylesheet created in new ASP.NET MVC projects looks like below:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step38.png" /&gt; &lt;/p&gt;    &lt;p&gt;&lt;u&gt;Adding Additional Validation Messages&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;The built-in HTML form helpers provide basic visual identification of input fields with issues.&amp;#160; Let's now add some more descriptive error messages to the page as well.&amp;#160; To-do this we can use the new Html.ValidationMessage() helper method in &amp;quot;Preview 5&amp;quot;.&amp;#160; This method will output the error message in the ModelState collection that is associated with a given Model or Model property.&lt;/p&gt;    &lt;p&gt;For example: we could update our view to use the Html.ValidationMessage() helper to the right of the textboxes like so:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step39.png" /&gt; &lt;/p&gt;    &lt;p&gt;Now when the page renders with an error, an error message will be displayed next to the fields with problems:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step40.png" /&gt; &lt;/p&gt;    &lt;p&gt;There is an overloaded version of the Html.ValidationMessage() method that takes a second parameter that allows the view to specify an alternative text to display:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step41.png" /&gt; &lt;/p&gt;    &lt;p&gt;One common use case is to output the * character next to the input fields, and then add the new Html.ValidationSummary() helper method (new in &amp;quot;Preview 5&amp;quot;) near the top of the page to list all the error messages:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step42.png" /&gt; &lt;/p&gt;    &lt;p&gt;The Html.ValidationSummary() helper method will then render a &amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;/ul&amp;gt; list of all the error messages our ModelState collection, and a * and red border will indicate each input element that has a problem:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step43.png" /&gt; &lt;/p&gt;    &lt;p&gt;Note that we haven't had to change our ProductsController class at all to achieve this.&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Supporting Business Rules Validation&lt;/u&gt; &lt;/p&gt;    &lt;p&gt;Supporting input validation scenarios like above is useful, but rarely sufficient for most applications.&amp;#160; In most scenarios you also want to be able to enforce business rules, and have your application UI cleanly integrate with them.&lt;/p&gt;    &lt;p&gt;ASP.NET MVC supports any data layer abstraction (both ORM and non-ORM based), and allows you to structure your domain model, as well as associated rules/constraints, however you want.&amp;#160; Capabilities like Model Binders, the UpdateModel helper method, and all of the error display and validation message support are explicitly designed so that you can use whatever preferred data access story you want within your MVC applications (including LINQ to SQL, LINQ to Entities, NHibernate, SubSonic, CSLA.NET, LLBLGen Pro, WilsonORMapper, DataSets, ActiveRecord, and any other).&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Adding Business Rules to a LINQ to SQL Entity&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;In the sample above I've been using LINQ to SQL to define my Product entity and perform my data access.&amp;#160; So far, the only level of domain rules/validation that I am using on my Product entity are those inferred by LINQ to SQL from the SQL Server metadata (nulls, data type and length, etc).&amp;#160; This will catch scenarios like above (where we are trying to assign bogus input to a Decimal).&amp;#160; However, they won't be able to model business issues that can't be easily declared using SQL metadata.&amp;#160; For example: disallowing the reorder level of a product to be greater than zero if it has been discontinued, or disallowing a product to be sold for less than what our supplier price is, etc.&amp;#160; For scenarios like these we need to add code to our model to express and integrate these business rules.&lt;/p&gt;    &lt;p&gt;The &lt;em&gt;wrong place&lt;/em&gt; to add this business rule logic is in the UI layer of our application.&amp;#160; Adding them there is bad for many reasons.&amp;#160; Among others it will almost certainly lead to duplicated code - since you'll end up copying the rules around from UI to UI and from form to form.&amp;#160; In addition to being time-consuming, there is an excellent chance doing so will lead to bugs when you change your business rule logic, and you forget to update it everywhere.&amp;#160; &lt;/p&gt;    &lt;p&gt;A much better place to incorporate these business rules is at your model or domain level.&amp;#160; That way they can be used and applied regardless of what type of UI or form or service works with it.&amp;#160; Changes to the rules can be made once, and picked up everywhere without having to duplicate any logic.&lt;/p&gt;    &lt;p&gt;There are several patterns and approaches we could take to integrate richer business rules to the Product model object we've been using above: we could define the rules within the object, or external from the object.&amp;#160; We could use declarative rules, a re-usable rules engine framework, or imperative code.&amp;#160; The key point is that ASP.NET MVC allows us to use any or all of these approaches (there aren't a bunch of features that require you to always do it one way - you instead have the flexibility to reflect them however you want, and the MVC features are extensible enough to integrate with almost anything).&lt;/p&gt;    &lt;p&gt;For this blog post I'm going to use a relatively simple rules approach.&amp;#160; First I'm going to define a &amp;quot;RuleViolation&amp;quot; class like below that we can use to capture information about a business rule that is being violated within our model.&amp;#160; This class will expose an ErrorMessage string with details about the error, as well as expose the primary property name and property value associated with it that is causing the violation:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step44.png" /&gt; &lt;/p&gt;    &lt;p&gt;(note: For simplicity sake I'm only going to store only one property - in more complex applications this might instead be a list so that multiple properties could be specified).&lt;/p&gt;    &lt;p&gt;I will then define an IRuleEntity interface that has a single method - GetRuleViolations() - which returns back a list of all current business rule violations with that entity:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step54.png" /&gt; &lt;/p&gt;    &lt;p&gt;I can then have my Product class implement this interface.&amp;#160; To keep the sample simple I'm embedding the rule definition and evaluation logic inside the method.&amp;#160; There are better patterns that you can use to enable reusable rules, as well as to handle more complex rules. If this sample grew I'd refactor the method so that the rules and their evaluation where defined elsewhere, but for now to keep this simple we'll just evaluate three business rules below like so:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step55.png" /&gt;&amp;#160; &lt;/p&gt;    &lt;p&gt;Our application can now query the Product (or any other IRuleEntity) instance to check its current validation status, as well as retrieve back RuleViolation objects that can be used to help present UI that can guide an end-user of the application to help fix them.&amp;#160; It also allows us to easily unit test our business rules independent of the application UI.&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step49.png" /&gt; &lt;/p&gt;    &lt;p&gt;For this particular sample I am going to choose to enforce that our Product object is never saved in the database in an invalid state (meaning all RuleViolations must be fixed before the Product object can be saved in the database).&amp;#160; We can do this with LINQ to SQL by adding an OnValidate partial method to the Product partial class.&amp;#160; This method will get called automatically by LINQ to SQL any time database persistence occurs.&amp;#160; Below I'm calling the GetRuleViolations() method we added above, and am raising an exception if there are unresolved errors.&amp;#160; This will abort the transaction and prevent the database from being updated:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step50.png" /&gt; &lt;/p&gt;    &lt;p&gt;And now in addition to having a friendly helper method that allows us to retrieve RuleViolations from a Product, we have enforcement that those RuleViolations must be fixed before our database is ever updated.&lt;/p&gt;    &lt;p&gt;&lt;u&gt;Integrating the above Rules into our ASP.NET MVC UI&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;Once we've implemented our business rules, and exposed our RuleViolations like above, it will be relatively easy to integrate it into our ASP.NET MVC sample.&lt;/p&gt;    &lt;p&gt;Because we added the OnValidate partial method to our Product class, calling northwind.SubmitChanges() will raise an exception if there are any business rule validation issues with a Product object that we are trying to save.&amp;#160; This exception will abort any database transactions, and will be caught in our catch block below:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step57.png" /&gt; &lt;/p&gt;    &lt;p&gt;The one extra line of code we'll then add to our error catch block is some logic to call a UpdateModelStateWithViolations() helper method defined below.&amp;#160; This method retrieves a list of all rule violations from an entity, and then updates a ModelState collection with appropriate model errors (including references to the properties on our entity object that caused them):&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step56.png" /&gt; &lt;/p&gt;    &lt;p&gt;Once we do this, we can re-run our application.&amp;#160; Now, in addition to seeing input format related error messages, ASP.NET MVC's validation helpers will also display our business rule violations as well.&amp;#160; &lt;/p&gt;    &lt;p&gt;For example, we could set the unit price to be less than a $1, and try to set the Reorder level to be -1 (both values are legal from an input format perspective - but both violate our business rules).&amp;#160; When we do this and hit save we'll see the errors show up in our Html.ValidationSummary() list, and the corresponding textboxes will be flagged:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step58.png" /&gt; &lt;/p&gt;    &lt;p&gt;Our business rules can span multiple Product properties.&amp;#160; For example: you might have noticed above that I added a rule that said that the reorder level can't be greater than zero if the product is discontinued:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step59.png" /&gt; &lt;/p&gt;    &lt;p&gt;The only changes we needed to make to our &amp;quot;Edit&amp;quot; view template throughout this entire business rules process has been to add two more Product properties (Reorder and Discontinued) to the file:&lt;/p&gt;    &lt;p&gt;&lt;img src="http://www.scottgu.com/blogposts/mvcpreview5/step60.png" /&gt; &lt;/p&gt;    &lt;p&gt;Now we can add any number of additional business validation rules we want to our Product entity, and &lt;em&gt;&lt;u&gt;we do not need to update the Edit view nor the ProductsController in order to have our UI support them.&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;    &lt;p&gt;We can also unit-test our model and business rules separately from our Controller and View.&amp;#160; We can unit-test our URL routing separately from our Controller, Views and Models.&amp;#160; And we can unit test our Controller separately from our Views.&amp;#160; All of the scenarios shown in this blog post will support unit testing without requiring any mocking or stubbing to be used.&amp;#160; The end result are applications that are easily testable, and which can support a nice TDD workflow.&lt;/p&gt;    &lt;h3&gt;&lt;u&gt;Summary&lt;/u&gt;&lt;/h3&gt;    &lt;p&gt;This post has provided a quick look at how form post scenarios work with ASP.NET MVC Preview 5.&amp;#160; Hopefully after reading it you have a better sense of how you handle form and input entry scenarios using a MVC model.&amp;#160; You can download a completed C# version of the application I built above &lt;a href="http://www.scottgu.com/blogposts/mvcpreview5/mvcapplication49.zip" target="_blank"&gt;here&lt;/a&gt;.&amp;#160; I will post a VB version a little later this week (it is unfortunately 4:30am while I'm typing this and I need to hop on a plane in a few short hours and have not started packing yet).&lt;/p&gt;    &lt;p&gt;Important: If you don't like the MVC model or don't find it natural to your style of development, you definitely don't have to use it.&amp;#160; It is a totally optional offering - and &lt;u&gt;does not&lt;/u&gt; replace the existing WebForms model.&amp;#160; Both WebForms and MVC will be fully supported and enhanced going forward (the next release of ASP.NET WebForms will add richer URL routing features, better HTML markup/client-side ID/CSS support, and more).&amp;#160; So if after reading the above post you think &amp;quot;hmm - that doesn't feel natural to me&amp;quot;, then both don't worry, and don't feel like you should or need to use it (you don't).&amp;#160; &lt;/p&gt;    &lt;p&gt;In my next post on MVC I'll cover how to integrate AJAX into your ASP.NET MVC applications.&amp;#160; &lt;/p&gt;    &lt;p&gt;Hope this helps,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6592229" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author><category term="ASP.NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" /><category term=".NET" scheme="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" /><category term="Community News" scheme="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" /><category term="MVC" scheme="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx" /></entry><entry><title>Quick Update</title><link rel="alternate" type="text/html" href="http://weblogs.asp.net/scottgu/archive/2008/09/02/quick-update.aspx" /><id>http://weblogs.asp.net/scottgu/archive/2008/09/02/quick-update.aspx</id><published>2008-09-02T12:21:59Z</published><updated>2008-09-02T12:21:59Z</updated><content type="html">&lt;font face="arial" size="2"&gt;   &lt;p&gt;I've received a number of (very nice) emails recently asking if I was ok - since my blog has been silent the last few weeks (and much of the summer).&amp;#160; &lt;/p&gt;    &lt;p&gt;Just to address people's concerns - I'm alive and well. :-)&amp;#160; I've just been on vacation the last 6 weeks, and have unfortunately not had free time to post (I've been changing a lot of diapers).&amp;#160; &lt;/p&gt;    &lt;p&gt;I am still on vacation another week before I officially return to work.&amp;#160; I did get a chance to write up a quick post this weekend that covers some of the new ASP.NET MVC Preview 5 features, though, that will hopefully provide some interim reading until I can resume a more regular posting schedule over the next month when I get back into the office.&lt;/p&gt;    &lt;p&gt;Thanks,&lt;/p&gt;    &lt;p&gt;Scott&lt;/p&gt;    &lt;p&gt;P.S. Somewhat to my embarrassment I started a Part1/Part2 post on &amp;quot;Preview 4&amp;quot; right before I left for vacation, and didn't have time to finish part 2 before &amp;quot;Preview 5&amp;quot; came out.&amp;#160; I am going to post this lost segment (which covered AJAX) later this month and write it against the latest preview build. &lt;/p&gt;    &lt;p&gt;P.P.S. People often ask me whether I write my own blog.&amp;#160; Yep - I actually really do write every single post.&amp;#160; Hopefully my absence the last 6 weeks provides some evidence to support this. :-)&lt;/p&gt; &lt;/font&gt;&lt;img src="http://weblogs.asp.net/aggbug.aspx?PostID=6592226" width="1" height="1"&gt;</content><author><name>ScottGu</name><uri>http://weblogs.asp.net/members/ScottGu.aspx</uri></author></entry></feed>
