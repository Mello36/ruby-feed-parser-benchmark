<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	>

<channel>
	<title>Khaled alHabache's official blog</title>
	<atom:link href="http://www.khelll.com/blog/feed/" rel="self" type="application/rss+xml" />
	<link>http://www.khelll.com/blog</link>
	<description>What web development means....</description>
	<pubDate>Fri, 12 Dec 2008 12:08:39 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.6.5</generator>
	<language>en</language>
			<item>
		<title>Arabs who are interested in Merb and Merb-book</title>
		<link>http://www.khelll.com/blog/merb/arabs-who-are-interested-in-merb-and-merb-book/</link>
		<comments>http://www.khelll.com/blog/merb/arabs-who-are-interested-in-merb-and-merb-book/#comments</comments>
		<pubDate>Fri, 12 Dec 2008 12:06:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Merb]]></category>

		<category><![CDATA[Book]]></category>

		<guid isPermaLink="false">http://www.khelll.com/blog/?p=105</guid>
		<description><![CDATA[So many developers from various countries had corresponded to Matt Aimonetti&#8217;s article on open merb book, and an early version of the book is out there.
However lot&#8217;s of work is still needed in both directions: contribution and translation ,so: dear Arabic developers wherever you are, if you are interested in Merb framework, have the ability [...]<script type="text/javascript">SHARETHIS.addEntry({ title: "Arabs who are interested in Merb and Merb-book", url: "http://www.khelll.com/blog/merb/arabs-who-are-interested-in-merb-and-merb-book/" });</script>]]></description>
			<content:encoded><![CDATA[<p>So many developers from various countries had corresponded to Matt Aimonetti&#8217;s <a href="http://merbist.com/2008/12/04/annoucing-the-merb-open-source-book/" onclick="javascript:pageTracker._trackPageview('/outbound/article/merbist.com');">article</a> on open merb boo<a href="http://merbist.com/2008/12/04/annoucing-the-merb-open-source-book/" onclick="javascript:pageTracker._trackPageview('/outbound/article/merbist.com');"></a>k, and an early version of the book is out <a href="http://book.merbist.com/" onclick="javascript:pageTracker._trackPageview('/outbound/article/book.merbist.com');">t</a><a href="http://book.merbist.com/" onclick="javascript:pageTracker._trackPageview('/outbound/article/book.merbist.com');">here</a>.</p>
<p>However lot&#8217;s of work is still needed in both directions: contribution and translation ,so: dear Arabic developers wherever you are, if you are interested in Merb framework, have the ability to write in native Arabic, and willing to help contributing or translating the <a href="http://book.merbist.com/" onclick="javascript:pageTracker._trackPageview('/outbound/article/book.merbist.com');">merb-book </a>, then please don&#8217;t hesitate to send me <a href="mailto:khellls@gmail.com">an email</a>. Your efforts is gonna be highly appreciated by Merb community, and you personally gonna gain lot&#8217;s of knowledge in Merb framework, how to contribute to open source, and how to write a book.</p>
<p>Waiting to here from you&#8230;..</p>
<p><a href="http://sharethis.com/item?&wp=2.6.5&amp;publisher=b03ada35-99ad-4e2b-b2cd-5fde6c1820dd&amp;title=Arabs+who+are+interested+in+Merb+and+Merb-book&amp;url=http%3A%2F%2Fwww.khelll.com%2Fblog%2Fmerb%2Farabs-who-are-interested-in-merb-and-merb-book%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/sharethis.com');">ShareThis</a></p>]]></content:encoded>
			<wfw:commentRss>http://www.khelll.com/blog/merb/arabs-who-are-interested-in-merb-and-merb-book/feed/</wfw:commentRss>
		</item>
		<item>
		<title>What i liked most about rails 2.2</title>
		<link>http://www.khelll.com/blog/ror/what-i-liked-most-about-rails-22/</link>
		<comments>http://www.khelll.com/blog/ror/what-i-liked-most-about-rails-22/#comments</comments>
		<pubDate>Sun, 07 Dec 2008 12:23:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[ROR]]></category>

		<category><![CDATA[new]]></category>

		<category><![CDATA[rails 2.2]]></category>

		<guid isPermaLink="false">http://www.khelll.com/blog/?p=88</guid>
		<description><![CDATA[Well, finally it&#8217;s there, many important improvements were added to rails 2.2, and yet new things are on the way, you can check this blog post  to check what&#8217;s new, while i&#8217;m gonna list here what i really liked about the new version of rails 2.2:
Thread safe
If you really don&#8217;t know what it means, [...]<script type="text/javascript">SHARETHIS.addEntry({ title: "What i liked most about rails 2.2", url: "http://www.khelll.com/blog/ror/what-i-liked-most-about-rails-22/" });</script>]]></description>
			<content:encoded><![CDATA[<p>Well, finally it&#8217;s there, many important improvements were added to rails 2.2, and yet new things are on the way, you can check <a href="http://weblog.rubyonrails.org/2008/11/21/rails-2-2-i18n-http-validators-thread-safety-jruby-1-9-compatibility-docs" onclick="javascript:pageTracker._trackPageview('/outbound/article/weblog.rubyonrails.org');">this blog post </a> to check what&#8217;s new, while i&#8217;m gonna list here what i really liked about the new version of rails 2.2:</p>
<p><strong>Thread safe</strong></p>
<p>If you really don&#8217;t know what it means, then most probably you want to check <a title="Q/A: What Thread-safe Rails Means" href="http://blog.headius.com/2008/08/qa-what-thread-safe-rails-means.html" onclick="javascript:pageTracker._trackPageview('/outbound/article/blog.headius.com');">this post</a> by Charles Nutter, however in short terms: threaded rails with a native threaded implementation of ruby (<a title="jruby project" href="http://jruby.codehaus.org/" onclick="javascript:pageTracker._trackPageview('/outbound/article/jruby.codehaus.org');">jruby</a> in our case) will save your memory , make your app more scalable, and most importantly it will make the app deployment very easy, specially  when <a href="http://glassfishgem.rubyforge.org/" onclick="javascript:pageTracker._trackPageview('/outbound/article/glassfishgem.rubyforge.org');">glassfish gem</a> or even with <a title="jetty rails" href="http://jetty-rails.rubyforge.org/" onclick="javascript:pageTracker._trackPageview('/outbound/article/jetty-rails.rubyforge.org');">jetty-rails gem</a> is used.</p>
<p>And you Just have to make sure your app is thread safe, follow <a title="thread safty" href="http://m.onkey.org/2008/10/23/thread-safety-for-your-rails" onclick="javascript:pageTracker._trackPageview('/outbound/article/m.onkey.org');">this post</a> by Pratik Naik.</p>
<p><strong>Well documented</strong></p>
<p>So many people complained about this point before, but this a fact is from past now <img src='http://www.khelll.com/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> , just fire your terminal , go to ur app path, and run :</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;">rake doc:guides</pre></div></div>

<p>This will create doc/guides in your project root , with a comprehensive rails guide to learn from.</p>
<p><strong>Internationalization or I18n</strong></p>
<p>A support for i18n is there now, so  you don&#8217;t have to install any extra gem or plugin, a<a href="http://i18n-demo.phusion.nl/" onclick="javascript:pageTracker._trackPageview('/outbound/article/i18n-demo.phusion.nl');"> comprehensive demo</a> is put there, <em>just be aware that you don&#8217;t need to install the plugin when following the demo, cause it&#8217;s already there in rails 2.2 .</em></p>
<p>Also check the <a title="rails internationalization i18n" href="http://railscasts.com/episodes/138-i18n" onclick="javascript:pageTracker._trackPageview('/outbound/article/railscasts.com');">I18n screencast</a> by Ryan Bates.</p>
<p><strong>Performance + Jruby compatibility<br />
</strong></p>
<ul>
<li>Connection pooling is added in this version of rails , which will save the time of opening(open connection with the db server +authentication) and closing the connection for each http request, so now a pool of connections will be used to serve incomming http requests, instead of opening a new connection for each request.</li>
</ul>
<ul>
<li>There were efforts to enhance the erb system , which will affect the rendering process time.</li>
</ul>
<ul>
<li>Rails 2.2 is fully compatible with <a title="jruby project" href="http://jruby.codehaus.org/" onclick="javascript:pageTracker._trackPageview('/outbound/article/jruby.codehaus.org');">jruby</a> which is the fastest ruby implementation at the current moment, and that will give you better performance when jruby is used ,specially that the jruby team is continually and actively(a release every 3-4 weeks) working on optimizing the overall performance and for rails usage as well.</li>
<li><em>Memoization</em> term was introduced to cache values, check <a href="http://railscasts.com/episodes/137-memoization" onclick="javascript:pageTracker._trackPageview('/outbound/article/railscasts.com');">this screencast</a> by Ryan Bates.</li>
<li>ETags and saving your server the hassle : if u don&#8217;t know about ETags then it&#8217;s time for that , check <a title="rails etags" href="http://ryandaigle.com/articles/2008/10/25/what-s-new-in-edge-rails-even-better-conditional-get-support" onclick="javascript:pageTracker._trackPageview('/outbound/article/ryandaigle.com');">this post</a> by  Ryan Daigle.What matters here is that the new support from rails to ETags  will give you 2 enhancements :
<ol>
<li>Frontend enhancement: the client browser will use it&#8217;s cache to render the needed data and thus won&#8217;t need to issue a new request to your server to bring the data, thus a faster rendering on client side.</li>
<li>Backend enhancement: your ror servers won&#8217;t need to handle some logic to respond back to your client browser requests, thus free the processor to handle other logic.</li>
</ol>
</li>
<li>Template views will be cached now for production mode.</li>
</ul>
<p><strong>Caching actions without their layouts </strong></p>
<p>Now it&#8217;s possible to cache an action without it&#8217;s corresponding layout:</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;"><span style="color:#9966CC; font-weight:bold;">class</span> HomepageController <span style="color:#006600; font-weight:bold;">&lt;</span> ApplicationController
  <span style="color:#008000; font-style:italic;"># Just pass the param layout with false value</span>
  caches_action <span style="color:#ff3333; font-weight:bold;">:feedback</span>, <span style="color:#ff3333; font-weight:bold;">:layout</span> <span style="color:#006600; font-weight:bold;">=&gt;</span> <span style="color:#0000FF; font-weight:bold;">false</span>
  ...
<span style="color:#9966CC; font-weight:bold;">end</span></pre></div></div>

<p>This is really cool, cause in many cases our layout will contain some info related to user status in the website.</p>
<p><strong>More additions might be very interseting for you</strong></p>
<p>As for me, those enhancements and additions listed above , where the most benifitical for my work, other things might attract your attention, for more information about what&#8217;s new, i strongly urge you to look at <a title="Ruby on Rails 2.2 PDF" href="http://envycasts.com/products/ruby-on-rails-22-pdf" onclick="javascript:pageTracker._trackPageview('/outbound/article/envycasts.com');">Ruby on Rails 2.2 PDF</a> by By Carlos Brando.<a title="Ruby on Rails 2.2 PDF" href="http://envycasts.com/products/ruby-on-rails-22-pdf"><br />
</a></p>
<p><a href="http://sharethis.com/item?&wp=2.6.5&amp;publisher=b03ada35-99ad-4e2b-b2cd-5fde6c1820dd&amp;title=What+i+liked+most+about+rails+2.2&amp;url=http%3A%2F%2Fwww.khelll.com%2Fblog%2Fror%2Fwhat-i-liked-most-about-rails-22%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/sharethis.com');">ShareThis</a></p>]]></content:encoded>
			<wfw:commentRss>http://www.khelll.com/blog/ror/what-i-liked-most-about-rails-22/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Ruby introspection 2</title>
		<link>http://www.khelll.com/blog/ruby/ruby-introspection-2/</link>
		<comments>http://www.khelll.com/blog/ruby/ruby-introspection-2/#comments</comments>
		<pubDate>Sat, 06 Dec 2008 18:24:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category><![CDATA[metaprogramming]]></category>

		<category><![CDATA[introspection]]></category>

		<guid isPermaLink="false">http://www.khelll.com/blog/?p=59</guid>
		<description><![CDATA[I wanted to start blogging on ruby reflection api, but i just realized that i have to give a second part of my previous article on ruby introspection  .
So here we go:

s = ''
#  s.is_a? String, this is the same!
String === s
&#160;
# Determines whether the object has a public or protected method with [...]<script type="text/javascript">SHARETHIS.addEntry({ title: "Ruby introspection 2", url: "http://www.khelll.com/blog/ruby/ruby-introspection-2/" });</script>]]></description>
			<content:encoded><![CDATA[<p>I wanted to start blogging on ruby reflection api, but i just realized that i have to give a second part of my previous article on <a href="http://www.khelll.com/blog/ruby/ruby-introspection" >ruby introspection </a> .<br />
So here we go:</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;">s = <span style="color:#996600;">''</span>
<span style="color:#008000; font-style:italic;">#  s.is_a? String, this is the same!</span>
<span style="color:#CC0066; font-weight:bold;">String</span> === s
&nbsp;
<span style="color:#008000; font-style:italic;"># Determines whether the object has a public or protected method with the specified name.</span>
s.<span style="color:#9900CC;">respond_to</span>? <span style="color:#ff3333; font-weight:bold;">:slice</span> <span style="color:#008000; font-style:italic;">#=&gt;true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Or</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">respond_to</span>? <span style="color:#ff3333; font-weight:bold;">:include</span> <span style="color:#008000; font-style:italic;">#=&gt; false</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Passes true as the second argument to check private methods as well.</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">respond_to</span>? <span style="color:#ff3333; font-weight:bold;">:include</span> , <span style="color:#0000FF; font-weight:bold;">true</span> <span style="color:#008000; font-style:italic;">#=&gt; true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Check whether some module includes another</span>
<span style="color:#9966CC; font-weight:bold;">module</span> M1 ; <span style="color:#9966CC; font-weight:bold;">end</span>
<span style="color:#9966CC; font-weight:bold;">module</span> M2 ; <span style="color:#9966CC; font-weight:bold;">include</span> M1 ; <span style="color:#9966CC; font-weight:bold;">end</span>
M2.<span style="color:#9966CC; font-weight:bold;">include</span>? M1 <span style="color:#008000; font-style:italic;">#=&gt; true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Check whether instance variable is defined or not.</span>
d=<span style="color:#CC00FF; font-weight:bold;">Date</span>.<span style="color:#9900CC;">new</span>
d.<span style="color:#9900CC;">instance_variables</span> <span style="color:#008000; font-style:italic;">#=&gt; [&quot;@sg&quot;, &quot;@of&quot;, &quot;@ajd&quot;]</span>
d.<span style="color:#9900CC;">instance_variable_defined</span>? <span style="color:#996600;">&quot;@of&quot;</span> <span style="color:#008000; font-style:italic;">#=&gt;true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># I have to clarify this, a note for the previous post:</span>
<span style="color:#008000; font-style:italic;"># obj.public_methods(all=true) ,returns the list of public methods accessible to obj. If the all parameter is set to false, inherited methods will be excluded.  </span>
<span style="color:#008000; font-style:italic;"># obj.protected_methods(all=true),returns the list of protected methods accessible to obj. If the all parameter is set to false, inherited methods will be excluded.  </span>
<span style="color:#008000; font-style:italic;"># obj.private_methods(all=true),returns the list of private methods accessible to obj. If the all parameter is set to false, inherited methods will be excluded.</span>
<span style="color:#008000; font-style:italic;"># Ex:</span>
d.<span style="color:#9900CC;">public_methods</span> <span style="color:#008000; font-style:italic;">#=&gt; [&quot;&gt;&gt;&quot;, &quot;between?&quot;, &quot;h!&quot;, &quot;methods&quot;, &quot;send&quot;, &quot;ctime&quot;, &quot;history_write&quot;, &quot;year&quot;, &quot;h&quot;, &quot;taint&quot;, &quot;to_enum&quot;, &quot;instance_variable_defined?&quot;, &quot;history&quot;, &quot;ld&quot;, &quot;_dump&quot;,&quot;q&quot;, &quot;singleton_methods&quot;, &quot;instance_eval&quot;, &quot;os?&quot;, &quot;wday&quot;, &quot;enum_for&quot;, &quot;nil?&quot;, &quot;succ&quot;, &quot;pretty_print_cycle&quot;, &quot;asctime&quot;, &quot;po&quot;, &quot;protected_methods&quot;, &quot;instance_exec&quot;, &quot;start&quot;, &quot;tainted?&quot;, &quot;ns?&quot;, &quot;handling_jruby_bug&quot;, &quot;new_start&quot;, &quot;yday&quot;, &quot;untaint&quot;, &quot;instance_of?&quot;, &quot;equal?&quot;, &quot;taguri&quot;, &quot;pretty_print&quot;, &quot;julian?&quot;, &quot;step&quot;, &quot;amjd&quot;,&quot;hash&quot;, &quot;poc&quot;, &quot;private_methods&quot;, &quot;jd&quot;, &quot;newsg&quot;, &quot;taguri=&quot;, &quot;history_to_vi&quot;, &quot;pretty_print_instance_variables&quot;, &quot;ajd&quot;, &quot;italy&quot;, &quot;kind_of?&quot;, &quot;freeze&quot;, &quot;eql?&quot;, &quot;next&quot;, &quot;to_yaml_style&quot;, &quot;id&quot;, &quot;sg&quot;, &quot;public_methods&quot;, &quot;hvi&quot;, &quot;quiet&quot;, &quot;england&quot;, &quot;is_a?&quot;, &quot;mday&quot;, &quot;tap&quot;, &quot;type&quot;, &quot;ri&quot;, &quot;to_yaml_properties&quot;, &quot;+&quot;, &quot;instance_variables&quot;, &quot;__id__&quot;, &quot;frozen?&quot;, &quot;-&quot;, &quot;julian&quot;, &quot;pretty_inspect&quot;, &quot;to_a&quot;, &quot;cwyear&quot;, &quot;respond_to?&quot;, &quot;upto&quot;, &quot;display&quot;, &quot;history_do&quot;, &quot;day&quot;, &quot;method&quot;, &quot;class&quot;, &quot;verbose&quot;, &quot;gregorian?&quot;, &quot;downto&quot;, &quot;mjd&quot;, &quot;strftime&quot;, &quot;&lt;=&gt;&quot;, &quot;instance_variable_get&quot;, &quot;==&quot;, &quot;__send__&quot;, &quot;leap?&quot;, &quot;===&quot;, &quot;gregorian&quot;, &quot;pretty_print_inspect&quot;, &quot;extend&quot;, &quot;to_s&quot;,&quot;cweek&quot;, &quot;&gt;=&quot;, &quot;v&quot;, &quot;mon&quot;, &quot;&lt;=&quot;, &quot;clone&quot;, &quot;to_yaml&quot;, &quot;=~&quot;, &quot;instance_variable_set&quot;, &quot;&lt;&quot;, &quot;&gt;&quot;, &quot;cwday&quot;, &quot;inspect&quot;, &quot;day_fraction&quot;, &quot;month&quot;, &quot;dup&quot;, &quot;object_id&quot;, &quot;&lt;&lt;&quot;]</span>
&nbsp;
d.<span style="color:#9900CC;">public_methods</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#0000FF; font-weight:bold;">false</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#008000; font-style:italic;">#=&gt; [&quot;jd&quot;, &quot;month&quot;, &quot;_dump&quot;, &quot;ctime&quot;, &quot;ld&quot;, &quot;cweek&quot;, &quot;succ&quot;, &quot;to_s&quot;, &quot;step&quot;, &quot;day&quot;, &quot;gregorian?&quot;, &quot;hash&quot;, &quot;ajd&quot;, &quot;julian&quot;, &quot;+&quot;, &quot;yday&quot;, &quot;taguri&quot;, &quot;os?&quot;, &quot;strftime&quot;, &quot;italy&quot;, &quot;downto&quot;, &quot;-&quot;, &quot;eql?&quot;, &quot;sg&quot;, &quot;year&quot;, &quot;asctime&quot;, &quot;leap?&quot;, &quot;taguri=&quot;, &quot;inspect&quot;, &quot;amjd&quot;, &quot;cwday&quot;, &quot;to_yaml&quot;, &quot;mon&quot;, &quot;&lt;&lt;&quot;, &quot;gregorian&quot;, &quot;newsg&quot;, &quot;&gt;&gt;&quot;, &quot;start&quot;, &quot;cwyear&quot;, &quot;day_fraction&quot;, &quot;mday&quot;, &quot;ns?&quot;, &quot;mjd&quot;, &quot;england&quot;, &quot;upto&quot;, &quot;wday&quot;, &quot;&lt;=&gt;&quot;, &quot;julian?&quot;, &quot;new_start&quot;, &quot;===&quot;, &quot;next&quot;]</span>
&nbsp;
<span style="color:#008000; font-style:italic;">#Check if a method is defined</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">method_defined</span>? <span style="color:#ff3333; font-weight:bold;">:slice</span>! <span style="color:#008000; font-style:italic;"># =&gt; true </span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Check if public method is defined?</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">public_method_defined</span>? <span style="color:#ff3333; font-weight:bold;">:upcase</span>     <span style="color:#008000; font-style:italic;"># =&gt; true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Check if protected method is defined?</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">protected_method_defined</span>? <span style="color:#ff3333; font-weight:bold;">:downcase</span>  <span style="color:#008000; font-style:italic;"># =&gt; false </span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Check if private method is defined?</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">private_method_defined</span>? <span style="color:#ff3333; font-weight:bold;">:initialize</span> <span style="color:#008000; font-style:italic;"># =&gt; true </span>
&nbsp;
<span style="color:#008000; font-style:italic;"># How to get the name of the current method?</span>
<span style="color:#008000; font-style:italic;"># Add this snippet of code to your logic somewhere</span>
&nbsp;
<span style="color:#9966CC; font-weight:bold;">module</span> <span style="color:#CC00FF; font-weight:bold;">Kernel</span>
  private
  <span style="color:#008000; font-style:italic;"># Defined in ruby 1.9</span>
  <span style="color:#9966CC; font-weight:bold;">unless</span> <span style="color:#9966CC; font-weight:bold;">defined</span>?<span style="color:#006600; font-weight:bold;">&#40;</span>__method__<span style="color:#006600; font-weight:bold;">&#41;</span>
    <span style="color:#9966CC; font-weight:bold;">def</span> __method__
      <span style="color:#CC0066; font-weight:bold;">caller</span><span style="color:#006600; font-weight:bold;">&#91;</span>0<span style="color:#006600; font-weight:bold;">&#93;</span> =~ <span style="color:#006600; font-weight:bold;">/</span><span style="color:#996600;">`([^']*)'/ and $1
    end
  end
end</span></pre></div></div>

<p>Also i strongly recommend that you look at the <a href="http://www.ruby-doc.org/core/classes/ObjectSpace.html" onclick="javascript:pageTracker._trackPageview('/outbound/article/www.ruby-doc.org');">ObjectSpace</a> module which contains a number of routines that interact with the garbage collection facility and<strong> allow you to traverse all living objects with an iterator</strong>, however this is a little example taken from the official api documentation :</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;"><span style="color:#008000; font-style:italic;">#ObjectSpace.each_object([module]) {|obj| ... } =&gt; fixnum</span>
<span style="color:#008000; font-style:italic;">#Calls the block once for each living, nonimmediate object in this Ruby process. If module is specified, calls the block for only those classes or modules that match (or are a subclass of) module. Returns the number of objects found. Immediate objects (Fixnums, Symbols true, false, and nil) are never returned. In the example below, each_object returns both the numbers we defined and several constants defined in the Math module.</span>
&nbsp;
a = <span style="color:#006666;">102.7</span>
b = <span style="color:#006666;">95</span>       <span style="color:#008000; font-style:italic;"># Won't be returned</span>
c = <span style="color:#006666;">12345678987654321</span>
count = <span style="color:#CC00FF; font-weight:bold;">ObjectSpace</span>.<span style="color:#9900CC;">each_object</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#CC00FF; font-weight:bold;">Numeric</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#006600; font-weight:bold;">&#123;</span>|x| <span style="color:#CC0066; font-weight:bold;">p</span> x <span style="color:#006600; font-weight:bold;">&#125;</span>
<span style="color:#CC0066; font-weight:bold;">puts</span> <span style="color:#996600;">&quot;Total count: #{count}&quot;</span>
&nbsp;
<span style="color:#008000; font-style:italic;">#=&gt;12345678987654321</span>
<span style="color:#008000; font-style:italic;">#102.7</span>
<span style="color:#008000; font-style:italic;">#2.71828182845905</span>
<span style="color:#008000; font-style:italic;">#3.14159265358979</span>
<span style="color:#008000; font-style:italic;">#2.22044604925031e-16</span>
<span style="color:#008000; font-style:italic;">#1.7976931348623157e+308</span>
<span style="color:#008000; font-style:italic;">#2.2250738585072e-308</span>
<span style="color:#008000; font-style:italic;">#Total count: 7</span></pre></div></div>

<p>Also if you feel like you are eager to see low level introspection , then check this <a href="http://eigenclass.org/hiki/class+hierarchy+introspection+evil.rb" onclick="javascript:pageTracker._trackPageview('/outbound/article/eigenclass.org');">great post</a>. </p>
<p>In my next article, am going to blog on ruby reflection api , hope to finish it soon <img src='http://www.khelll.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>
<p><a href="http://sharethis.com/item?&wp=2.6.5&amp;publisher=b03ada35-99ad-4e2b-b2cd-5fde6c1820dd&amp;title=Ruby+introspection+2&amp;url=http%3A%2F%2Fwww.khelll.com%2Fblog%2Fruby%2Fruby-introspection-2%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/sharethis.com');">ShareThis</a></p>]]></content:encoded>
			<wfw:commentRss>http://www.khelll.com/blog/ruby/ruby-introspection-2/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Changing database encoding from latin1 to UTF8</title>
		<link>http://www.khelll.com/blog/mysql/changing-database-encoding-from-latin-to-utf8/</link>
		<comments>http://www.khelll.com/blog/mysql/changing-database-encoding-from-latin-to-utf8/#comments</comments>
		<pubDate>Fri, 05 Dec 2008 20:59:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[mysql]]></category>

		<category><![CDATA[arabic]]></category>

		<category><![CDATA[utf8]]></category>

		<guid isPermaLink="false">http://www.khelll.com/blog/?p=46</guid>
		<description><![CDATA[Now a days, UTF-8 is the most used data encoding format, and the fact that your database is not using UTF8 encoding is really annoying, specially additionally when it comes to integrating different systems, that has no one unified encoding format.
So if you think it&#8217;s time to change your data encoding to utf8 format, then [...]<script type="text/javascript">SHARETHIS.addEntry({ title: "Changing database encoding from latin1 to UTF8", url: "http://www.khelll.com/blog/mysql/changing-database-encoding-from-latin-to-utf8/" });</script>]]></description>
			<content:encoded><![CDATA[<p>Now a days, <a href="http://en.wikipedia.org/wiki/UTF-8" onclick="javascript:pageTracker._trackPageview('/outbound/article/en.wikipedia.org');">UTF-8</a> is the most used data encoding format, and the fact that your database is not using UTF8 encoding is really annoying, specially additionally when it comes to integrating different systems, that has no one unified encoding format.<br />
So if you think it&#8217;s time to change your data encoding to utf8 format, then here what this post is all about.<br />
I&#8217;ll list here the steps to do so, i just have to clarify that the main data encoding here is windows-1256 (which is the main Arabic encoding used in web applications), but it&#8217;s saved in latin1 encoding in the database (mydata ->windows-1256 -> latin1) ,also note that i&#8217;m  using Mysql database.<br />
Here are the steps:</p>
<ol>
<li>Export (only) the schema of the db,without “set Names …” phrase in the outputted sql file, this will bring you back the data in the original encoding (windows-1256)

<div class="wp_syntax"><div class="code"><pre class="bash bash" style="font-family:monospace;">mysqldump --default-character-<span style="color: #007800;"><span style="color: #000000; font-weight: bold;">set</span></span>=latin1 <span style="color: #660033;">--skip-set-charset</span> <span style="color: #660033;">-d</span> <span style="color: #660033;">-uusername</span> <span style="color: #660033;">-ppassword</span> db_name <span style="color: #000000; font-weight: bold;">&gt;</span> db_name_schema.sql</pre></div></div>

</li>
<li>Export the data of the db without “set Names …” phrase in the outputted sql file, this will bring you back the data in the original encoding (windows-1256):

<div class="wp_syntax"><div class="code"><pre class="bash bash" style="font-family:monospace;">mysqldump --default-character-<span style="color: #007800;"><span style="color: #000000; font-weight: bold;">set</span></span>=latin1 <span style="color: #660033;">--skip-set-charset</span> <span style="color: #660033;">-t</span> <span style="color: #660033;">-uusername</span> <span style="color: #660033;">-ppassword</span>  db_name <span style="color: #000000; font-weight: bold;">&gt;</span> db_name_data.sql</pre></div></div>

</li>
<li>Change the encoding of both files from arabic to utf8 -check the notes if you r using windows

<div class="wp_syntax"><div class="code"><pre class="bash bash" style="font-family:monospace;">iconv <span style="color: #660033;">-f</span> windows-<span style="color: #000000;">1256</span> <span style="color: #660033;">-t</span> utf8 db_name_schema.sql <span style="color: #000000; font-weight: bold;">&gt;</span> db_name_schema_utf8.sql
iconv <span style="color: #660033;">-f</span> windows-<span style="color: #000000;">1256</span> <span style="color: #660033;">-t</span> utf8 db_name_data.sql <span style="color: #000000; font-weight: bold;">&gt;</span> db_name_data_utf8.sql</pre></div></div>

</li>
<li> *Open the file &#8216;db_name_schema.sql&#8217; with any editor and replace each “DEFAULT CHARSET=latin1” phrase with “DEFAULT CHARSET=utf8” one<br />
*Make a new db ,encoded in utf8:</p>

<div class="wp_syntax"><div class="code"><pre class="bash bash" style="font-family:monospace;"> mysql <span style="color: #660033;">-uusername</span> <span style="color: #660033;">-ppassword</span> <span style="color: #660033;">-e</span> <span style="color: #ff0000;">'CREATE DATABASE new_db DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci'</span></pre></div></div>

</li>
<li>Import the schema and data in utf8 encoding:

<div class="wp_syntax"><div class="code"><pre class="bash bash" style="font-family:monospace;">mysql --default-character-<span style="color: #007800;"><span style="color: #000000; font-weight: bold;">set</span></span>=utf8 <span style="color: #660033;">-uusername</span> <span style="color: #660033;">-ppassword</span> new_db <span style="color: #000000; font-weight: bold;">&lt;</span> db_name_schema_utf8.sql
mysql --default-character-<span style="color: #007800;"><span style="color: #000000; font-weight: bold;">set</span></span>=utf8  <span style="color: #660033;">-uusername</span> <span style="color: #660033;">-ppassword</span> new_db <span style="color: #000000; font-weight: bold;">&lt;</span> db_name_data_utf8.sql</pre></div></div>

</li>
</ol>
<p><strong> notes</strong></p>
<ul>
<li class="level1">
<div class="li">If you are wondering why to separate schema from data upon exporting , then the answer is that the operation of replacing “DEFAULT CHARSET=latin1” phrase with “DEFAULT CHARSET=utf8” one , is taking place only on schema files, so it&#8217;s recommended to separate them so that you dont stuck when loading the big data files.</div>
</li>
<li class="level1">
<div class="li">If you are a windows user and can&#8217;t use iconv , then u can use any editor to do the job for u, try scite or note++ or even dreamweaver</div>
</li>
</ul>
<p>enjoy!!!</p>
<p><a href="http://sharethis.com/item?&wp=2.6.5&amp;publisher=b03ada35-99ad-4e2b-b2cd-5fde6c1820dd&amp;title=Changing+database+encoding+from+latin1+to+UTF8&amp;url=http%3A%2F%2Fwww.khelll.com%2Fblog%2Fmysql%2Fchanging-database-encoding-from-latin-to-utf8%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/sharethis.com');">ShareThis</a></p>]]></content:encoded>
			<wfw:commentRss>http://www.khelll.com/blog/mysql/changing-database-encoding-from-latin-to-utf8/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Grails and Arabic localization</title>
		<link>http://www.khelll.com/blog/grails/grails-and-arabic-localization/</link>
		<comments>http://www.khelll.com/blog/grails/grails-and-arabic-localization/#comments</comments>
		<pubDate>Fri, 05 Dec 2008 16:08:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Grails]]></category>

		<category><![CDATA[arabic]]></category>

		<category><![CDATA[localization]]></category>

		<guid isPermaLink="false">http://www.khelll.com/blog/?p=35</guid>
		<description><![CDATA[A little problem that i faced with grails , was setting the locale dynamically, i followed this nice article , and here is how i could manage it :

I made a new file called messages_ar.properties that contains the arabic localization under the i18n folder.
I made a simple beforeinterceptor:

def beforeInterceptor = &#123;
     [...]<script type="text/javascript">SHARETHIS.addEntry({ title: "Grails and Arabic localization", url: "http://www.khelll.com/blog/grails/grails-and-arabic-localization/" });</script>]]></description>
			<content:encoded><![CDATA[<p>A little problem that i faced with grails , was setting the locale dynamically, i followed this <a href="http://www.grassr.com/wordpress/?p=12" onclick="javascript:pageTracker._trackPageview('/outbound/article/www.grassr.com');">nice article</a> , and here is how i could manage it :</p>
<ol>
<li>I made a new file called messages_ar.properties that contains the arabic localization under the i18n folder.</li>
<li>I made a simple beforeinterceptor:

<div class="wp_syntax"><div class="code"><pre class="groovy groovy" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">def</span> beforeInterceptor <span style="color: #66cc66;">=</span> <span style="color: #66cc66;">&#123;</span>
        <span style="color: #000000; font-weight: bold;">def</span> key <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">&quot;org.springframework.web.servlet.DispatcherServlet.LOCALE_RESOLVER&quot;</span>
        <span style="color: #000000; font-weight: bold;">def</span> localeResolver <span style="color: #66cc66;">=</span> request.<span style="color: #006600;">getAttribute</span><span style="color: #66cc66;">&#40;</span>key<span style="color: #66cc66;">&#41;</span>
        localeResolver.<span style="color: #006600;">setLocale</span><span style="color: #66cc66;">&#40;</span>request, response, <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #aaaadd; font-weight: bold;">Locale</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;ar&quot;</span>,<span style="color: #ff0000;">&quot;JO&quot;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
    <span style="color: #66cc66;">&#125;</span></pre></div></div>

</li>
</ol>
<p>Of course you can use <a href="http://grails.org/Filters" onclick="javascript:pageTracker._trackPageview('/outbound/article/grails.org');">grails/Filters</a> to save yourself repeating the same code in every controller.</p>
<p>However what i want to mention is the locale object, which in case of Arabic localization, was seeking  the country argument ( &#8220;JO&#8221; in our case) :</p>

<div class="wp_syntax"><div class="code"><pre class="groovy groovy" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #aaaadd; font-weight: bold;">Locale</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;ar&quot;</span>,<span style="color: #ff0000;">&quot;JO&quot;</span><span style="color: #66cc66;">&#41;</span></pre></div></div>

<p>While for other localizations like German one it doesn&#8217;t seeks this second argument, so this snippet of code will work for them <img src='http://www.khelll.com/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>

<div class="wp_syntax"><div class="code"><pre class="groovy groovy" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">new</span> <span style="color: #aaaadd; font-weight: bold;">Locale</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;de&quot;</span><span style="color: #66cc66;">&#41;</span></pre></div></div>

<p>Also you can change this country argument value to match this rule :</p>
<blockquote><p>
The country argument is a valid ISO Country Code. These codes are the upper-case, two-letter codes as defined by ISO-3166. You can find a full list of these codes at a number of sites, such as:<br />
http://www.chemie.fu-berlin.de/diverse/doc/ISO_3166.html</p></blockquote>
<p>I hope that was helpful <img src='http://www.khelll.com/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> , enjoy!</p>
<p><a href="http://sharethis.com/item?&wp=2.6.5&amp;publisher=b03ada35-99ad-4e2b-b2cd-5fde6c1820dd&amp;title=Grails+and+Arabic+localization&amp;url=http%3A%2F%2Fwww.khelll.com%2Fblog%2Fgrails%2Fgrails-and-arabic-localization%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/sharethis.com');">ShareThis</a></p>]]></content:encoded>
			<wfw:commentRss>http://www.khelll.com/blog/grails/grails-and-arabic-localization/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Ruby dynamic method calling</title>
		<link>http://www.khelll.com/blog/ruby/ruby-dynamic-method-calling/</link>
		<comments>http://www.khelll.com/blog/ruby/ruby-dynamic-method-calling/#comments</comments>
		<pubDate>Fri, 05 Dec 2008 13:36:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category><![CDATA[metaprogramming]]></category>

		<category><![CDATA[dynamic method calling]]></category>

		<guid isPermaLink="false">http://www.khelll.com/blog/?p=19</guid>
		<description><![CDATA[I&#8217;m pretty sure that you have heard lots about ruby, specially as being a dynamic language, you can create methods on the fly, add instance variables, define constants and invoke existing methods dynamically , and that&#8217;s what this post is all about :
As you know in ruby you can call a public instance method directly [...]<script type="text/javascript">SHARETHIS.addEntry({ title: "Ruby dynamic method calling", url: "http://www.khelll.com/blog/ruby/ruby-dynamic-method-calling/" });</script>]]></description>
			<content:encoded><![CDATA[<p>I&#8217;m pretty sure that you have heard lots about ruby, specially as being a dynamic language, you can create methods on the fly, add instance variables, define constants and invoke existing methods dynamically , and that&#8217;s what this post is all about :</p>
<p>As you know in ruby you can call a public instance method directly ,ex :</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;">s= <span style="color:#996600;">&quot;hi man&quot;</span>
<span style="color:#CC0066; font-weight:bold;">p</span> s.<span style="color:#9900CC;">length</span> <span style="color:#008000; font-style:italic;">#=&gt; 6</span>
<span style="color:#CC0066; font-weight:bold;">p</span> s.<span style="color:#9966CC; font-weight:bold;">include</span>? <span style="color:#996600;">&quot;hi&quot;</span> <span style="color:#008000; font-style:italic;">#=&gt; true</span></pre></div></div>

<p>One way to invoke a method dynamically in ruby is to send a message to the object :</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;"><span style="color:#CC0066; font-weight:bold;">p</span> s.<span style="color:#9900CC;">send</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#ff3333; font-weight:bold;">:length</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#008000; font-style:italic;">#=&gt; 6</span>
<span style="color:#CC0066; font-weight:bold;">p</span> s.<span style="color:#9900CC;">send</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#ff3333; font-weight:bold;">:include</span>?,<span style="color:#996600;">&quot;hi&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#008000; font-style:italic;">#=&gt; true</span></pre></div></div>

<p>A second way is instantiate a method object and then call it:</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;">method_object = s.<span style="color:#9900CC;">method</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#ff3333; font-weight:bold;">:length</span><span style="color:#006600; font-weight:bold;">&#41;</span> 
<span style="color:#CC0066; font-weight:bold;">p</span> method_object.<span style="color:#9900CC;">call</span> <span style="color:#008000; font-style:italic;">#=&gt; 6</span>
method_object = s.<span style="color:#9900CC;">method</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#ff3333; font-weight:bold;">:include</span>?<span style="color:#006600; font-weight:bold;">&#41;</span>
<span style="color:#CC0066; font-weight:bold;">p</span> method_object.<span style="color:#9900CC;">call</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">'hi'</span><span style="color:#006600; font-weight:bold;">&#41;</span>  <span style="color:#008000; font-style:italic;">#=&gt; true</span></pre></div></div>

<p>And the third way is to use the eval method:</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;"><span style="color:#CC0066; font-weight:bold;">eval</span> <span style="color:#996600;">&quot;s.length&quot;</span> <span style="color:#008000; font-style:italic;">#=&gt; 6</span>
<span style="color:#CC0066; font-weight:bold;">eval</span> <span style="color:#996600;">&quot;s.include? 'hi'&quot;</span> <span style="color:#008000; font-style:italic;">#=&gt;true</span></pre></div></div>

<p>Well, when to use what?</p>
<p>look at this script, it will be used to benchmark the 3 ways of calling :</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;"><span style="color:#CC0066; font-weight:bold;">require</span> <span style="color:#996600;">&quot;benchmark&quot;</span> 
test = <span style="color:#996600;">&quot;hi man&quot;</span> 
m = test.<span style="color:#9900CC;">method</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#ff3333; font-weight:bold;">:length</span><span style="color:#006600; font-weight:bold;">&#41;</span> 
n = <span style="color:#006666;">100000</span> 
<span style="color:#CC00FF; font-weight:bold;">Benchmark</span>.<span style="color:#9900CC;">bmbm</span> <span style="color:#006600; font-weight:bold;">&#123;</span>|x| 
  x.<span style="color:#9900CC;">report</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;call&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#006600; font-weight:bold;">&#123;</span> n.<span style="color:#9900CC;">times</span> <span style="color:#006600; font-weight:bold;">&#123;</span> m.<span style="color:#9900CC;">call</span> <span style="color:#006600; font-weight:bold;">&#125;</span> <span style="color:#006600; font-weight:bold;">&#125;</span> 
  x.<span style="color:#9900CC;">report</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;send&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#006600; font-weight:bold;">&#123;</span> n.<span style="color:#9900CC;">times</span> <span style="color:#006600; font-weight:bold;">&#123;</span> test.<span style="color:#9900CC;">send</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#ff3333; font-weight:bold;">:length</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#006600; font-weight:bold;">&#125;</span> <span style="color:#006600; font-weight:bold;">&#125;</span> 
  x.<span style="color:#9900CC;">report</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;eval&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span> <span style="color:#006600; font-weight:bold;">&#123;</span> n.<span style="color:#9900CC;">times</span> <span style="color:#006600; font-weight:bold;">&#123;</span> <span style="color:#CC0066; font-weight:bold;">eval</span> <span style="color:#996600;">&quot;test.length&quot;</span> <span style="color:#006600; font-weight:bold;">&#125;</span> <span style="color:#006600; font-weight:bold;">&#125;</span> 
<span style="color:#006600; font-weight:bold;">&#125;</span> 
<span style="color:#008000; font-style:italic;">#######################################</span>
<span style="color:#008000; font-style:italic;">#####   The results</span>
<span style="color:#008000; font-style:italic;">#######################################</span>
<span style="color:#008000; font-style:italic;">#Rehearsal ----------------------------------------</span>
<span style="color:#008000; font-style:italic;">#call   0.050000   0.020000   0.070000 (  0.077915)</span>
<span style="color:#008000; font-style:italic;">#send   0.080000   0.000000   0.080000 (  0.086071)</span>
<span style="color:#008000; font-style:italic;">#eval   0.360000   0.040000   0.400000 (  0.405647)</span>
<span style="color:#008000; font-style:italic;">#------------------------------- total: 0.550000sec</span>
&nbsp;
<span style="color:#008000; font-style:italic;">#          user     system      total        real</span>
<span style="color:#008000; font-style:italic;">#call   0.050000   0.020000   0.070000 (  0.072041)</span>
<span style="color:#008000; font-style:italic;">#send   0.070000   0.000000   0.070000 (  0.077674)</span>
<span style="color:#008000; font-style:italic;">#eval   0.370000   0.020000   0.390000 (  0.399442)</span></pre></div></div>

<p>Well as you can see, instantiating a method object is the fastest dynamic way in calling a method, also notice how slow using eval is.</p>
<p>Also when sending a message to an object , or when instantiating a method object , u can call private methods of that object :</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;"><span style="color:#9966CC; font-weight:bold;">class</span> Foo
  private  
  <span style="color:#9966CC; font-weight:bold;">def</span> hi 
    <span style="color:#CC0066; font-weight:bold;">puts</span> <span style="color:#996600;">&quot;hi man&quot;</span> 
  <span style="color:#9966CC; font-weight:bold;">end</span> 
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Normal method calling</span>
f = Foo.<span style="color:#9900CC;">new</span>  <span style="color:#008000; font-style:italic;">#=&gt; &lt;Foo:0x10a0d51&gt;</span>
f.<span style="color:#9900CC;">hi</span>  <span style="color:#008000; font-style:italic;">#=&gt;NoMethodError: private method `hi' called for #&lt;Foo:0x10a0d51&gt; </span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Sending a message</span>
f.<span style="color:#9900CC;">send</span> <span style="color:#ff3333; font-weight:bold;">:hi</span> <span style="color:#008000; font-style:italic;">#  hi man</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Instantiating a method object</span>
f.<span style="color:#9900CC;">method</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#ff3333; font-weight:bold;">:hi</span><span style="color:#006600; font-weight:bold;">&#41;</span>.<span style="color:#9900CC;">call</span>  <span style="color:#008000; font-style:italic;"># hi man</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Using eval</span>
<span style="color:#CC0066; font-weight:bold;">eval</span> <span style="color:#996600;">&quot;f.hi&quot;</span>  <span style="color:#008000; font-style:italic;">#=&gt;NoMethodError: private method `hi' called for #&lt;Foo:0x10a0d51&gt;</span></pre></div></div>

<p><a href="http://sharethis.com/item?&wp=2.6.5&amp;publisher=b03ada35-99ad-4e2b-b2cd-5fde6c1820dd&amp;title=Ruby+dynamic+method+calling&amp;url=http%3A%2F%2Fwww.khelll.com%2Fblog%2Fruby%2Fruby-dynamic-method-calling%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/sharethis.com');">ShareThis</a></p>]]></content:encoded>
			<wfw:commentRss>http://www.khelll.com/blog/ruby/ruby-dynamic-method-calling/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Ruby introspection</title>
		<link>http://www.khelll.com/blog/ruby/ruby-introspection/</link>
		<comments>http://www.khelll.com/blog/ruby/ruby-introspection/#comments</comments>
		<pubDate>Fri, 05 Dec 2008 12:31:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		
		<category><![CDATA[Ruby]]></category>

		<category><![CDATA[metaprogramming]]></category>

		<category><![CDATA[introspection]]></category>

		<guid isPermaLink="false">http://www.khelll.com/blog/?p=3</guid>
		<description><![CDATA[Hi, this is my first blog post!, i&#8217;m already done of reading this artilce on groovy&#8217;s lang introspection , and i wanted to submit the equivalent one for ruby, so all you need now is to fire your irb and follow me  :

# Whats is your class?
&#160;
a = 5
b = &#34;Hello&#34;
&#160;
# Whats is your [...]<script type="text/javascript">SHARETHIS.addEntry({ title: "Ruby introspection", url: "http://www.khelll.com/blog/ruby/ruby-introspection/" });</script>]]></description>
			<content:encoded><![CDATA[<p>Hi, this is my first blog post!, i&#8217;m already done of reading <a title="groovy's introspection" href="http://noor.ojuba.org/2008/07/groovy-introspection-know-what-you-have/" onclick="javascript:pageTracker._trackPageview('/outbound/article/noor.ojuba.org');">this artilce</a> on groovy&#8217;s lang introspection , and i wanted to submit the equivalent one for ruby, so all you need now is to fire your irb and follow me <img src='http://www.khelll.com/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> :</p>

<div class="wp_syntax"><div class="code"><pre class="ruby ruby" style="font-family:monospace;"><span style="color:#008000; font-style:italic;"># Whats is your class?</span>
&nbsp;
a = <span style="color:#006666;">5</span>
b = <span style="color:#996600;">&quot;Hello&quot;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Whats is your class?</span>
<span style="color:#CC0066; font-weight:bold;">p</span> <span style="color:#996600;">&quot;Class of a : #{a.class} ,class of b : #{b.class}&quot;</span> <span style="color:#008000; font-style:italic;">#=&gt;&quot;Class of a : Fixnum ,class of b : String&quot;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Whats is your super class?</span>
<span style="color:#CC0066; font-weight:bold;">p</span> <span style="color:#996600;">&quot;Super class of a : #{a.class.superclass} ,super class of b : #{b.class.superclass}&quot;</span> <span style="color:#008000; font-style:italic;">#=&gt;&quot;Super class of a : Integer ,super class of b : Object&quot;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Is a.class = Fixnum ?</span>
a.<span style="color:#9900CC;">instance_of</span>? <span style="color:#CC00FF; font-weight:bold;">Fixnum</span> <span style="color:#008000; font-style:italic;">#=&gt; true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Is a of type Integer (does it have Integer in it's class hierarchy)?</span>
a.<span style="color:#9900CC;">is_a</span>? <span style="color:#CC0066; font-weight:bold;">Integer</span> <span style="color:#008000; font-style:italic;">#=&gt; true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Or this way:</span>
a.<span style="color:#9900CC;">kind_of</span>? <span style="color:#CC0066; font-weight:bold;">Integer</span> <span style="color:#008000; font-style:italic;">#=&gt; true</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Introspection, know all the details about classes :</span>
<span style="color:#008000; font-style:italic;"># List all ancestors(modules and classes) of a class</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">ancestors</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|a| <span style="color:#CC0066; font-weight:bold;">p</span> a<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># List all modules included in a class</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">included_modules</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">p</span> m<span style="color:#006600; font-weight:bold;">&#125;</span> 
&nbsp;
<span style="color:#008000; font-style:italic;"># Check class hierarchy</span>
<span style="color:#CC0066; font-weight:bold;">String</span> <span style="color:#006600; font-weight:bold;">&lt;</span> <span style="color:#CC00FF; font-weight:bold;">Comparable</span> <span style="color:#008000; font-style:italic;">#=&gt; true</span>
<span style="color:#CC0066; font-weight:bold;">String</span> <span style="color:#006600; font-weight:bold;">&lt;</span> <span style="color:#CC0066; font-weight:bold;">Integer</span> <span style="color:#008000; font-style:italic;">#=&gt; nil  , strings r not integers</span>
<span style="color:#CC00FF; font-weight:bold;">Object</span> <span style="color:#006600; font-weight:bold;">&lt;</span> <span style="color:#CC0066; font-weight:bold;">String</span> <span style="color:#008000; font-style:italic;">#=&gt; false , Not all objects are strings</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># List ancestors of class type</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">ancestors</span>.<span style="color:#CC0066; font-weight:bold;">select</span><span style="color:#006600; font-weight:bold;">&#123;</span>|a| a.<span style="color:#9966CC; font-weight:bold;">class</span>==<span style="color:#9966CC; font-weight:bold;">Class</span><span style="color:#006600; font-weight:bold;">&#125;</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|c| <span style="color:#CC0066; font-weight:bold;">p</span> c<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># List all methods available to an object</span>
b.<span style="color:#9900CC;">methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">p</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get public instance methods</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">public_instance_methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">p</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get protected instance methods</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">protected_instance_methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">p</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get private instance methods</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">private_instance_methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">p</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get class singleton methods</span>
<span style="color:#CC0066; font-weight:bold;">String</span>.<span style="color:#9900CC;">singleton_methods</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">puts</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get the instance variables of an object</span>
d = <span style="color:#CC00FF; font-weight:bold;">Date</span>.<span style="color:#9900CC;">new</span>
d.<span style="color:#9900CC;">instance_variables</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|i| <span style="color:#CC0066; font-weight:bold;">p</span> i<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get public instance methods</span>
d.<span style="color:#9900CC;">public_methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">puts</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get protected instance methods</span>
d.<span style="color:#9900CC;">protected_methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">puts</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get private instance methods</span>
d.<span style="color:#9900CC;">private_methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">puts</span> m<span style="color:#006600; font-weight:bold;">&#125;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Get instance singleton methods</span>
d.<span style="color:#9900CC;">singleton_methods</span>.<span style="color:#9900CC;">each</span><span style="color:#006600; font-weight:bold;">&#123;</span>|m| <span style="color:#CC0066; font-weight:bold;">puts</span> m<span style="color:#006600; font-weight:bold;">&#125;</span></pre></div></div>

<p>As for the Dynamic method calling introduced in that article , <a title="ruby dynamic method calling" href="http://www.khelll.com/blog/ruby/ruby-dynamic-method-calling/" >check this post</a>  <img src='http://www.khelll.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /> </p>
<p>*Update : Check <a href="http://www.khelll.com/blog/ruby/ruby-introspection-2/" >the second part article</a> of ruby introspection, for more info on this topic.</p>
<p><a href="http://sharethis.com/item?&wp=2.6.5&amp;publisher=b03ada35-99ad-4e2b-b2cd-5fde6c1820dd&amp;title=Ruby+introspection&amp;url=http%3A%2F%2Fwww.khelll.com%2Fblog%2Fruby%2Fruby-introspection%2F" onclick="javascript:pageTracker._trackPageview('/outbound/article/sharethis.com');">ShareThis</a></p>]]></content:encoded>
			<wfw:commentRss>http://www.khelll.com/blog/ruby/ruby-introspection/feed/</wfw:commentRss>
		</item>
	</channel>
</rss>
